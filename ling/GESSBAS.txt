#BeginSection(header)
	// 
	// GESSBAS - Generic Shorthand Font (Model) in Stolze-Schrey for VSTENO 
	// Set of rules interpreted and processed by VSTENO (www.vsteno.ch) 
	// (c) 2019 - Marcel Maci (m.maci@gmx.ch)
 	//
	// This program* is free software: you can redistribute it and/or modify it under	
	// the terms of the GNU General Public License as published by the Free Software
 	// Foundation, either version 3 of the License, or (at your option) any later
 	// version.
	//
 	// This program is distributed in the hope that it will be useful, but WITHOUT
	// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	// FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
	// details.
	// 
 	// You should have received a copy of the GNU General Public License along with
	// this program. If not, see <http://www.gnu.org/licenses/>.
 	//
	// * As explained in the documentation of VSTENO, shorthand models are considered
	// as interpreted code (and thus code licensed under the same terms as the main 
	// program).
	//
	// Model naming:
	// GE = General, SS = Stolze-Schrey, BAS = basic system (Grundsystem)
	//
	#BeginSubSection(session)
		// only font variables		
		// engine parameters
		"token_distance_wide" := "18";
		// spacer groups
		// L/R: left, right
		// M/N/P/K: minus, normal, plus (more or less space needed), circle (special space rules)
		// A/B/C/D/E: vertical delta of connection (A = baseline, B = 1/2 line, C = 1 line, D = 2 lines, E = 3 lines
		// main groups: (to reduce number of groups)
		// LK = LKA, LKB, LKC
		// LN = LNA, LNB, LNC
		// LP = LPA, LPB
		// RK = RKA, RKB, RKC
		// RN = RNA, RNB, RNC (low; high = RND and RNE are not regrouped!)
		// RP = RPA, RPB, RPC (idem)
		"spacer_token_combinations" := "
			C1:[LK,RK],
			C2:[LK,RN],		// RN = RNA / RNB / RNC
			C3:[LK,RND],
			C4:[LK,RNE],
			C5:[LK,RP],		// RP = RPA / RPB / RPC
			C6:[LK,RPD],
			C7:[LK,RPE],
			C8:[LMA,RK],
			C9:[LMA,RN],		// RN = RNA / RNB / RNC
			C10:[LMA,RND],
			C11:[LMA,RNE],
			C12:[LMA,RP],		// RP = RPA / RPB / RPC
			C13:[LMA,RPD],
			C14:[LMA,RPE],
			C15:[LN,RK],
			C16:[LN,RN],		// RN = RNA / RNB / RNC
			C17:[LN,RND],
			C18:[LN,RNE],
			C19:[LN,RP],		// RP = RPA / RPB / RPC
			C20:[LN,RPD],
			C21:[LN,RPE],
			C22:[LP,RK],
			C23:[LP,RN],		// RN = RNA / RNB / RNC
			C24:[LP,RND],
			C25:[LP,RNE],
			C26:[LP,RP],		// RP = RPA / RPB / RPC
			C27:[LP,RPD],
			C28:[LP,RPE]";
		"spacer_vowel_groups" := "
			V1:[A,E1,O,U],		// e1 = narrow e in english
			V2:[I,AU]";
		"spacer_rules_list" := "
			R1:[C1,V1,D1,?],
			R2:[C1,V2,D2,],
			R3:[C2,V1,D3,?],
			R4:[C2,V2,D4,],
			R5:[C3,V1,D5,?],
			R6:[C3,V2,D6,],
			R7:[C4,V1,D7,?],
			R8:[C4,V2,D8,],
			R9:[C5,V1,D9,?],
			R10:[C5,V2,D10,],
			R11:[C6,V1,D11,?],
			R12:[C6,V2,D12,],
			R13:[C7,V1,D13,?],
			R14:[C7,V2,D14,],
			R15:[C8,V1,D15,?],
			R16:[C8,V2,D16,],
			R17:[C9,V1,D17,?],
			R18:[C9,V2,D18,],
			R19:[C10,V1,D19,?],
			R20:[C10,V2,D20,],
			R21:[C11,V1,D21,?],
			R22:[C11,V2,D22,],
			R23:[C12,V1,D23,?],
			R24:[C12,V2,D24,],
			R25:[C13,V1,D25,?],
			R26:[C13,V2,D26,],
			R27:[C14,V1,D27,?],
			R28:[C14,V2,D28,],
			R29:[C15,V1,D29,?],
			R30:[C15,V2,D30,],
			R31:[C16,V1,D31,?],
			R32:[C16,V2,D32,],
			R33:[C17,V1,D33,?],
			R34:[C17,V2,D34,],
			R35:[C18,V1,D35,?],
			R36:[C18,V2,D36,],
			R37:[C19,V1,D37,?],
			R38:[C19,V2,D38,],
			R39:[C20,V1,D39,?],
			R40:[C20,V2,D40,],
			R41:[C21,V1,D41,?],
			R42:[C21,V2,D42,],
			R43:[C22,V1,D43,?],
			R44:[C22,V2,D44,],
			R45:[C23,V1,D45,?],
			R46:[C23,V2,D46,],
			R47:[C24,V1,D47,?],
			R48:[C24,V2,D48,],
			R49:[C25,V1,D49,?],
			R50:[C25,V2,D50,],
			R51:[C26,V1,D51,?],
			R52:[C26,V2,D52,],
			R53:[C27,V1,D53,?],
			R54:[C27,V2,D54,],
			R55:[C28,V1,D55,?],
			R56:[C28,V2,D56,]";
		"font_exportable_yesno" := "yes";
		"font_importable_yesno" := "no";
		"model_se_revision" := "0";
	#EndSubSection(session)
	#BeginSubSection(analyzer)
		// not needed for font
	#EndSubSection(analyzer)
#EndSection(header)
#BeginSection(font)
	#BeginSubSection(base)
		// This is the merged "superfont" containing all tokens and definitions necessary for german, spanish, french and english in Stolze-Schrey
		// This font was generated using font_diff.php tool
		// English (ENSSBAS) - as the last font developped - was taken as a base
		// The generated diffs for french (FRSSBAS), spanish (SPSSBAS) and german (DESSBAS) - a total of 15 pages - were printed out, analyzed
		// (in order to know whether and how discovered diffs should or have to be integrated) and finally added or discarded

		// diacritics
		"@#._." => {  /*hfile*/ 4.5,  0.5,  0,  0,  0,  0,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*d*/ 0,  0,  0.0,  1,  1.0,  0,  0,  0.5, /**/ 2.5,  -2.5,  0.5,  0,  1.0,  0,  1,  0.5, /**/ 5,  0,  0.5,  0,  1.0,  0,  0, }
		"@#/" => {  /*h*/ 4.5,  0.5,  0,  0,  0,  0,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*d*/ 0,  0,  0.0,  1,  1.0,  0,  0,  0, /**/ -5,  -4,  0.0,  0,  1.0,  0,  1,  0.0  }
		"@#_" => {  /*h*/ 4.5,  0.5,  0,  0,  0,  0,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*d*/ 0,  0,  0.0,  1,  1.0,  0,  0,  0, /**/ 5,  0,  0.0,  0,  1.0,  0,  1,  0.0  }
		"@#." => {  /*h*/ 4.5,  0.5,  0,  0,  0,  0,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*d*/ 0.5,  0,  0.5,  1,  1.0,  0,  0,  0.5, /**/ 0,  0.5,  0.5,  0,  1.0,  0,  1,  0.5, /**/ -0.5,  0,  0.5,  1,  1.0,  0,  0,  0.5, /**/ 0.5,  -0.5,  0.5,  0,  1.0,  0,  1,  0.5, /**/ 0.5,  0,  0.5,  0,  1.0,  0,  1,  0.5  }
		"@#/." => {  /*h:diacritics:pointhigh*/ 4.5,  0.5,  0,  0,  0,  0,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*d*/ 0.5,  0,  0.5,  1,  1.0,  0,  0,  0.5, /**/ 0,  0.5,  0.5,  0,  1.0,  0,  1,  0.5, /**/ -0.5,  0,  0.5,  1,  1.0,  0,  0,  0.5, /**/ 0.5,  -0.5,  0.5,  0,  1.0,  0,  1,  0.5, /**/ 0.5,  0,  0.5,  0,  1.0,  0,  1,  0.5  }	
		"@#/_" => {  /*h*/ 4.5,  0.5,  0,  0,  0,  0,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*d*/ 0,  0,  0.0,  1,  1.0,  0,  0,  0, /**/ 5,  0,  0.0,  0,  1.0,  0,  1,  0.0  }
		"@#O" => {  /*h*/ 4.5,  0.5,  0,  0,  0,  0,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*data*/ 0,  0,  0.5,  0,  1.0,  0,  1,  0.5, /**/ 1.25,  1.25,  0.5,  1,  1.0,  0,  0,  0.5, /**/ 0,  2.5,  0.5,  0,  1.0,  0,  1,  0.5, /**/ -1.25,  1.25,  0.5,  0,  1.0,  0,  1,  0.5, /**/ 0,  0,  0.5,  0,  1.0,  0,  1,  0.5  }
		"#D#" => { /*diacriticsdummytoken*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ /*diacritics*/ -2.5,  20,  0,  "@#._.",  0,  0,  0,  0, /*diacritics*/ -2.5,  20,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 0,  15,  0,  "@#O",  0,  0,  0,  0 }
		
		
		// numbers
		"0" => { /*spanisch*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 3.5, 1, 0, 0, 1, 5, 0, 0.5,  /**/ 6, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 17.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 17.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 3.5, 1, 0, 1, 1, 0, 0, 0,  /**/ 6, 2.5, 0, 0, 1, 5, 1, 0 }
		"1" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 11, 0, 0, 1, 5, 0, 0,  /**/ 7, 19, 0, 0, 1, 0, 0, 0,  /**/ 7, 1, 0, 0, 1, 0, 0, 0 }
		"2" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 14, 0, 0, 1, 5, 0, 0.5,  /**/ 1.25, 18, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5.75, 18, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 15, 0.5, 0, 1, 0, 0, 0,  /**/ 0, 1, 0, 0, 1, 0, 0, 0.5,  /**/ 7, 1, 0, 0, 1, 0, 0, 0 }
		"3" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 14, 0, 0, 1, 5, 0, 0.5,  /**/ 1.25, 18, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5.75, 18, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 15, 0.5, 0, 1, 0, 0, 0,  /**/ 3.5, 11, 0, 0, 1, 0, 0, 0.5,  /**/ 7, 7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 3.5, 1, 0, 1, 1, 0, 0, 0,  /**/ 0, 5, 0, 0, 1, 0, 1, 0 }
		"4" => { /*header*/ 7, 0, 0, 0, 6, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 3, 19, 0, 0, 1, 5, 0, 0,  /**/ -2, 11, 0, 0, 1, 0, 0, 0.5,  /**/ 7, 11, 0, 0, 1, 0, 0, 0,  /**/ 5.5, 19, 0, 0, 1, 5, 0, 0,  /**/ 5.5, 1, 0, 0, 1, 0, 0, 0 }
		"5" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 7, 19, 0, 0, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 0,  /**/ 0, 11, 0, 0, 1, 0, 0, 0.5,  /**/ 6, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4, 0.5, 0, 1, 0, 0, 0 }
		"6" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 7, 19, 0, 0, 1, 5, 0, 0.5,  /**/ 1, 11, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.5, 2, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 2, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 10, 0.5, 1, 1, 0, 0, 0.5,  /**/ 0, 5, 0.5, 0, 1, 0, 1, 0 }
		"7" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 0, 1, 5, 0, 0,  /**/ 7, 19, 0, 0, 1, 0, 0, 0,  /**/ 3, 1, 0, 0, 1, 0, 0, 0,  /**/ 3.5, 11, 0, 0, 1, 5, 0, 0,  /**/ 6.5, 11, 0, 0, 1, 0, 0, 0 }
		"8" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 3.5, 11, 0, 0, 1, 5, 0, 0.5,  /**/ 7, 15, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 15, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 11, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 6, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 6, 0.5, 0, 1, 0, 0, 0,  /**/ 3.5, 11, 0, 1, 1, 0, 0, 0 }
		"9" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 7, 14, 0, 0, 1, 5, 0, 0.5,  /**/ 3.5, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 15, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 15, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 6, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 1, 0.5, 0, 1, 0, 0, 0 }

		// abbreviations
		"IST" => { /*header*/ 1, 0.5, 0, 0.5, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0.5, 9.5, 0.5, 1, 1, 0, 0, 0.5,  /**/ 1, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0.5, 10.5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 0, 10, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0.5, 9.5, 0.5, 0, 3, 0, 1, 0 }
		"ES" => { /*header*/ 1, 0.5, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 0, 0, 0,  /**/ 2, 6, 0, 0, 1, 0, 1, 0 }
		"EST" => { /*spanisch*/ 1, 0.5, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, "LPB:LP", /*data*/ 0.5, 5.25, 0, 1, 1, 0, 0, 0,  /**/ 0, -0.05, 0, 0, 1, 0, 1, 0, /*diacritics*/ -10,  10,  0,  "@#/_",  0,  0,  0,  0 }

		"IL" => { /*french*/ 1, 0.5, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPB:LP", /*data1*/ 0, 0, 0, 1, 1, 0, 0, 0,  /*2*/ 4, 5, 0, 0, 1, 0, 1, 0, /*diacritics*/ -10,  10,  0,  "@#/_",  0,  0,  0,  0 }

		"ILS" => { /*french*/ 1, 0.5, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, "LPB:LP", /*data1*/ 0, 0, 0, 1, 1, 0, 0, 0,  /*2*/ 4, 5, 0, 0, 1, 0, 1, 0, /*diacriticsdirectlyincludedduetobug*/ -2, 10, 0, 0, 1, 5, 0, 0, /**/ 3, 10, 0, 0, 1, 0, 1, 0  }		
		"NO" => { /*header*/ 1, 0.5, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 0, 0, 0,  /**/ 6, -5, 0, 0, 1, 0, 1, 0 }
		"WAS" => { /*header*/ 5, 0.5, 0, 0.5, 2, 1, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 1.5, 8.5, 0.5, 1, 1, 0, 0, 0.5,  /**/ 2.25, 9.25, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 5, 10, 0.5, 98, 1.5, 0, 0, 0.5,  /**/ 2.25, 9.25, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 1.5, 8.5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 6, 0.5, 0, 3, 0, 0, 0.5,  /**/ 0.5, 2, 0.5, 0, 3, 0, 0, 0.5,  /**/ 4.25, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 8, 2, 0.5, 0, 1, 0, 1, 0 }
		"AUCH" => { /*header*/ 5, 1, -1, 0.5, 0.5, 0.5, 0, 0, 0, 0, "", "", 1, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 8.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 4.2, 10, 0.7, 2, 1.75, 0, 0, 0.5,  /**/ 7.8, 5.6, 0.5, 0, 2.25, 0, 0, 0.5,  /**/ 6.85, -5.2, 0.5, 0, 1.6, 0, 0, 0.5,  /**/ 5.5, -8, 0.5, 0, 1.15, 0, 0, 0.5,  /**/ 4, -10, 0.5, 0, 1, 0, 99, 0.5, /**/ 0, -8, 0.5, 0, 1, 0, 1, 0.5, /**/ 1.5, -5, 0.5, 0, 1, 0, 1, 0.5 }
		"ICH" => { /*specialtokenich*/ 6, 1, -1, 0.5, 0.5, 2.5, 0, 0, 0, 0, "", "", 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ -1, -10, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ -0.75, -2, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 2, 8.5, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 7.2, 10, 0.7, 2, 1.75, 0, 0, 0.5,  /**/ 10.8, 5.6, 0.5, 0, 2.25, 0, 0, 0.5,  /**/ 11.85, -5.2, 0.5, 0, 1.6, 0, 0, 0.5,  /**/ 9.75, -9.0, 0.5, 0, 1.15, 0, 0, 0.5,  /**/ 6, -10, 0.5, 0, 1, 0, 99, 0.5, /**/ 3, -8, 0.5, 0, 1, 0, 1, 0.5, /**/ 4.5, -5, 0.5, 0, 1, 0, 1, 0.5 }
		"TIG" => { /*header*/ 7.5, 0.5, 0, 0.5, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 5, 18.75, 0.5, 1, 1.5, 0, 0, 0,  /**/ 6, 20, 0.5, 2, 2.5, 0, 0, 0.5,  /**/ 7.5, 18, 0.5, 0, 3, 0, 0, 0,  /**/ 7.5, 10, 0, 0, 1, 0, 1, 0,  /**/ 7.5, 12.5, 0, 4, 1, 0, 0, 0 }
		"NICHT" => { /*header*/ 15, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 2.75, 4, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4, 5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 6.5, 4.75, 0.5, 0, 2, 0, 0, 0.5,  /**/ 7.75, 4, 0.5, 0, 3, 0, 0, 0.5,  /**/ 11.65, 1.2, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 12.5, 0.5, 0.5, 4, 1.5, 0, 0, 0.5, /**/ 14, 0, 0.5, 0, 1.5, 0, 2, 0.5, /**/ 15, 1.75, 0.5, 0, 1, 0, 1, 0.5 }
		"ALL" => { /*header*/ 5, 0.5, 0, 0.5, 0.75, 2, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3, 7, 0.5, 2, 1.25, 0, 0, 0.5,  /**/ 1.1, 10, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 7, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 1.75, 0, 0, 0,  /**/ 2.5, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 5.25, 0.75, 0.5, 0, 1, 0, 1, 0 }
		"WERD" => { /*header*/ 3, 0.5, 0, 0.5, 0, 2, 0, 0, 0, 0, "", "", 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNB:LN", /*data*/ 0, 5, 0, 1, 3, 0, 0, 0,  /**/ 0, 2, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, 0, 0.5, 0, 1.0, 0, 2, 0.5, /**/ 4.5, 1, 0.5, 0, 1.0, 0, 1, 0.5 }
		"IN" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0,"", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0, "LNA:LN:RNB:RN", /*data*/ -0.25, 3.75, 0, 1, 1, 0, 0, 0,  /**/ 3, 5, 0, 0, 2.5, 0, 0, 0,  /**/ 2, 0, 0, 0, 1, 0, 0, 0,  /**/ 5.5, 1, 0, 0, 1, 0, 1, 0 }
		"IN1" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0,"", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0, "LNA:LN:RNB:RN", /*data*/ -0.25, 4.25, 0, 1, 1, 0, 0, 0,  /**/ 3, 5, 0, 0, 2.5, 0, 0, 0,  /**/ 2, 0, 0, 0, 1, 0, 0, 0,  /**/ 5.5, 1, 0, 0, 1, 0, 1, 0 }
		"IN-" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0,"", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0, "LNA:LN:RNB:RN", /*data*/ -0.25, 3.75, 0, 1, 1, 0, 0, 0,  /**/ 3, 5, 0, 0, 2.5, 0, 0, 0,  /**/ 2, 0, 0, 0, 1, 0, 2, 0,  /**/ 5.5, 1, 0, 0, 1, 0, 1, 0 }
		"-IN" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0,"", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0, "LNA:LN:RNB:RN", /*data*/ -0.25, 3.75, 0, 1, 1, 0, 0, 0,  /**/ 3, 5, 0, 2, 2.5, 0, 0, 0,  /**/ 2, 0, 0, 0, 1, 0, 0, 0,  /**/ 5.5, 1, 0, 0, 1, 0, 1, 0 }
		
		"LES" => { /*spanish*/ 3, 0.5, 0, 0, 0, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPA:RP", /*data*/ 0, 5, 0, 1, 3, 0, 0, 0,  /**/ 0, 1.5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1.2, 0, 2, 0,  /**/ 3.5, 1, 0.5, 0, 1.2, 0, 1, 0 }
		"SEIN" => { /*header*/ 20, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNB:LN:RNB:RN", /*data*/ 0, 0, 0, 1, 1, 0, 0, 0.5,  /**/ 2, 3.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 15, 3.5, 0.5, 0, 2.25, 0, 0, 0.5,  /**/ 19, 1, 0.5, 0, 2.5, 0, 0, 0,  /**/ 20, 0, 0, 0, 1, 0, 1, 0 }
		"SEIN@VR" => { /*header*/ 20, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNB:LN:RNB:RN", /*data*/ 0, 0, 0, 1, 1, 0, 0, 0.5,  /**/ 2, 3.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 15, 4.5, 0.5, 0, 2.25, 0, 0, 0.5, /**/ 17, 2, 0.5, 0, 2.25, 0, 0, 0.5,  /**/ 14.5, 0, 0.5, 0, 2.25, 0, 0, 0.5, /**/ 12, 2.5, 0.5, 0, 2.25, 0, 0, 0.5, /**/ 14.5, 5, 0.5, 0, 2.25, 0, 1, 0.5 }
		"GEGEN" => { /*header*/ 8, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RNC:RN", /*data*/ 0.5, 7.5, 0.5, 1, 1, 0, 0, 0,  /**/ 1.5, 10, 0.5, 2, 1, 0, 0, 0.5,  /**/ 4, 8, 0.5, 0, 1, 0, 0, 0,  /**/ 4, 4.5, 0, 0, 1, 0, 0, 0.5,  /**/ 6.25, 5.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 3, 0, 0, 1, 0, 0, 0,  /**/ 8, 0, 0, 0, 1, 0, 1, 0 }
		"HAB" => { /*header*/ 4, 0.5, 0, 0, 1.5, 1.5, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPC:RP", /*data*/ 0, 10, 0, 1, 2.5, 0, 0, 0.0,  /**/ 0, 2.5, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 4, 1, 0.5, 0, 1, 0, 1, 0 }
		"HAT" => { /*header*/ 4.5, 0.5, 0, 0.5, 1, 1, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNB:LN:RNC:RN", /*data*/ -1, 8.75, 0.5, 1, 1.0, 0, 0, 0,  /**/ 1, 10, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 3.5, 7.5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3.5, 1.5, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 1.5, 0, 0.5, 0, 1.25, 0, 0, 0.5,  /**/ 0, 1, 0.5, 0, 1, 0, 99, 0.5,  /**/ 0, 2, 0.5, 0, 1, 0, 1, 0 }
		"DA" => { /*header*/ 0, 0.5, 0, 0, 0, 2.25, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPC:RP", /*data*/ 0, 10, 0, 1, 2.5, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0,  /**/ 0, 2.5, 0, 4, 1, 0, 0, 0 }
		"SIND" => { /*header*/ 2.5, 0.5, 0, 0.5, 1, 2.5, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, "", "", "", 0, "LPA:LP:RPB:RP", /*data*/ 0, 5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 7.75, 6.2, 0.5, 2, 2, 0, 0, 0.5,  /**/ 1.1, 10, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 7, 0.5, 0, 3, 0, 0, 0.5,  /**/ -0.14, 0.5, 0.5, 0, 1, 0, 0, 0 }
		"VOR" => { /*header*/ 5, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 2.5, 5, 0, 0, 0, 0, 0, 0, "LKB:LK:RNC:RN", /*data*/ 0, 10, 0, 1, 1, 0, 0, 0.5,  /**/ 0, 6.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.25, 5.75, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 1, 3, 0, 0, 0.5,  /**/ 5, 2.5, 0.7, 0, 3, 0, 0, 0.7,  /**/ 2.5, 0, 0.7, 0, 1, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 1, 0 }
		"VORAR" => { /*header*/ 8, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0.5, 2.5, 5, 0, 0, 0, 0, 0, 0, "LKB:LK:RNC:RN", /*data*/ 0, 10, 0, 1, 1, 0, 0, 0.5,  /**/ 0, 6.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.25, 5.75, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 5, 0.5, 1, 3, 0, 0, 0.5,  /**/ 8, 2.5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 5.5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5.5, 5, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 7.5, 0.5, 0, 1, 0, 0, 0,  /**/ 5.5, 10, 0.5, 0, 1, 0, 0, 0,  /**/ 3, 7.5, 0.5, 0, 1, 0, 0, 0,  /**/ 5.5, 5, 0.5, 0, 1, 0, 1, 0 }
		"ANT" => { /*header*/ 29, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 4, 4.75, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 7, 5, 0.5, 0, 2, 0, 0, 0.5,  /**/ 11, 4, 0.5, 0, 3, 0, 0, 0.5,  /**/ 17.75, 1, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 22, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 24, 0.75, 0.5, 0, 1, 0, 1, 0 }
		"RÜCK" => { /*header*/ 8, 0.5, 0, 0.5, 2, 2, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK:RKA:RK", /*data*/ 2.5, 0, 0.5, 1, 1, 0, 0, 0.7,  /**/ 5, 2.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 2.5, 5, 0.7, 0, 2.0, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 2.0, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 1, 0 }
		"RÜCK5" => { /*header*/ 8, 0.5, 0, 0.5, 2, 2, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK:RKA:RK", /*data*/ 2.5, 0, 0.5, 1, 1, 0, 0, 0.7,  /**/ 5, 2.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 2.5, 5, 0.7, 0, 2.0, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 2.0, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 0, 0, /**/ 5, 2.5, 0.5, 0, 1, 0, 1, 0 }
		"UR" => { /*header*/ 5, 0.5, 0, 0, 0, 1, 0, 0, 0, 0, "", "", 1, 0, 0, 2.5, 5, 0, 0, 0, 0, 0, 0, "LKB:LK:RNC:RN", /*data*/ -2, 10, 0, 1, 2.5, 0, 0, 0.5,  /**/ 3, 5, 0.5, 0, 1, 0, 0, 0.7,  /**/ 5, 2.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 2.5, 0, 0.7, 0, 1, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 1, 0 }
		"ANTI" => { /*header*/ 25, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 4, 4.5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 8, 5, 0.5, 0, 2, 0, 0, 0.5,  /**/ 11, 4, 0.5, 0, 3, 0, 0, 0.5,  /**/ 18, 1, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 22, 0, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 22.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 23.5, 2, 0.5, 0, 1, 0, 0, 0.5,  /**/ 24.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 23.5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 22.5, 1, 0.5, 0, 1, 0, 1, 0 }
		"ZURÜCK" => { /*header*/ 5, 0.5, 0, 0.5, 2, 1, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK", /*data*/ -3, -10, 0.5, 1, 1, 0, 0, 0.5,  /**/ 1.5, -5.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4.25, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 2.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 2.5, 5, 0.7, 0, 1.45, 0, 0, 0.5,  /**/ 1, 5, 0.5, 0, 2.15, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 2.25, 0, 0, 0.5,  /**/ 1, 1, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 0, 0,  /**/ 3.5, 0, 0.5, 1, 1, 0, 1, 0 }
		"INTER" => { /*header*/ 5, 0.5, 0, 0.5, 2, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK", /*data*/ -2, -4, 0.5, 1, 1, 0, 0, 0.5,  /**/ 1.5, -3, 0.5, 2, 1, 0, 0, 0.5,  /**/ 4, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 2.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 2.5, 5, 0.7, 0, 3, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 3, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 0, 0,  /**/ 3.5, 0, 0.5, 1, 1, 0, 1, 0 }
		"_INTER" => { /*header*/ 5, 0.5, 0, 0.5, 2, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK", /*data*/  1.5, -3, 0.5, 1, 1, 0, 0, 0.5,  /**/ 4, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 2.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 2.5, 5, 0.7, 0, 3, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 3, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 0, 0,  /**/ 3.5, 0, 0.5, 1, 1, 0, 1, 0 }
		"ION" => { /*header*/ 25, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 4, 4.5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 8, 5, 0.5, 0, 2, 0, 0, 0.5,  /**/ 11, 4, 0.5, 0, 3, 0, 0, 0.5,  /**/ 18, 1, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 22, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 25, 2, 0.0, 0, 1, 0, 1, 0, /*diacritics*/ 16,  7.5,  0,  "@#/_",  0,  0,  0,  0 }
		"ON" => { /*header:french*/ 25, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 4, 4.5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 8, 5, 0.5, 0, 2, 0, 0, 0.5,  /**/ 11, 4, 0.5, 0, 3, 0, 0, 0.5,  /**/ 18, 1, 0.5, 0, 2.5, 0, 0, 0.5, /**/ 22, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 25, 2, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 1,  8,  0,  "@#/.",  0,  0,  0,  0, /*diacritics*/ 3,  -2,  0,  "@#.",  0,  0,  0,  0 }
		"_ON" => { /*header:french*/ 25, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ /**/ 7, 5, 0.5, 1, 2, 0, 0, 0.5,  /**/ 11, 4, 0.5, 0, 3, 0, 0, 0.5,  /**/ 18, 1, 0.5, 0, 2.5, 0, 0, 0.5, /**/ 22, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 25, 2, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 1,  8,  0,  "@#/.",  0,  0,  0,  0, /*diacritics*/ 3,  -2,  0,  "@#.",  0,  0,  0,  0 }
		"HAFT" => { /*header*/ 4, 0.5, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 0, 10, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3, 17, 0.5, 2, 1.0, 0, 0, 0.5,  /**/ 1.8, 20, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 18, 0.5, 0, 2.4, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 2, 0, 0.5, 4, 1.0, 0, 0, 0.5,  /**/ 2, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 4, 2, 0.5, 0, 1, 0, 1, 0 }
		"SCHAFT" => { /*header*/ 20, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, 5, 0, 1, 1.5, 0, 0, 0.5,  /**/ 0.75, 3, 0.5, 0, 3, 0, 0, 0.5,  /**/ 19.25, 2.5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 20, 0, 0.5, 0, 1, 0, 1, 0 }
		"&SCHAFT" => { /*header*/ 20, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 17.75, 2.5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 20, 0, 0.5, 0, 1, 0, 1, 0 }
		"TALL" => { /*header*/ 3, 0.5, 0, 0.5, 0.75, 0.75, 0, 0, 0, 0, "", "", 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 5, 15, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 7, 18.5, 0.5, 2, 2, 0, 0, 0.5,  /**/ 6.1, 20, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 5, 17, 0.5, 0, 3, 0, 0, 0.5,  /**/ 5, 12, 0.5, 0, 2.5, 0, 0, 0,  /**/ 7, 10, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 8, 12, 0.5, 0, 1, 0, 1, 0 }
		"TUNG" => { /*header*/ 8, 0.5, 0, 0.5, 2, 1, 0, 0, 0, 0, "", "", 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, /*data*/ 7, 18, 0.5, 1, 1.3, 0, 0, 0.5,  /**/ 8, 19.5, 0.5, 0, 1.3, 0, 0, 0.5,  /**/ 9, 20, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 8, 19.5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 7, 18, 0.5, 0, 3, 0, 0, 0.5,  /**/ 7, 11.5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 6, 10, 0.5, 0, 1.5, 0, 99, 0.5,  /**/ 5, 12, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 7, 14, 0.5, 0, 1, 0, 1, 0 }
		"AUF" => { /*header*/ 9, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNB:LN:RNB:RN", /*data*/ -1.5, 5, 0, 1, 2.5, 0, 0, 0.5,  /**/ 1.5, 2, 0.5, 0, 2, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7.5, 2, 0.5, 0, 1, 0, 2, 0.5,  /**/ 9, 5, 0.5, 0, 1, 0, 1, 0 }
		"AUF2" => { /*header2ndpart*/ 4, 0.5, 0, 0, 0, 2, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNB:LN:RNB:RN", /*data*/ 0, 0, 0.5, 1, 1, 0, 0, 0.5,  /**/ 2.5, 2, 0.5, 0, 1, 0, 2, 0.5,  /**/ 4, 5, 0.5, 0, 1, 0, 1, 0 }
		"AUF-" => { /*header*/ 9, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNB:LN:RNB:RN", /*data*/ 0, 5, 0, 1, 2.5, 0, 0, 0.5,  /**/ 2.5, 2, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 7, 0, 0.5, 0, 1, 0, 1, 0.5 }
		"OFF" => { /*english*/ 9, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNB:LN:RNB:RN", /*data*/ 0, 5, 0, 1, 3, 0, 0, 0.5,  /**/ 2, 2, 0.5, 0, 2, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7.5, 2, 0.5, 0, 1, 0, 2, 0.5,  /**/ 9, 5, 0.5, 0, 1, 0, 1, 0 }
		"OLTRE" => { /*italian*/ 11.5, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNB:LN:RNB:RN", /*data*/ 0, 5, 0, 1, 1, 0, 0, 0.5,  /**/ 2.75, 2, 0.5, 0, 2, 0, 0, 0.5,  /**/ 9, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 11.5, 2, 0.5, 0, 1, 0, 2, 0.5,  /**/ 9, 5, 0.5, 0, 1, 0, 0, 0, /**/ 6.5, 2.5, 0.5, 0, 1, 0, 0, 0, /**/ 9, 0, 0.5, 0, 1, 0, 1, 0 }
		"AUS" => { /*header*/ 20, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNA:RN", /*data*/ 0, 0, 0, 1, 1, 0, 0, 0.5,  /**/ 3, 3, 0.5, 0, 1, 0, 0, 0.5,  /**/ 10, 5, 0.5, 2, 1.35, 0, 0, 0.5,  /**/ 15.5, 3.25, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 19, 1, 0.5, 0, 2.75, 0, 0, 0.0,  /**/ 20, 0, 0, 0, 1, 0, 1, 0 }
		"-AUS" => { /*header*/ 20, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "RNB:RN", /*data*/ 9.5, 5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 15.5, 3, 0.5, 0, 2.1, 0, 0, 0.5,  /**/ 19, 1, 0.5, 0, 2.75, 0, 0, 0.5,  /**/ 20, 0, 0.5, 0, 1, 0, 1, 0 }
		// BEI (special case): the original german variant has been replaced bei spanish version (a little bit larger - define two different tokens if not acceptable in german)
		"BEI" => { /*header:differentinspanish*/ 23, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, 5, 0, 1, 3, 0, 0, 0.5,  /**/ 6, 2, 0.5, 0, 2, 0, 0, 0.5,  /**/ 13.5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 17.5, 0.2, 0.5, 0, 1, 0, 2, 0.5,  /**/ 23, 5, 0.5, 0, 1, 0, 1, 0 }
		"#BEI#" => { /*header:differentinspanish*/ 23, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, 5, 0, 1, 3, 0, 0, 0.5,  /**/ 6, 2, 0.5, 0, 2, 0, 0, 0.5,  /**/ 13.5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 20, 2, 0.5, 0, 1, 0, 2, 0.5,  /**/ 23, 5, 0.5, 0, 1, 0, 1, 0 }
		"BEI+AR" => { /*header*/ 25, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK:RNB:RN", /*data*/ 0, 5, 0, 1, 3, 0, 0, 0.5,  /**/ 5, 2, 0.5, 0, 2, 0, 0, 0.5,  /**/ 11, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 19, 0, 0.5, 0, 1, 0, 0, 0.5, /**/ 21.5, 2.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 19, 5, 0.5, 0, 1, 0, 0, 0.5, /**/ 16.5, 2.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 19, 0, 0.5, 0, 1, 0, 0, 0.5, /**/ 20.5, 0.2, 0.5, 0, 1, 0, 2, 0.5,  /**/ 25, 5, 0.5, 0, 1, 0, 1, 0 }
		"CONTRE" => { /*header*/ 25, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK:RNB:RN", /*data*/ 0, 5, 0, 1, 3, 0, 0, 0.5,  /**/ 5, 2, 0.5, 0, 2, 0, 0, 0.5,  /**/ 11, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 19, 0, 0.5, 0, 1, 0, 0, 0.5, /**/ 23.5, 2.0, 0.5, 0, 1, 0, 0, 0.5, /**/ 21, 5, 0.5, 0, 1, 0, 0, 0.5, /**/ 18, 3.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 21.5, 0.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 22, 1.5, 0.5, 0, 1, 0, 1, 0.5  }
		"DURCH" => { /*header*/ 10, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPC:RP", /*data*/ 3, 10, 0, 1, 1, 0, 0, 0.3,  /**/ 0.5, 5, 0.3, 0, 1, 0, 0, 0,  /**/ 8, 0, 0, 0, 1, 0, 1, 0 }
		"DIS" => { /*header*/ 8, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ -2, 0, 0, 1, 1, 0, 0, 0.5,  /**/ -2, 8.25, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 10, 0.5, 0, 1, 0, 0, 0,  /**/ 6.5, 5, 0, 0, 1, 0, 1, 0, /*diacritics*/ 5,  1,  0,  "@#.",  0,  0,  0,  0, }
		"DIS@VR" => { /*header*/ 8, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 0, 0, 0.5,  /**/ -1, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6.5, 7.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 4,  5,  0,  0,  0,  0,  0,  0, /**/ 1.5,  7.5,  0.5,  0,  0,  0,  0,  0.5, /**/ 4,  9.5,  0.5,  0,  0,  0,  1,  0 }	
		"SICH" => { /*header*/ 11.75, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 5, 0, 1, 1, 0, 0, 0.5,  /**/ 2, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 9.5, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 5, 0, 0, 1, 0, 1, 0 }
		"SOLCH" => { /*header*/ 15, 1, -1, 0.5, 0.5, 0.5, 0, 0, 0, 0, "", "", 0, 0, -0.5, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNA:RN", /*data*/ 0, 0, 0, 1, 1, 0, 0, 0.5,  /**/ 2.5, 4, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5.5, 4, 0, 0, 1, 0, 0, 0,  /**/ 9, 0, 0, 0, 1, 0, 0, 0,  /**/ 10, 3.5, 0, 1, 1.3, 0, 0, 0.5,  /**/ 12.5, 5, 0.7, 2, 2.5, 0, 0, 0.8,  /**/ 15, 2, 0.8, 0, 3, 0, 0, 0.5,  /**/ 15, -13, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 13, -15, 0.5, 0, 2, 0, 99, 0.5,  /**/ 11.5, -14, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 10, -12, 0.5, 0, 1, 0, 2, 0.5,  /**/ 13, -7, 0.5, 0, 1, 0, 1, 0.5,  /**/ 15, -2.5, 0, 4, 1, 0, 0, 0 }
		"WIRD" => { /*header*/ 5, 0.5, 0, 0.5, 2, 1, 0, 0, 0, 0, "", "", 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0.5, 1, 1, 0, 0, 0.5,  /**/ 3.5, 2, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 7.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 2.5, 10, 0.7, 0, 3, 0, 0, 0.5,  /**/ 0, 7.5, 0.7, 0, 3, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 0, 0,  /**/ 5, 5, 0.5, 1, 1, 0, 1, 0 }
		"SELB" => { /*header*/ 4, 0.5, 0, 0.5, -1, 0, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, "LNA:LN:RNA:RN", /*data*/ 0.5, 0.5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 1.0, 1.25, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 0.5, 2, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 0, 1.5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 0.5, 0.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 2, 0.5,  /**/ 5, 2, 0.5, 0, 1, 0, 1, 0 }
		"PLUS" => { /*francais_tokenwiderthannecessarytosavespacerrules*/ 12, 0.5, 0, 0.5, -1, 0, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, "LNA:LN:RNA:RN", /*data*/ 0, 0, 0.5, 1, 1.0, 0, 0, 0.5, /**/ 6.5, 0, 0.5, 0, 1.0, 0, 0, 0.5, /**/ 7, 0.5, 0.5, 0, 1.15, 0, 0, 0.5, /**/ 8.15, 1, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 7, 2.35, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 6.35, 1, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 7, 0.25, 0.5, 0, 1.0, 0, 0, 0.5, /**/ 7.75, 0.2, 0.5, 0, 1.0, 0, 1, 0.5  }
		"WO" => { /*header*/ 7, 0.5, 0, 0.5, 0.5, 0.5, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPC:RP", /*data*/ 1.5, 8.5, 0.5, 1, 1, 0, 0, 0.5,  /**/ 2.25, 9.25, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 5, 10, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 2.25, 9.25, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 1.5, 8.5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ -0.75, 6, 0.5, 0, 3, 0, 0, 0.5,  /**/ 1, 2, 0.5, 0, 3, 0, 0, 0.5,  /**/ 2.5, 1.5, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 8, 2.0, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 8.5, 0, 0.5, 0, 1, 0, 1, 0 }
		"VILLEICHT" => { /*header*/ 5, 0.5, 0, 0.5, 0.75, 0.75, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 2, 8.5, 0.5, 2, 2, 0, 0, 0.5,  /**/ 1.1, 10, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 7, 0.5, 0, 3, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 2.5, 0, 0, 0,  /**/ 2, 0, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 12, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2, 20, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 17, 0.5, 0, 1, 0, 1, 0 }
		"TOT" => { /*header:french*/ 5, 0.5, 0, 0.5, 0.75, 0.75, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 7, 12, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2, 20, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 17, 0.5, 0, 1, 0, 1, 0 }
		"HEIT" => { /*header*/ 24, 0, 1.5, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 24, 20, 0, 1, 1, 0, 0, 0,  /**/ 24, 20, 0, 0, 1, 0, 1, 0, /*diacritics*/ 15,  25,  0,  "@#/_",  0,  0,  0,  0,}
		"HEIT-1" => { /*header*/ 24, 0, 1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 24, 20, 0, 1, 1, 0, 0, 0,  /**/ 24, 20, 0, 0, 1, 0, 1, 0 }
		"HEIT&UL" => { /*header*/ 21, 0, 2, 0.5, 0, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 21, 20, 0, 1, 1, 0, 0, 0,  /**/ 21, 20, 0, 0, 1, 0, 1, 0 }
		"FORT" => { /*header*/ 8, 0.5, 0, 0, 1, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RNC:RN", /*data*/ 5, 10, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 8, 17, 0.5, 2, 2, 0, 0, 0.5,  /**/ 6.8, 20, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 5, 18, 0.5, 0, 3, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 3, 0, 0, 0.5,  /**/ 5, -5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 4.25, -9, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1.5, -9.25, 0.5, 0, 1.5, 0, 99, 0.5,  /**/ 0.75, -7, 0.5, 0, 1, 0, 2, 0.5,  /**/ 5, 2.5, 0.5, 4, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }
		"\" => { /*header*/ 3, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0 }
		

		// distances
		"#0" => { /*header*/ 0, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, "",  /**/ "", "", "", 0, 2, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#S#" => { /*header*/ 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 3, 0, 0, 0, 1, 5, 1, 0 }
		"#1" => { /*header*/ 1, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#2" => { /*header*/ 2, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#3" => { /*header*/ 3, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#4" => { /*header*/ 4, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#5" => { /*header*/ 5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#6" => { /*header*/ 6, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#7" => { /*header*/ 7, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#8" => { /*header*/ 8, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#9" => { /*header*/ 9, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#10" => { /*header*/ 10, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#1-" => { /*header*/ -1, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#2-" => { /*header*/ -2, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#3-" => { /*header*/ -3, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#4-" => { /*header*/ -4, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#5-" => { /*header*/ -5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#6-" => { /*header*/ -6, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#7-" => { /*header*/ -7, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#8-" => { /*header*/ -8, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#9-" => { /*header*/ -9, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }

		// tokens
		"SCHM" => { /*header*/ 6, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 2, 9, 0.5, 1, 1, 0, 0, 0.5,  /**/ 4, 10, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 6, 9, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 5, 5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 3, 2.5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 3, 1.5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 5, 0.5, 0.5, 0, 3, 0, 0, 0,  /**/ 5, -8, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1.5, -9.25, 0.5, 0, 1.5, 0, 99, 0.5,  /**/ 0.75, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }
		"SCHW" => { /*header*/ 7, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPD", /*data*/ 5, 16.5, 0.5, 1, 1, 0, 0, 0.5,  /**/ 6, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 9.5, 20, 0.5, 98, 1.5, 0, 0, 0.5,  /**/ 6, 19, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 5, 16.5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 5, -8, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1.5, -9.25, 0.5, 0, 1.5, 0, 99, 0.5,  /**/ 0.75, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }
		"MPF" => { /*header*/ 6, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNC:LN:RNA:RN", /*data*/ 0, 9, 0.5, 1, 1.0, 0, 0, 0,  /**/ 1.5, 10, 0.5, 2, 1.75, 0, 0, 0.5,  /**/ 3, 8, 0.5, 0, 2.3, 0, 0, 0.5,  /**/ 3, 2, 0.5, 0, 1.75, 0, 0, 0,  /**/ 4.5, 0, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 5.75, 2, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4.5, 3.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.5, 3.4, 0.5, 0, 1, 0, 0, 0.8,  /**/ 0.2, 2.6, 0.8, 0, 1, 0, 0, 0.5,  /**/ 1.5, 2, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4.5, 2, 0.5, 0, 1, 0, 2, 0.5,  /**/ 5.75, 2, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ -7,  15,  0,  "@#/_",  0,  0,  0,  0 }
		"SCH" => { /*header*/ 9, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPC:RP", /*data*/ 5, 8, 0.5, 1, 1, 0, 0, 0.5,  /**/ 6.25, 9, 0.5, 0, 1, 0, 0, 0.5,  /**/ 9, 10, 0.5, 98, 1.5, 0, 0, 0.5,  /**/ 6.25, 9, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 5, 7, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 5, -8, 0.5, 0, 1.95, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 1.5, -9.25, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 0.75, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0.5,  /**/ 5, 2.5, 0.5, 4, 1, 0, 0, 0.5 }
		"SCH." => { /*header*/ 0, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ -2, 5, 0.5, 1, 1, 0, 0, 0.5, /**/0.5, 9.5, 0.5, 0, 1, 0, 1, 0.5 }
		"SCH.1" => { /*header*/ 0, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 0, 9, 0.5, 1, 1, 0, 1, 0.5 }
		"^SCH" => {  /*h*/ 9,  1,  -1,  0.5,  0,  0,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0.1, /**/ 3,  0,  0,  0,  0,  0,  0,  "LNA:LN:RPC:RP", /*data*/ 5,  7,  0.5,  1,  1,  0,  0,  0.5, /**/ 7,  9,  0.5,  0,  1,  0,  0,  0.5, /**/ 9,  10,  0.5,  0,  1.5,  0,  0,  0.5, /**/ 7,  9,  0.5,  0,  2.0,  0,  0,  0.5, /**/ 5,  7,  0.5,  0,  2.5,  0,  0,  0.5, /**/ 5,  -8,  0.5,  0,  2.25,  0,  0,  0.5, /**/ 3,  -10,  0.5,  0,  1.5,  0,  0,  0.5, /**/ 1.5,  -9.5,  0.5,  0,  1.0,  0,  99,  0.5, /**/ 1,  -8,  0.5,  0,  1,  0,  2,  0.5, /**/ 5,  -4.5,  0.5,  0,  1,  0,  1,  0.5, /**/ 5,  -6,  0,  4,  1,  0,  0,  0.5 }
		"^SCH_" => {  /*schli*/ 9,  1,  -1,  0.5,  0,  0,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0.1, /**/ 3,  0,  0,  0,  0,  0,  0,  "LNA:LN:RPC:RP", /*data*/ 5,  7,  0.5,  1,  1,  0,  0,  0.5, /**/ 7,  9,  0.5,  0,  1,  0,  0,  0.5, /**/ 9,  10,  0.5,  0,  1.5,  0,  0,  0.5, /**/ 7,  9,  0.5,  0,  2.0,  0,  0,  0.5, /**/ 5,  7,  0.5,  0,  2.5,  0,  0,  0.5, /**/ 5,  -8,  0.5,  0,  2.25,  0,  0,  0.5, /**/ 3,  -10,  0.5,  0,  1.5,  0,  0,  0.5, /**/ 1.5,  -9.5,  0.5,  0,  1.0,  0,  99,  0.5, /**/ 1.5,  -8,  0.5,  0,  1,  0,  2,  0.5, /**/ 5,  -7.8,  0.5,  0,  1,  0,  1,  0.5, /**/ 5,  -6.5,  0,  4,  1,  0,  0,  0.5 }
		"^SCHM" => { /*header*/ 6, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0.1, 3, 0, 0, 0, 0, 0, 0, 0, /*data*/ 2, 9, 0.5, 1, 1, 0, 0, 0.5,  /**/ 4, 10, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 6, 9, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 5, 5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 3, 2.5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 3, 1.5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 5, 0.5, 0.5, 0, 3, 0, 0, 0,  /**/ 5, -8, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1.5, -9, 0.5, 0, 1.5, 0, 99, 0.5,  /**/ 0, -7, 0.5, 0, 1, 0, 2, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }
		"^SCHW" => { /*header*/ 7, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0.1, 3, 0, 0, 0, 0, 0, 0, 0, /*data*/ 5, 17, 0.5, 1, 1, 0, 0, 0.5,  /**/ 7, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 9, 20, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 7, 19, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 5, 17, 0.5, 0, 3, 0, 0, 0.5,  /**/ 5, -8, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1.5, -9, 0.5, 0, 1.5, 0, 99, 0.5,  /**/ 0, -7, 0.5, 0, 1, 0, 2, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }
		"^CH" => { /*header*/ 6, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0.1, 2.5, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 1, 8.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 4, 10, 0.7, 2, 1.85, 0, 0, 0.5,  /**/ 7, 6.5, 0.5, 0, 2.25, 0, 0, 0.5,  /**/ 7, -8, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 5.5, -10, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 3.5, -9, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 3.5, -7.5, 0.5, 0, 1, 0, 2, 0.5,  /**/ 4, -7.3, 0.5, 0, 1, 0, 1, 0.5,  /**/ 6.25, -6, 0, 4, 1, 0, 0, 0 }
		"_^CH" => { /*header*/ 6, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0.1, 3, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 1.4, 8.75, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 4, 10, 0.7, 2, 1.85, 0, 0, 0.5,  /**/ 8, 6.5, 0.5, 0, 2.25, 0, 0, 0.5,  /**/ 9, -4, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 7.5, -7.5, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 5.5, -10, 0.5, 0, 1.0, 0, 1, 0.5 }
		"^ZW" => { /*header*/ 5, 1, -1, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0.1, 3, 0, 0, 0, 0, 0, 0, 0, /*data*/ 5, 20, 0, 1, 3, 0, 0, 0,  /**/ 5, -8, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1.5, -9, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 0, -7, 0.5, 0, 1, 0, 2, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }
		"^Z" => { /*header*/ 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 1, -1, 0, 3, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 5, 10, 0, 1, 2.25, 0, 0, 0,  /**/ 5, -5, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 4.25, -9, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 1.5, -9, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 1, -7, 0.5, 0, 1, 0, 2, 0.5,  /**/ 5, 2.5, 0.5, 4, 1, 0, 2, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }
		"^Z1" => { /*header*/ 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 1, -1, 0, 3, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 5, 10, 0, 1, 3, 0, 0, 0,  /**/ 5, -5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 4.25, -9, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1.5, -9, 0.5, 0, 1.5, 0, 99, 0.5,  /**/ 0, -7, 0.5, 0, 1, 0, 2, 0.5,  /**/ 4.5, -5, 0.5, 4, 1, 0, 2, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }
		"CK" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RNE", /*data*/ -0.5, 28.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2.5, 30, 0.5, 2, 1.75, 0, 0, 0.5,  /**/ 4.8, 27, 0.5, 0, 2.2, 0, 0, 0,  /**/ 5, 25, 0, 0, 2.4, 0, 0, 0,  /**/ 5, 0, 0, 0, 1, 0, 1, 0,  /**/ 5, 2.5, 0, 4, 1, 0, 0, 0 }
		"FF" => { /*header*/ 4, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 3.75, 7.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 4, 24, 0.5, 2, 1.0, 0, 0, 0.5,  /**/ 1.8, 30, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 0, 28, 0.5, 0, 2.4, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 4, 1.0, 0, 0, 0.5,  /**/ 2, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 4, 1, 0.5, 0, 1, 0, 1, 0 }
		"LL" => { /*header*/ 3, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNA:RN", /*data*/ 0, 5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 2, 8.5, 0.5, 2, 2, 0, 0, 0.5,  /**/ 1.1, 10, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 7, 0.5, 0, 3, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 2.5, 0, 0, 0,  /**/ 2, 0, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 1.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2, 0.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 2, 0.5,  /**/ 3, 2, 0.5, 0, 1, 0, 1, 0 }
		"LT" => { /*header*/ 8.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPD", /*data1*/ 3, 15.5, 0.5, 1, 1.0, 0, 0, 0.5,  /*2*/ 5, 18, 0.5, 2, 1.0, 0, 0, 0.5,  /*3*/ 2, 20, 0.5, 0, 1.75, 0, 0, 0.5,  /*4*/ 1.5, 16.75, 0.5, 0, 2.0, 0, 0, 0.0,  /*5*/ 6, 10, 0.0, 0, 1.5, 0, 0, 0,  /*6*/ 2, 9, 0.5, 0, 2.0, 0, 0, 0.5,  /*7*/ 0, 5.75, 0.5, 0, 2.5, 0, 0, 0.5,  /*8*/ 1.5, 2, 0.5, 0, 2.0, 0, 0, 0.5,  /*9a*/ 6, 0, 0.5, 4, 1.5, 0, 2, 0.5, /*9b*/ 6, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /*10*/ 8.5, 3.5, 0.5, 0, 1.0, 0, 1, 0.5 }
		"MM" => { /*header*/ 14, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 0, 9, 0.5, 1, 1, 0, 0, 0.5,  /**/ 2, 10, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 8, 10, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 10, 8.5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 10, 2, 0.5, 0, 1.75, 0, 0, 0,  /**/ 12, 0, 0.5, 4, 1.25, 0, 0, 0.5,  /**/ 12, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 14.25, 2, 0.5, 0, 1, 0, 1, 0 }
		"NN" => { /*header*/ 17, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 0, 9.8, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2.1, 10, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 5.1, 7.9, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 11, 2, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 14, 0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 14.5, 0, 0.5, 0, 1.25, 0, 2, 0.5,  /**/ 17, 2, 1, 0, 1, 0, 1, 0 }
		"WENN" => { /*header*/ 17, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ -0.25, 8.75, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 1.7, 10, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 5.1, 7.9, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 11, 2, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 14, 0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 14.5, 0, 0.5, 0, 1.25, 0, 2, 0.5,  /**/ 16.25, 1.5, 1, 0, 1, 0, 1, 0 }
		"PP" => { /*header*/ 6, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNE", /*data*/ 0, 30, 0, 1, 2.5, 0, 0, 0,  /**/ 0, 3, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 4, 1.0, 0, 0, 0.5,  /**/ 3, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 6, 2, 0, 0, 1, 0, 1, 0 }
		"RR" => { /*header*/ 10, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, "LKC:LK:RKC:RK", /*data*/ 0, 8, 0.5, 1, 1, 0, 0, 0.5,  /**/ 5, 10, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 8.25, 7.5, 0.5, 5, 2.4, 0, 0, 0.5,  /**/ 10.5, 4, 0.5, 0, 2.4, 0, 0, 0.5,  /**/ 9.25, 0.25, 0.5, 5, 1.8, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0.5, 4.75, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 9, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 10, 0.5, 4, 1, 0, 0, 0.5,  /**/ 5, 10, 0.5, 0, 1, 0, 1, 0 }
		"RR6" => { /*header*/ 10, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKC:LK", /*data*/ /*1*/ 5, 0, 0.5, 1, 1, 0, 0, 0.5, /*2*/ 9, 0.25, 0.5, 0, 1.0, 0, 0, 0.5, /*3*/ 10, 4, 0.5, 0, 1, 0, 0, 0.5, /*4*/ 8, 7.75, 0.5, 0, 1, 0, 0, 0.5, /*5*/ 5, 10, 0.5, 0, 1.5, 0, 0, 0.5, /*6*/ 1, 9, 0.5, 0, 2.15, 0, 0, 0.5, /*7*/ 0.5, 4.75, 0.5, 0, 2.25, 0, 0, 0.5, /*8*/ 6.5, 0, 0.5, 0, 1, 0, 1, 0.5 }
		"RR4" => { /*header*/ 10, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKC:LK", /*data*/ /*1*/ 5, 0, 0.5, 1, 1, 0, 0, 0.5, /*2*/ 9, 0.25, 0.5, 0, 1.0, 0, 0, 0.5, /*3*/ 10, 4, 0.5, 0, 1, 0, 0, 0.5, /*4*/ 8, 7.75, 0.5, 0, 1, 0, 0, 0.5, /*5*/ 5, 10, 0.5, 0, 1.5, 0, 0, 0.5, /*6*/ 1, 9, 0.5, 0, 2.15, 0, 0, 0.5, /*7*/ 0.5, 4.75, 0.5, 0, 2.05, 0, 0, 0.5, /*8*/ 5, 0, 0.5, 0, 1, 0, 0, 0.5, /*9*/ 10, 2.25, 0.5, 0, 1, 0, 1, 0.5 }
		"ARR6" => { /*header*/ 10, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, /**/0, 0, 0, 0, 0, 0, 0, 0, 0, "LKC:LK:RKC:RK", /*data*/ 6, 0, 0.5, 1, 1, 0, 0, 0.5, /**/ 8.5, 0.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 10, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 0, 6, 0.5, 0, 2.5, 0, 0, 0.5, /**/ 3.2, 1, 0.5, 0, 1.5, 0, 0, 0.5, /**/ 6, 0, 0.5, 0, 1, 0, 1, 0.5 }
		"ARR3" => { /*header*/ 10, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, "LKC:LK:RKC:RK",  /*data*/ 10, 5, 0.5, 1, 1, 0, 0, 0.5,  /**/ 5, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 6, 0.5, 0, 1, 0, 0, 0.5, /**/ 3.2, 1, 0.5, 0, 1, 0, 0, 0.5, /**/ 6, 0, 0.5, 0, 1, 0, 0, 0.5, /*data*/ 6, 0, 0.5, 1, 1, 0, 0, 0.5, /**/ 8.5, 0.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 10, 5, 0.5, 0, 1, 0, 1, 0.5 }		
		"@ARR3S" => { /*headersmallversionforcombiner*/ 8, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, "",  /*data*/ 0, 2, 0.5, 1, 1, 0, 0, 0.5,  /**/ -4, 6, 0.5, 0, 1, 0, 0, 0.5,  /**/ -8, 2.8, 0.5, 0, 1, 0, 0, 0.5, /**/ -5.5, -1.2, 0.5, 0, 1, 0, 0, 0.5, /**/ -3.2, -2, 0.5, 0, 1, 0, 0, 0.5, /*data*/ -3.2, -2, 0.5, 1, 1, 0, 0, 0.5, /**/ -1.2, -1.6, 0.5, 0, 1, 0, 2, 0.5, /**/ 0, 2, 0.5, 0, 1, 0, 1, 0.5 }		
		"SS" => { /*header*/ 14, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 0, 9.4, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3.2, 10, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 7.5, 8, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 9.5, 6, 0.5, 0, 2.5, 0, 0, 0,  /**/ 14, 0, 0, 0, 1.0, 0, 1, 0, /*diacritics*/ 9,  -5,  0,  "@#.",  0,  0,  0,  0, /*diacritics*/ -2,  15,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 9,  -5,  0,  "@#/",  0,  0,  0,  0 }
		"_SO" => { /*header*/ 14, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 5, 5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 4, 9, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1, 10, 0, 0, 3, 0, 1, 0 }
		"SUS" => { /*header*/ 18, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 0, 0, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 1, 4, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 5.5, 4.5, 0.5, 0, 2, 0, 0, 0.5,  /**/ 13, 0, 0.5, 0, 2.5, 0, 0, 0.5, /**/ 18, -5, 0.5, 0, 1, 0, 1, 0.5 }
		"SOBRE" => { /*spanishandfrench*/ 15.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 13, 5, 0, 0, 0, 0, 0, 0, "LKB:LK:RNC:RN", /*data*/ 0, 0, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 0.55, 5, 0.5, 0, 1.0, 0, 0, 0.5, /**/ 3, 9, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 6, 10, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 10.5, 8, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 13.75, 5.4, 0.5, 0, 2.5, 0, 0, 0.5, /**/ 15.5, 2.5, 0.5, 0, 2.5, 0, 0, 0.5, /**/ 13, 0, 0.5, 0, 1.5, 0, 0, 0.5, /**/ 10.5, 2.0, 0.5, 0, 1.0, 0, 0, 0.5, /**/ 13.75, 5.4, 0.5, 0, 1.0, 0, 1, 0.5 }
		"_SOBRE" => { /*french*/ 15.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 13, 5, 0, 0, 0, 0, 0, 0, "LKB:LK:RNC:RN", /*data*/   2, 9, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 6, 10, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 10.5, 8, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 13.75, 5.4, 0.5, 0, 2.5, 0, 0, 0.5, /**/ 15.5, 2.5, 0.5, 0, 2.5, 0, 0, 0.5, /**/ 13, 0, 0.5, 0, 1.5, 0, 0, 0.5, /**/ 10.5, 2.0, 0.5, 0, 1.0, 0, 0, 0.5, /**/ 13.75, 5.4, 0.5, 0, 1.0, 0, 1, 0.5 }
		"TT" => { /*header*/ 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPE", /*data*/ 0, 30, 0, 1, 2.5, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0,  /**/ 0, 2.5, 0, 4, 1, 0, 0, 0 }
		"CH" => { /*header*/ 5, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 0, 9.75, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2.5, 10, 0.7, 2, 2.0, 0, 0, 0.8,  /**/ 5.2, 6.25, 0.8, 0, 2.25, 0, 0, 0.5, /**/ 5.7, -5, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 5, -8, 0.5, 0, 1.25, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 1.5, -9.25, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 0.75, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0.5,  /**/ 5, 2.5, 0, 4, 1, 0, 0, 0 }
		"WELCH" => { /*header*/ 5, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ -2, 7.75, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2, 10, 0.7, 2, 2.0, 0, 0, 0.8,  /**/ 5.2, 6.25, 0.8, 0, 2.25, 0, 0, 0.5, /**/ 5.7, -5, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 5, -8, 0.5, 0, 1.25, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 1.5, -9.25, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 0.75, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0.5,  /**/ 5, 2.5, 0, 4, 1, 0, 0, 0 }
		"NCI" => { /*italianolancio*/ 9, 1, -1, 0.5, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 0, 9.75, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 6.5, 10, 0.7, 2, 2.0, 0, 0, 0.8,  /**/ 9, 7, 0.8, 0, 2.5, 0, 0, 0.5,  /**/ 9, -8, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 7, -10, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 5.5, -9.25, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 4.75, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 9, 0, 0.5, 0, 1, 0, 1, 0.5,  /**/ 9, 2.5, 0, 4, 1, 0, 0, 0 }
		"CCHH" => { /*header:bigch*/ 5, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 0, 18.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2.5, 20, 0.7, 2, 2.5, 0, 0, 0.8,  /**/ 5, 17, 0.8, 0, 3, 0, 0, 0.5,  /**/ 5, -8, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 99, 0.5,  /**/ 1.5, -9, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 0, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0.5,  /**/ 5, 2.5, 0, 4, 1, 0, 0, 0 }
		"HCH" => { /*italianh*/ 5, 1, -1, 0.5, 0, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 0, 9.75, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2.5, 10, 0.7, 2, 2.0, 0, 0, 0.8,  /**/ 5, 7, 0.8, 0, 2.5, 0, 0, 0.5,  /**/ 5, -8, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 0.0, -9.0, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ -2.5, -2, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0.5,  /**/ 5, 2.5, 0, 4, 1, 0, 0, 0 }
		"_CH" => { /*header*/ 5, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ /*1, 1, 0.5, 1, 1.0, 0, 0, 0.5,*/  /**/ 5, 12, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 4, 19, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 2.5, 20, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ -1, 19, 0.5, 0, 1.0, 0, 1, 0.5 }
		"ND" => { /*header*/ 3.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RNB:RN", /*data*/ 0, 5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3.5, 7, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 1.1, 10, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 7, 0, 0, 2.5, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0,  /**/ 0, 2.5, 0, 4, 1, 0, 0, 0 }
		"ND1" => { /*header*/ 3.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RNB:RN", /*data*/ 1, 5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3.4, 7.4, 0.5, 2, 1.3, 0, 0, 0.5,  /**/ 1, 10.5, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 7, 0, 0, 2.5, 0, 0, 0,  /**/ 1.5, -0.5, 0, 0, 1, 0, 1, 0,  /**/ 0, 2.5, 0, 4, 1, 0, 0, 0 }
		"ND2" => { /*header*/ 3.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RNB:RN", /*data*/ 1, 5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3.25, 7.25, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 1.1, 10, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 7, 0, 0, 2.5, 0, 0, 0,  /**/ 1, 0, 0, 0, 1, 0, 1, 0,  /**/ 0, 2.5, 0, 4, 1, 0, 0, 0 }
		"ND." => { /*header*/ 0, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ -2, 4, 0.5, 1, 1, 0, 0, 0.5, /**/1.5, 10, 0.5, 0, 1, 0, 1, 0.5 }
		"NG" => { /*header*/ 4, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, "LPB:LP:RPC:RP", /*data*/ 2.5, 8.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3, 9.25, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 5, 10, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 3, 9.25, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 2.5, 7.5, 0.5, 0, 2.25, 0, 0, 0.5,  /**/ 3.85, 1.5, 0.5, 0, 1.35, 0, 0, 0.5,  /**/ 1.75, 0, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 0, 2.25, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 3.5, 4, 0.5, 0, 1, 0, 1, 0.5,  /**/ 3.25, 4, 0, 4, 1, 0, 0, 0 }
		"NK" => { /*header*/ 6, 0.5, 0, 0, 2, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, "LPB:LP:RPD", /*data*/ 3, 10, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 6, 17, 0.5, 2, 1.0, 0, 0, 0.5,  /**/ 4.8, 20, 0.5, 0, 1.85, 0, 0, 0.5,  /**/ 3, 18, 0.5, 0, 2.4, 0, 0, 0.5,  /**/ 3, 2, 0.5, 0, 1.85, 0, 0, 0.5,  /**/ 1.5, 0, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ -0.7, 2, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ -0.7, 2, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 4, 7, 0.5, 0, 1, 0, 1, 0.5,  /**/ 3, 5.5, 0, 4, 1, 0, 0, 0 }
		"NK1" => { /*header*/ 6, 0.5, 0, 0, 2, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, "LPB:LP:RPD", /*data*/ 1.75, 10, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 5, 17, 0.5, 2, 1.0, 0, 0, 0.5,  /**/ 3.8, 20, 0.5, 0, 1.85, 0, 0, 0.5,  /**/ 2, 18, 0.5, 0, 2.4, 0, 0, 0.5,  /**/ 5, 2, 0.5, 0, 1.85, 0, 0, 0.5,  /**/ 3.5, 0, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 1.3, 2, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 1.3, 2, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 6, 7, 0.5, 0, 1, 0, 1, 0.5,  /**/ 5, 5.5, 0, 4, 1, 0, 0, 0 }
		"NS" => { /*header*/ 5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPB:LP:RPC:RP", /*data*/ 1.5, 5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 4.75, 7.85, 0.5, 2, 1.0, 0, 0, 0.5,  /**/ 3, 10, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 1.5, 9, 0.5, 0, 2.15, 0, 0, 0.5,  /**/ 4.75, 1.25, 0.5, 0, 1.5, 0, 0, 0.5,  /*diacriticsbeforeearlyexit*/ /*0,  -4,  0,  "@#.",  0,  0,  0,  0,*/ /**/ 2.5, 0, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 1.5, 2, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 3.5, 3.5, 0.5, 0, 1, 0, 1, 0.5,  /**/ 4, 3.5, 0, 4, 1, 0, 0, 0 }
		"NS." => { /*header*/ 0, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 3, 10.25, 0.5, 1, 2.5, 0, 1, 0.5 }
		"PF" => { /*header*/ 8, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RNC:RN", /*data*/ 0, 7, 0.5, 1, 1, 0, 0, 0.5,  /**/ 0.5, 7, 0.5, 2, 1, 0, 0, 0.5,  /**/ 6, 9, 0.5, 0, 1, 0, 0, 0.5,  /**/ 9, 11.1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7.5, 16.5, 0.5, 0, 1.25, 0, 0, 0.5,  /**/ 2, 20, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 0, 18, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 4, 1.25, 0, 0, 0.5,  /**/ 3, 0, 0.5, 0, 1.25, 0, 2, 0.5,  /**/ 6, 2.5, 0.5, 0, 1, 0, 1, 0 }
		"SP" => { /*header*/ 10, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RND", /*data*/ 0, 18, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2.5, 20, 0.5, 2, 1.75, 0, 0, 0.5,  /**/ 5, 18, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ /*4, 15, 0.5, 0, 3, 0, 0, 0.5,*/  /**/ /*4, 5, 0.5, 0, 2.5, 0, 0, 0.5,*/  /**/ 5, 3, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 7.5, 0, 0.5, 4, 1.0, 0, 0, 0.5,  /**/ 7.5, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 10.2, 1.75, 0.5, 0, 1, 0, 1, 0 }
		"KP" => { /*header*/ 8, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RND", /*data*/ 0, 18, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 2, 20, 0.5, 2, 2, 0, 0, 0.5,  /**/ 4, 18, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 4, -7, 0.5, 0, 2, 0, 0, 0.5,  /**/ 6, -10, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 6, -10, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 8, -8, 0.5, 0, 1, 0, 1, 0 }
		// the following two tokens were added manually in order to preserve examples for the se1rev1 test for proportional and orthogonal knots		
		"SP1" => { /*testproportional*/ 8, 0.5, 0, 0.5, 0, 0, 0, 2, 6, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RND", /*data*/ 0, 18, 0.5, 1, 1.5, 96, 0, 0.5,  /**/ 2, 20, 0.5, 2, 2, 0, 0, 0.5,  /**/ 4, 18, 0.0, 0, 2.5, 96, 0, 0.0,  /**/ 4, 2, 0.5, 0, 2, 160, 0, 0.5,  /**/ 6, 0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 6, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 8, 2, 0.5, 0, 1, 160, 1, 0 }
		"SP2" => { /*testorthogonal*/ 8, 0.5, 0, 0.5, 0, 0, 0, 2, 6, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RND", /*data*/ 0, 18, 0.5, 1, 1.5, 80, 0, 0.5,  /**/ 2, 20, 0.5, 2, 2, 80, 0, 0.5,  /**/ 4, 18, 0.0, 0, 2.5, 80, 0, 0.0,  /**/ 4, 2, 0.5, 0, 2, 144, 0, 0.5,  /**/ 6, 0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 6, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 8, 2, 0.5, 0, 1, 144, 1, 0 }
		
		"MP" => { /*spanishandenglish*/ 8, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RND", /*data*/ 0, 18, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 2, 20, 0.5, 2, 2, 0, 0, 0.5,  /**/ 4, 18, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 4, 15, 0.5, 0, 3, 0, 0, 0.5,  /**/ 4, 5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 4, 3, 0.5, 0, 2, 0, 0, 0.5,  /**/ 6, 0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 6, 0, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 8, 2, 0.5, 0, 1, 0, 0, 0, /*n*/ 4, 4, 0.5, 0, 1, 0, 0, 0, /*n*/ 1, 3, 0.5, 0, 1, 0, 0, 0, /*n*/ 6, 2, 0.5, 0, 1, 0, 2, 0, /*n*/ 8, 2, 0.5, 0, 1, 0, 1, 0 }
		"PERHAPS" => { /*english*/ 8, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RND", /*data*/ 4, 20, 0.0, 0, 2.5, 0, 0, 0.5,  /**/ 4, 15, 0.5, 0, 3, 0, 0, 0.5,  /**/ 4, 5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 4, 3, 0.5, 0, 2, 0, 0, 0.5,  /**/ 6, 0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 6, 0, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 8, 2, 0.5, 0, 1, 0, 0, 0, /*n*/ 4, 4, 0.5, 0, 1, 0, 0, 0, /*n*/ 1, 3, 0.5, 0, 1, 0, 0, 0, /*n*/ 6, 2, 0.5, 0, 1, 0, 2, 0, /*n*/ 8, 2, 0.5, 0, 1, 0, 1, 0 }
		"ST" => { /*header*/ 3, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPC:RP", /*data*/ 0, 10, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3, 17, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 1.8, 20, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 18, 0.5, 0, 2.5, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0,  /**/ 0, 2.5, 0, 4, 1, 0, 1, 0 }
		"ST." => { /*header*/ 0, 1, -1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 0, 17, 0.5, 1, 1, 0, 0, 0.5, /**/0, 17, 0.5, 0, 1, 0, 1, 0.5 }
		"STT" => { /*header*/ 3, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, -1	, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPC:RP", /*data*/ 0, 10, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 3, 17, 0.5, 2, 2, 0, 0, 0.5,  /**/ 1.8, 20, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 18, 0.5, 0, 3, 0, 0, 0,  /**/ 0, -10, 0, 0, 1, 0, 1, 0,  /**/ 0, -7.5, 0, 4, 1, 0, 1, 0 }
		"XT" => { /*header*/ 10, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPC:RP", /*data*/ 0, 10, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 5, 15, 0.5, 2, 2, 0, 0, 0.5,  /**/ 3.25, 18.75, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 18, 0.5, 0, 3, 0, 0, 0,  /**/ 0, 10, 0, 0, 3, 0, 0, 0, /**/ 10, 0, 0, 0, 1, 0, 1, 0 }
		"ZW" => { /*header*/ 5, 1, -1, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RND", /*data*/ 5, 20, 0, 1, 3, 0, 0, 0,  /**/ 5, -8, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1.5, -9.25, 0.5, 0, 1, 0, 99, 0.5,  /**/ 0.75, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 2.5, 0.5, 4, 1, 0, 0, 0, /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }
		"EN" => { /*header*/ 7, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 7, 0, 0, 1, 1, 0, 0, 0,  /**/ 7, 0, 0, 0, 1, 0, 1, 0 }
		"-EN2" => { /*header*/ 7, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ -1, 2.25, 0, 1, 1, 0, 0, 0,  /**/ 7, 1.5, 0, 0, 1, 0, 1, 0 }
		"_EN" => { /*header*/ 7, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 0, 2.5, 0, 1, 1, 5, 0, 0,  /**/ 7, 2.5, 0, 0, 1, 0, 1, 0 }
		"EM" => { /*header*/ 18, 5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 7, 0, 0, 1, 1, 0, 0, 0,  /**/ 18, 0, 0.5, 1, 1, 0, 1, 0 }
		"-EM2" => { /*header*/ 18, 5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/  -2, 3, 0.5, 1, 1, 0, 0, 0, /**/ 14, 2, 0.5, 0, 1, 0, 1, 0 }
		"/EN" => { /*header*/ 5, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 10, 0, 0, 1, 1, 0, 0, 0,  /**/ 10, 0, 0, 0, 1, 0, 1, 0 }
		"/EM" => { /*header*/ 18, 5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 10, 0, 0, 1, 1, 0, 0, 0,  /**/ 15, 0, 0.5, 1, 1, 0, 1, 0 }
		"DEN" => { /*header*/ 5, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 0, 0, 0,  /**/ 5, 0, 0, 0, 1, 0, 1, 0 }
		"DEM" => { /*header*/ 13, 5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 0, 0, 0,  /**/ 13, 0, 0.5, 1, 1, 0, 1, 0 }
		"VR+AR" => { /*header*/ 5, 0.5, 0, 0.5, 0, 1, 0, 0, 0, 0, "", "", 0, 0, 0.5, 2.5, 5, 0, 0, 0, 0, 0, 0, "LKB:LK:RKB:RK", /*data*/ 2.1, 5, 0.5, 1, 2.8, 0, 0, 0.5,  /**/ 5, 2.5, 0.7, 0, 2.1, 0, 0, 0.7,  /**/ 2.5, 0, 0.7, 0, 1, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 0, 0,  /**/ 2.5, 5, 0.5, 0, 1, 0, 0, 0.7,  /**/ 5, 7.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 2.5, 10, 0.7, 0, 1, 0, 0, 0.5,  /**/ 0, 7.5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 2, 0, /**/ 3.75, 5.75, 0.5, 0, 1, 0, 1, 0 }
		"B" => { /*header*/ 3, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPC:RP", /*data*/ 0, 10, 0, 1, 3, 0, 0, 0.0,  /**/ 0, 3, 0.5, 0, 2.25, 0, 0, 0.5, /**/ 2.5, 0, 0.5, 4, 1.1, 0, 0, 0.5,  /**/ 2.5, 0.0, 0.5, 0, 1.1, 0, 2, 0.5, /**/ 4.6, 2, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 3,  -5,  0,  "@#/",  0,  0,  0,  0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"BMPF" => { /*italianabbiamo*/ 6, 0.5, 0, 0.0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNC:LN:RNA:RN", /*data*/  2.5, 10, 0.0, 1, 2.3, 0, 0, 0.0,  /**/ 2.5, 2, 0.5, 0, 1.75, 0, 0, 0,  /**/ 4.5, 0, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 6.25, 2, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4.5, 4.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.5, 4.4, 0.5, 0, 1, 0, 0, 0.5,  /**/ -0.4, 3, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.5, 2.3, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4.5, 2.3, 0.5, 0, 1, 0, 2, 0.5,  /**/ 5.75, 2.3, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ -7,  15,  0,  "@#/_",  0,  0,  0,  0 }
		"C" => { /*header*/ 3, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPC:RP", /*data*/ 1, 9.5, 0.5, 1, 1, 0, 0, 0.5,  /**/ 3, 10, 0.5, 98, 1.5, 0, 0, 0.5,  /**/ 1, 9.5, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 7.5, 0.5, 0, 2.3, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0,  /**/ 0, 2.5, 0, 4, 1, 0, 0, 0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"D" => { /*header*/ 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPC:RP", /*data*/ 0, 10, 0, 1, 2.5, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0,  /**/ 0, 2.5, 0, 4, 1, 0, 0, 0, /*diacritics*/ 3,  -5,  0,  "@#/",  0,  0,  0,  0, /*diacritics*/ 0,  14,  0,  "@#/.",  0,  0,  0,  0, /*diacritics*/ 0,  -5,  0,  "@#.",  0,  0,  0,  0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 } 
		"D1" => { /*cheaton60degreeangle*/ 1, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPC:RP", /*data*/ 0, 10, 0, 1, 2.5, 0, 0, 0,  /**/ 1, 0, 0, 0, 1, 0, 1, 0, /**/ 1, 2.5, 0, 4, 1, 0, 0, 0 } 
		"D." => { /*header*/ 0, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 0, 10, 0, 1, 2.5, 0, 1, 0.5 }
		"DR." => { /*header*/ 0, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 0.3, 5.5, 0.5, 1, 2.5, 0, 1, 0.5 }
		"F" => { /*header*/ 4, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPC:RP", /*data*/ -0.5, 9.75, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 4, 17, 0.5, 2, 1.0, 0, 0, 0.5,  /**/ 1.8, 20, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 18, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2, 0, 0.5, 4, 1.25, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 5, 2, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"FORSE" => { /*italianforse*/ 4, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPC:RP", /*data*/ 0, 10, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 4, 17, 0.5, 2, 1.0, 0, 0, 0.5,  /**/ 1.8, 20, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 18, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2, 0, 0.5, 4, 1.25, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 5, 2, 0.5, 0, 1, 0, 0, 0, /**/ 2.5, 5, 0.5, 0, 0, 0, 1, 0, /**/ -7, 6, 0.5, 0, 1, 0, 1, 0 }
		"G" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RNC:RN", /*data*/ 0.5, 8.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2.5, 10, 0.5, 2, 2.0, 0, 0, 0.5,  /**/ 5, 8, 0.0, 0, 2.5, 0, 0, 0,  /**/ 5, 0, 0, 0, 1, 0, 1, 0,  /**/ 5, 2.5, 0, 4, 1, 0, 0, 0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"G^" => { /*palatalizedg:Genie*/ 10, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RNC:RN", /*data*/ 0.5, 8.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2.5, 10, 0.5, 2, 2.0, 0, 0, 0.5,  /**/ 7.5, 10, 0.0, 0, 2.5, 0, 0, 0, /**/ 10, 8, 0.0, 0, 2.5, 0, 0, 0,  /**/ 10, 0, 0, 0, 1, 0, 1, 0,  /**/ 10, 2.5, 0, 4, 1, 0, 0, 0, /*diacritics*/ 11,  -5,  0,  "@#_",  0,  0,  0,  0 }		
		"H" => { /*header*/ 5, 0.5, 0, 0.5, 1, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, "LNB:LN:RPC:RP", /*data*/ 0, 9.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3, 10, 0.5, 2, 2.0, 0, 0, 0.5,  /**/ 4.75, 7.2, 0, 0, 2.5, 0, 0, 0,  /**/ 4.75, 2, 0.5, 0, 2, 0, 0, 0.5,  /**/ 3.2, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.25, 0.5, 0.5, 0, 1, 0, 99, 0.5,  /**/ 1.25, 2.4, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 4.75, 4.59, 0.5, 0, 1, 0, 1, 0.5,  /**/ 4.75, 5, 0, 4, 1, 0, 0, 0, /*diacritics*/ -1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"NGI" => { /*italianomangio*/ 9, 0.5, 0, 0.5, 3, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, "LNB:LN:RPC:RP", /*data*/ 0, 9.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 7, 10, 0.5, 2, 2.0, 0, 0, 0.5,  /**/ 8.75, 7.2, 0, 0, 2.5, 0, 0, 0,  /**/ 8.75, 2, 0.5, 0, 2, 0, 0, 0.5,  /**/ 7.2, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5.25, 0.5, 0.5, 0, 1, 0, 99, 0.5,  /**/ 5.25, 2.4, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 8.75, 4.59, 0.5, 0, 1, 0, 1, 0.5,  /**/ 8.75, 5, 0, 4, 1, 0, 0, 0, /*diacritics*/ 2,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"J" => { /*header*/ 4, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPB:LP:RPC:RP", /*data*/ 4, 10, 0, 1, 2.5, 0, 0, 0.5,  /**/ 4, 2, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 0.25, 2.5, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 1.25, 3.1, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 3, 5, 0.5, 0, 1, 0, 1, 0.5, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"J^" => { /*header*/ 3, 0.5, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 2, 10, 0, 1, 2.5, 0, 0, 0.5,  /**/ 3, 2, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 1.5, 0, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 0, 1.5, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 3, 5, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 3,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"K" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RND", /*data*/ 0, 18.5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2.5, 20, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 5, 18, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 5.2, 15, 0.5, 0, 2.5, 0, 0, 0,  /**/ 5, 0, 0, 0, 1, 0, 1, 0,  /**/ 5, 2.5, 0, 4, 1, 0, 0, 0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"L" => { /*header*/ 3, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPB:RP", /*data*/ /*diacritics*/ -1.5,  15,  0,  "@#/.",  0,  0,  0,  0, /**/ 0, 5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3.25, 8.25, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 1, 10.5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ -0.4, 7, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 2.25, 0, 0.5, 4, 1.0, 0, 0, 0.5,  /**/ 2, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 4.5, 1.5, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 3,  -5,  0,  "@#/",  0,  0,  0,  0, /*diacritics*/ 0,  15,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 0,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"^LL^" => { /*lmouillé*/ 6, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 1, 6, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3.25, 8.25, 0.5, 2, 1.0, 0, 0, 0.5,  /**/ 1.5, 10, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 1.5, 7.5, 0.5, 0, 1.5, 0, 0, 0.0,  /**/ 4, 5, 0.0, 0, 1.75, 0, 0, 0.5,  /**/ 0, 3.5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 6, 0.5, 0.5, 0, 1, 0, 1, 0 }
		"LUI" => { /*header:french*/ 3, 0.5, 0, 0.5, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 1, 0, 1, 0, 0, 0.5,  /**/ 2, 4, 1, 0, 1, 0, 0, 0.5,  /**/ 2, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 8.5, 0.5, 0, 1, 0, 2, 0.5,  /**/ 2.5, 7.5, 0.5, 0, 1, 0, 1, 0 }
		"_LUI" => { /*header:french*/ 3, 0.5, 0, 0.5, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 2, 4, 1, 1, 1, 0, 0, 0.5, /**/ 2, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 8.5, 0.5, 0, 1, 0, 2, 0.5,  /**/ 2.5, 7.5, 0.5, 0, 1, 0, 1, 0 }
		"@L" => { /*header*/ 0, 0.5, 0, 0.5, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ -0.3, 0, 0.5, 0, 1.0, 0, 0, 0.05,  /**/ /*0.5, 0.0, 0.5, 0, 1.5, 0, 0, 0.5,*/  /**/ 1.7, 1.1, 0.5, 0, 1.7, 0, 0, 0.5,  /**/ 0.25, 3.05, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 0.0, 2.25, 0.5, 0, 1, 0, 2, 0.5,  /**/ 1.1, 0.6, 0.5, 0, 1.0, 0, 0, 0.5 }
		"@L3" => { /*header*/ 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 1, 0, 1, 0, 0, 0.5,  /**/ -1.125, 0.75, 0.5, 0, 1, 0, 0, 0.5,  /**/ -3, 0.25, 0.5, 0, 1, 0, 0, 0.5,  /**/ -1.125, -0.75, 0.5, 0, 1, 0, 2, 0.5,  /**/ 0, 0, 0.5, 0, 1, 0, 1, 0 }
		"&L" => { /*header*/ 2, 0.5, 0, 0.5, 1, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0.5, 0, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 1, 0.5, 0.5, 0, 2, 0, 0, 0.5,  /**/ 0.5, 1, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0, 0.5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 0.5, 0, 0.5, 0, 2.5, 0, 1, 0 }
		"M" => { /*header*/ 7.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ -0.25, 8.7, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 0.75, 10, 0.5, 2, 1.0, 0, 0, 0.5,  /**/ 2, 10, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 4, 7.5, 0.5, 0, 2.4, 0, 0, 0.5,  /**/ 3.2, 2, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 5.5, 0, 0.5, 4, 1.0, 0, 0, 0.5,  /**/ 5.5, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 7.85, 1.75, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"N" => { /*header*/ 11, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, 4.25, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 1.9, 5, 0.5, 2, 2, 0, 0, 0.5,  /**/ 4.5, 3.9, 0.5, 0, 3, 0, 0, 0.5,  /**/ 7.5, 1, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 9.5, 0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 9.5, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 11, 1, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 5,  -5,  0,  "@#/",  0,  0,  0,  0, /*diacritics*/ 3,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"N=" => { /*header*/ 12, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN", /*data*/ 0, 0, 0.5, 1, 1, 0, 0, 0.5,  /**/ 0, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 4.25, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 2.9, 5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 5.5, 3.9, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 8.5, 1, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 10.5, 0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 10.5, 0, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 12, 1, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 5,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"^N" => { /*header:baron*/ 11.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ /**/ 2.75, 5, 0.5, 1, 1.75, 0, 0, 0.5, /**/ 7.5, 1, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 9.5, 0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 10, 0, 0.5, 0, 1.75, 0, 2, 0.5,  /**/ 11.5, 1, 0.5, 0, 1.0, 0, 1, 0, /*diacritics*/ 5,  -5,  0,  "@#/",  0,  0,  0,  0, /*diacritics*/ 3,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"P" => { /*header*/ 5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RND", /*data*/ 0, 20, 0, 1, 2.5, 0, 0.2, 0,  /**/ 0, 3, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 4, 1.0, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 5, 2, 0, 0, 1, 0, 1, 0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"Q" => { /*header*/ 3, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPA:LP:RPD", /*data*/ 1, 19, 0.5, 1, 1, 0, 0, 0.5,  /**/ 3, 20, 0.5, 98, 1.5, 0, 0, 0.5,  /**/ 1, 19, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 15, 0.5, 0, 2.5, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0, /**/ 0, 2.5, 0, 4, 1, 0, 0, 0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"VR" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 2.5, 5, 0, 0, 0, 0, 0, 0, "LKB:LK:RKB:RK", /*data*/ 2.5, 5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3.75, 4, 0.7, 5, 2.5, 0, 0, 0.7,  /**/ 5, 2.5, 0.7, 0, 3, 0, 0, 0.7,  /**/ 4.5, 0.5, 0.7, 5, 2, 0, 0, 0.7,  /**/ 3.25, 0.15, 0.7, 5, 1.5, 0, 0, 0.7,  /**/ 2.5, 0, 0.7, 0, 1, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 4, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ -6,  10,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 0,  10,  0,  "@#/.",  0,  0,  0,  0, /*diacritics*/ 2,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"VR_NAEP" => { /*noalternativeexitpointsoffsets15and16*/ 5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKB:LK:RKB:RK", /*data*/ 2.5, 5, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 3.75, 4, 0.7, 5, 2.5, 0, 0, 0.7,  /**/ 5, 2.5, 0.7, 0, 3, 0, 0, 0.7,  /**/ 4.5, 0.5, 0.7, 5, 2, 0, 0, 0.7,  /**/ 3.25, 0.15, 0.7, 5, 1.5, 0, 0, 0.7,  /**/ 2.5, 0, 0.7, 0, 1, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 4, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ -2,  10,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 0,  10,  0,  "@#/.",  0,  0,  0,  0, /*diacritics*/ 2,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"VR10" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 2.5, 5, 0, 0, 0, 0, 0, 0, "LKB:LK:RKB:RK", /*data*/ 0, 2.5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 3.75, 4, 0.7, 5, 2.5, 0, 0, 0.7,  /**/ 5, 2.5, 0.7, 0, 3, 0, 0, 0.7,  /**/ 4.5, 0.5, 0.7, 5, 2, 0, 0, 0.7,  /**/ 3.25, 0.15, 0.7, 5, 1.5, 0, 0, 0.7,  /**/ 2.5, 0, 0.7, 0, 1, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 4, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ -2,  10,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 0,  10,  0,  "@#/.",  0,  0,  0,  0 }
		"VR10^" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 2.5, 5, 0, 0, 0, 0, 0, 0, "LKB:LK:RKB:RK", /*data*/ 0, 2.5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 3.75, 4, 0.7, 5, 2.5, 0, 0, 0.7,  /**/ 5, 2.5, 0.7, 0, 3, 0, 0, 0.7,  /**/ 4.5, 0.5, 0.7, 5, 2, 0, 0, 0.7,  /**/ 3.25, 0.15, 0.7, 5, 1.5, 0, 0, 0.7,  /**/ 2.5, 0, 0.7, 0, 1, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 1, 0, 1, 0.5,   /*diacritics*/ -2,  10,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 0,  10,  0,  "@#/.",  0,  0,  0,  0 }
		"AR" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK:RKA:RK", /*data*/ 2.8, 0, 0.5, 1, 1, 0, 0, 0.7,  /**/ 5, 2.3, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1.25, 0, 0, 0.5,  /*intermshadow*/ 0.8, 4.75, 0.5, 5, 2.2, 0, 0, 0.5, /**/ 0, 2.5, 0.7, 0, 2.5, 0, 0, 0.5,  /*intermshadow*/ 1.5, 0.4, 0.5, 5, 1.5, 0, 0, 0.5, /**/ 2.8, 0, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 5,  -5,  0,  "@#/",  0,  0,  0,  0, /*diacritics*/ 0,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"AR^" => { /*header*/ 5, 0.5, 0, 0.5, 0, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 2.5, 0, 0.5, 1, 1, 0, 0, 0.7,  /**/ 5, 2.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 2.5, 5, 0.7, 0, 1.5, 0, 0, 0.5, /**/ 1.2, 4.7, 0.5, 5, 2.6, 0, 0, 0.5, /**/ 0, 2.5, 0.7, 0, 2.7, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 0, 0,  /**/ 5.4, 2.25, 0.5, 0, 1, 0, 1, 0 }
		"AR5" => { /*header*/ 5, 0.5, 0, 0.5, 0, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 5, 2.5, 0.7, 1, 1, 0, 0, 0.7,  /**/ 2.5, 5, 0.7, 0, 3, 0, 0, 0.5,  /**/ 0, 2.5, 0.7, 0, 3, 0, 0, 0.5,  /**/ 2.5, 0, 0.5, 0, 1, 0, 0, 0,  /**/ 2.5, 0, 0.5, 1, 1, 0, 1, 0 }
		"AUF+AR" => { /*header*/ 10.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK:RNB:RN", /*data*/ 0, 5, 0, 1, 3, 0, 0, 0.5,  /**/ 1.75, 2.5, 0.5, 0, 2, 0, 0, 0,  /**/ 5.75, 0, 0.5, 0, 1, 0, 0, 0.7,  /**/ 10.5, 2.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 8, 5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 5.5, 2.5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 8, 0, 0.5, 0, 1, 0, 1, 0 }
		"OFF+AR" => { /*english*/ 10.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LKA:LK:RNB:RN", /*data*/ 0, 5, 0, 1, 3, 0, 0, 0.5,  /**/ 1.75, 2.5, 0.5, 0, 2, 0, 0, 0,  /**/ 5.75, 0, 0.5, 0, 1, 0, 0, 0.7,  /**/ 10.5, 2.5, 0.7, 0, 1, 0, 0, 0.7,  /**/ 8, 5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 5.5, 2.5, 0.7, 0, 1, 0, 0, 0.5,  /**/ 8, 0, 0.5, 0, 1, 0, 1, 0 }
		"@R" => {  /*R3^fromDESSBAS*/ 5,  0.5,  0,  0.5,  0,  1,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*d*/ 0,  0,  0.5,  0,  1,  0,  0,  0.5, /**/ -2.5,  4,  0.7,  0,  1,  0,  0,  0.5, /**/ -5,  1.5,  0.7,  0,  1,  0,  0,  0.5, /**/ -2.5,  -1,  0.5,  0,  1,  0,  2,  0.5, /**/ 0,  1.5,  0.5,  0,  1,  0,  1,  0.7 }
		"@R_S" => {  /*shadowablecombinabler*/ 5,  0.5,  0,  0.5,  0,  1,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*d*/ 0,  0,  0.5,  0,  1,  0,  0,  0.5, /**/ -2.5,  4,  0.7,  0,  1.75,  0,  0,  0.5, /**/ -5,  1.5,  0.7,  0,  2.5,  0,  0,  0.5, /**/ -2.5,  -1,  0.5,  0,  1,  0,  2,  0.5, /**/ 0,  1.5,  0.5,  0,  1,  0,  1,  0.7 }
		"@R3^" => {  /*h*/ 5,  0.5,  0,  0.5,  0,  1,  0,  "", /**/ "",  "",  "",  "",  0,  0,  0,  0, /**/ 0,  0,  0,  0,  0,  0,  0,  0, /*d*/ 0,  0,  0.5,  0,  1,  0,  0,  0.5, /**/ -2.5,  4,  0.7,  0,  1,  0,  0,  0.5, /**/ -5,  1.5,  0.7,  0,  1,  0,  0,  0.5, /**/ -2.5,  -1,  0.5,  0,  1,  0,  2,  0.5, /**/ 0,  1.5,  0.5,  0,  1,  0,  1,  0.7 }			
		"@R6" => { /*header*/ 0, 0.5, 0, 0.5, 0, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0.5, 0, 1, 0, 0, 0.5, /*hilfspunkt*/ 1.5, 0.3, 0.5, 0, 1, 0, 0, 0.5, /**/ 2.2, 2.25, 0.7, 0, 1, 0, 0, 0.5,  /**/ 0, 5, 0.7, 0, 1, 0, 0, 0.5,  /**/ -2.5, 2.85, 0.5, 0, 1, 0, 2, 0.5,  /**/ 0, 0, 0.5, 0, 1, 0, 1, 0.5 }
		"S" => { /*header*/ 6.75, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, 4.3, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 1.6, 5, 0.5, 2, 1.75, 0, 0, 0.5,  /**/ 3.2, 4.5, 0.5, 0, 2.5, 0, 0, 0,  /**/ 5, 3.5, 0.5, 0, 2.5, 0, 0, 0,  /**/ 8.75, 0, 0, 0, 1, 0, 1, 0, /*diacritics*/ 5,  -5,  0,  "@#.",  0,  0,  0,  0, /*diacritics*/ -2,  10,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 3,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"=S" => { /*header*/ 6.75, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, 5.25, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 1.6, 5, 0.5, 2, 1.75, 0, 0, 0.5,  /**/ 3.2, 4.5, 0.5, 0, 2.5, 0, 0, 0,  /**/ 5, 3.5, 0.5, 0, 2.5, 0, 0, 0,  /**/ 8.75, 0, 0, 0, 1, 0, 1, 0, /*diacritics*/ 5,  -5,  0,  "@#.",  0,  0,  0,  0, /*diacritics*/ -2,  10,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 3,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"&S" => { /*combination&ts*/ 6.75, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, 4.1, 0.5, 1, 1.0, 0, 0, 0.5,  /**/ 2, 5, 0.5, 2, 1.75, 0, 0, 0.5,  /**/ 3.6, 4.5, 0.5, 0, 2.5, 0, 0, 0,  /**/ 5.4, 3.5, 0.5, 0, 2.5, 0, 0, 0,  /**/ 9.15, 0, 0, 0, 1, 0, 1, 0 }
		"_S" => { /*header*/ 7, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 4, 4.25, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 3.5, 5, 0.5, 2, 2, 0, 0, 0.5,  /**/ 2, 4, 0.5, 0, 3, 0, 0, 0,  /**/ 0, 0, 0.5, 0, 3, 0, 1, 0 }
		"-S" => { /*saftervrSPANISH*/ 6.75, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 1, 8.5, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 5.5, 5, 0.5, 2, 2.25, 0, 0, 0,  /**/ 9, 0, 0, 0, 1, 0, 1, 0 }
		"=ES" => { /*header*/ 18.75, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 1, 3, 0.5, 1, 1.5, 0, 0.5, 0.5,  /**/ 3.5, 5.25, 0.5, 0, 1.5, 0, 0.5, 0.5,  /**/ 6, 5.5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 10, 5.5, 0.5, 0, 2, 0, 0, 0.5,  /**/ 12, 5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 14, 4, 0.5, 0, 3, 0, 0, 0,  /**/ 18.75, 0, 0, 0, 1, 0, 1, 0 }
		"S=" => { /*header*/ 9.75, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, /*alternativey*/0, 0, 0, 0, 0, 0, 0, "LNA:LN", /*data*/ 0, 0, 0.5, 1, 1, 0, 0, 0.5,  /**/ 0, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 4.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3, 5, 0.5, 0, 2, 0, 0, 0,  /**/ 5, 4, 0.5, 0, 2.5, 0, 0, 0,  /**/ 9.75, 0, 0, 0, 1, 0, 1, 0, /*diacritics*/ 8,  -5,  0,  "@#/",  0,  0,  0,  0, /*diacritics*/ 8,  -5,  0,  "@#.",  0,  0,  0,  0, /*diacritics*/ 5,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"SER" => { /*spanischandfrenchandgermaneilschrift*/ 11, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 5.5, 5, 0, 0, 0, 0, 0, 0, "LKB:LK", /*data*/ 0, 0, 0.5, 1, 1, 0, 0, 0.5,  /**/ 0.75, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.25, 4.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4.75, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/  7, 5, 0.5, 0, 2, 0, 0, 0.5,  /**/ 7.5, 5, 0.5, 0, 3, 0, 0, 0.5,  /**/ 11.75, 2.0, 0.5, 0, 1, 0, 0, 0.5, /**/ 9, 0, 0.5, 0, 1, 0, 0, 0.5, /**/ 6.25, 2.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 8.5, 5, 0.5, 0, 1, 0, 1, 0 }
		"T" => { /*header*/ 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RND", /*data*/ 0, 20, 0, 1, 2.5, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0,  /**/ 0, 2.5, 0, 4, 1, 0, 0, 0, /*diacritics*/ 3,  -5,  0,  "@#/",  0,  0,  0,  0, /*diacritics*/ 0,  25,  0,  "@#/.",  0,  0,  0,  0, /*diacritics*/ -5,  25,  0,  "@#/_",  0,  0,  0,  0, /*diacritics*/ 0,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"&T" => { /*header*/ 5, 0, 1.5, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 5, 20, 0, 1, 1, 0, 0, 0,  /**/ 5, 20, 0, 0, 1, 0, 1, 0 }
		"&IT" => { /*spanisch*/ 4, 0, 1.5, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 4, 17.8, 0.5, 1, 1, 0, 1, 0.5 }
		"&T-1" => { /*header*/ 4, 0, 1, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 4, 20, 0, 1, 1, 0, 1, 0,  /**/ 4, 20, 0, 0, 1, 0, 1, 0 }
		"&T3/4" => { /*header*/ 4, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 4, 15, 0, 1, 1, 0, 1, 0,  /**/ 4, 15, 0, 0, 1, 0, 1, 0,  /**/ 4, 15, 0, 4, 1, 0, 1, 0 }
		"&&T" => { /*header*/ 4, 0, 1.5, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 4, 20, 0, 1, 1, 0, 1, 0,  /**/ 4, 20, 0, 0, 1, 0, 1, 0 }
		"&T34" => { /*header*/ 4, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 4, 15, 0, 1, 1, 0, 1, 0,  /**/ 4, 15, 0, 0, 1, 0, 1, 0,  /**/ 4, 15, 0, 4, 1, 0, 1, 0 }
		"&TES" => { /*header*/ 23, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 5, 18, 0.5, 1, 1, 0, 0, 0.5,  /**/ 15, 20, 0.5, 0, 1, 0, 0, 0.5, /**/ 20, 17.8, 0.5, 0, 1, 0, 0, 0.5, /**/ 23, 15, 0.5, 0, 1, 0, 1, 0.5 }
		"ET" => { /*header*/ 7, 0, 2.5, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 7, 30, 0, 1, 1, 0, 1, 0,  /**/ 7, 30, 0, 0, 1, 0, 1, 0 }
		"ET3/4" => { /*header*/ 4, 0, 1.5, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 4, 20, 0, 1, 1, 0, 1, 0,  /**/ 4, 20, 0, 0, 1, 0, 1, 0 }
		"V" => { /*header*/ 7, 0.5, 0, 0.5, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPD", /*data*/ 0.0, 16.75, 0.5, 1, 1, 0, 0, 0.5,  /**/ 2.25, 19.5, 0.6, 2, 1, 0, 0, 0,  /**/ 6, 20, 0, 98, 1, 0, 0, 0.5,  /**/ 2.25, 19.5, 0.6, 0, 1.5, 0, 0, 0.5,  /**/ 0.0, 16.75, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ -1.25, 14, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ -1.5, 9.75, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ -0.8, 4.5, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 1, 1.8, 0.5, 0, 1.75, 0, 0, 0.5,  /**/ 3.5, 0.25, 0.5, 4, 1.25, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 8, 2, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ -1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"VV" => { /*header*/ 14, 0.5, 0, 0.5, 1.5, 0, 0, 0, 0, 0, "", "", 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPD", /*data*/ 0, 17.5, 0.5, 1, 1, 0, 0, 0.5,  /**/ 3, 19.5, 0.6, 2, 1, 0, 0, 0,  /**/ 9, 20, 0, 98, 1, 0, 0, 0.5,  /**/ 3, 19.5, 0.6, 0, 1.5, 0, 0, 0.5,  /**/ -0.5, 16, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ -1, 3, 0.5, 0, 3, 0, 0, 0.5,  /**/ /*-1.5, 0, 0.5, 0, 3, 0, 0, 0.5,*/  /**/ 1, -4, 0.5, 0, 3, 0, 0, 0.5,  /**/ 5, -10, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 11.5, -10, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 11.5, -10, 0.5, 0, 1.5, 0, 2, 0.5,  /**/ 14.5, -7, 0.5, 0, 1, 0, 1, 0 }
		"W" => { /*header*/ 8.5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPC:RP", /*data*/ /*diacritics*/ 3,  -5,  0,  "@#/",  0,  0,  0,  0, /**/ 1.5, 8.5, 0.5, 1, 1, 0, 0, 0.5,  /**/ 2.25, 9.25, 0.5, 1.75, 1.0, 0, 0, 0.5,  /**/ 5, 10, 0.5, 98, 1.5, 0, 0, 0.5,  /**/ 2.25, 9.25, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 1.5, 8.5, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 0, 6, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 0.5, 2.5, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 3.5, 0.2, 0.5, 0, 1.5, 0, 0, 0.5, /**/ 4.9, 0.0, 0.5, 4, 1.5, 0, 0, 0.5,  /**/ 4.5, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 7.25, 1.75, 0.5, 0, 1, 0, 1, 0.5, /*diacritics*/ 5,  -5,  0,  "@#.",  0,  0,  0,  0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"X" => { /*header*/ 7, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, 5, 0, 1, 1, 0, 0, 0.5,  /**/ 1, 7.5, 0.5, 2, 1.5, 0, 0, 0.5,  /**/ 0.5, 9.5, 0.5, 0, 2, 0, 0, 0.5,  /**/ -3, 9.75, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ -0.75, 6, 0.5, 0, 2, 0, 0, 0.0,  /**/ /*0, 5, 0.5, 0, 1.5, 0, 0, 0,*/  /**/ 7, 0, 0, 0, 1, 0, 1, 0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"Y" => { /*header*/ 10, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 0, 10, 0, 1, 3, 0, 0, 0,  /**/ 10, 0, 0, 0, 1, 0, 1, 0, /*diacritics*/ 1,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"Z" => { /*header*/ 6, 1, -1, 0, 0, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ 6, 10, 0, 1, 2.25, 0, 0, 0,  /**/ 6, -2.5, 0.5, 0, 1.875, 0, 0, 0.5,  /**/ 4.35, -9, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 2.25, -10, 0.5, 0, 1.25, 0, 0, 0.5,  /**/ 1, -8.8, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 0.25, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5.9, 1.3, 0.5, 4, 1, 0, 2, 0.5,  /**/ 6.2, 0, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 7,  -15,  0,  "@#_",  0,  0,  0,  0, /*diacritics*/ 3,  15,  0,  "@#/.",  0,  0,  0,  0 }		
		"NZ" => { /*header*/ 12, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LPB:LP:RPC:RP", /*data*/ 0, 10, 0, 1, 2.5, 0, 0, 0.5,  /**/ 10, 4, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 12, 1.5, 0.5, 0, 1.75, 0, 0, 0.5, /**/ 10.5, 0, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 8, 1, 0.5, 0, 1.0, 0, 99, 0.5,  /**/ 7.5, 2.5, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 10, 4, 0.5, 0, 1, 0, 1, 0 }
		
		"ZUM" => { /*header*/ 8, 1, -1, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNC:RN", /*data*/ -2, 10, 0, 1, 3, 0, 0, 0.3, /**/ 8, 0, 0.3, 1, 3, 0, 0, 0,  /**/ 7.5, -5, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 5, -9, 0.5, 0, 2.5, 0, 0, 0.5,  /**/ 3, -10, 0.5, 0, 2, 0, 0, 0.5,  /**/ 1.5, -9, 0.5, 0, 1.5, 0, 99, 0.5,  /**/ 0, -7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 2.5, 0.5, 4, 1, 0, 2, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 1, 0 }

		// vowel tokens
		"&E" => { /*header*/ 3, 0.5, 0, 0, 0, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPB:RP", /*data*/ 0, 5, 0, 1, 2.5, 0, 0, 0,  /**/ 0, 2.25, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2, 0, 0.5, 0, 1.0, 0, 2, 0.5,  /**/ 3.5, 1, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 2,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"&A" => { /*header*/ 0, 0.5, 0, 0, 0, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPB:RP", /*data*/ 0, 5, 0, 1, 2.5, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0, /*diacritics*/ 0,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"&U" => { /*header*/ 5, 0.5, 0, 0, 0, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPB:RP", /*data*/ 0, 5, 0, 1, 2.5, 0, 0, 0,  /**/ 5, 0, 0, 0, 1, 0, 1, 0, /*diacritics*/ 3,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"&O" => { /*header*/ 6.75, 0.5, 0, 0.5, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, 5, 0, 1, 1.5, 0, 0, 0.5,  /**/ 0.75, 3, 0.5, 0, 3, 0, 0, 0.5,  /**/ 6, 2.5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 6.75, 0, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 4,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"&I" => { /*header*/ 2, 0.5, 0, 0.5, 1, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0.75, 0.75, 0.5, 1, 1.5, 0, 0, 0.5,  /**/ 1.9, 0, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 0.75, -0.75, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ -0.4, 0, 0.5, 0, 1, 0, 0, 0,    /**/ 0.75, 0.75, 0.5, 0, 1, 0, 1, 0, /*diacritics*/ 0,  -5,  0,  "@#_",  0,  0,  0,  0 }
		"&I1" => { /*for&t&i*/ 4, 0.5, 0, 0.5, 1, 1, 0, 0, 0, 0, "", "", 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RNB:RN", /*data*/ 0, -1, 0.5, 1, 1.0, 0, 0, 0.5, /**/ 2.25, 1, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 3.75, 0.25, 0.5, 0, 1.25, 0, 0, 0.5,  /**/ 3, -0.75, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 1.75, 0.5, 0.5, 0, 1, 0, 0, 0,    /**/ 2.5, 1, 0.5, 0, 1, 0, 1, 0 }

		// special
		"EBBE" => { /*italian*/ 7, 0.5, 0, 0, 0, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPB:RP", /*data*/ 1, 10, 0, 1, 2.5, 0, 0, 0,  /**/ 0, 7.25, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2, 5, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 4, 6, 0.5, 0, 1, 0, 0, 0, /**/ 3.5, 2, 0.5, 0, 1, 0, 0, 0, /**/ 5.5, 0, 0.5, 0, 1, 0, 0, 0, /**/ 7, 1, 0.5, 0, 1, 0, 1, 0,}
		"EBBERO" => { /*italian*/ 7, 0.5, 0, 0, 0, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LNA:LN:RPB:RP", /*data*/ 1, 10, 0, 1, 2.5, 0, 0, 0,  /**/ 0, 7.25, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 2, 5, 0.5, 0, 1.0, 0, 0, 0.5,  /**/ 4, 6, 0.5, 0, 1, 0, 0, 0, /**/ 3.5, 2, 0.5, 0, 1, 0, 0, 0, /**/ 5.5, 0, 0.5, 0, 1, 0, 0, 0, /**/ 9, 0, 0.5, 0, 1, 0, 0, 0, /**/ 10.5, 2.5, 0.5, 0, 1, 0, 0, 0, /**/ 8, 5, 0.5, 0, 1, 0, 0, 0, /**/ 5.5, 2.5, 0.5, 0, 1, 0, 0, 0, /**/ 9, 0, 0.5, 0, 1, 0, 1, 0 }
		//"DOTTED25D" => { /*header:dotted25down*/ 0, 0.5, 0, 0, 0, 0, 0, 0, /**/ 0, 0, "", "", 0, /*13*/-2, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 0, 25, 0, 1, 2.5, 0, 0, 0, /**/ 0, 20, 0, 0, 2.5, 0, 0, 0, /**/ 0, 15, 0, 0, 2.5, 5, 0, 0,/**/ 0, 10, 0, 0, 2.5, 0, 0, 0, /**/ 0, 5, 0, 0, 2.5, 5, 0, 0, /**/ 0, 0, 0, 0, 1, 0, 1, 0 }
		"DOTTED25D" => { /*header:dotted25down*/ 0, 0.5, 0, 0, 0, 0, 0, 0, /**/ 0, 0, "", "", 0, /*13*/-2, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 0, 25, 0, 1, 2.5, 0, 0, 0, /**/ 0, 21, 0, 0, 2.5, 0, 0, 0, /**/ 0, 18, 0, 0, 2.5, 5, 0, 0, /**/ 0, 15, 0, 0, 2.5, 0, 0, 0,/**/ 0, 11, 0, 0, 2.5, 5, 0, 0, /**/ 0, 8, 0, 0, 2.5, 0, 0, 0,  /**/ 0, 4, 0, 0, 2.5, 5, 0, 0, /**/ 0, 0, 0, 0, 1, 0, 1, 0 }
		
		// end vowels
		"-E" => { /*header*/ 1.25, 0.5, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 1, 5, 0, 1, 3, 0, 0, 0,  /**/ 1, 5, 0, 0, 3, 0, 1, 0 }
		"-E1" => { /*header*/ 1.25, 0.5, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 1, 3, 0, 1, 3, 0, 0, 0,  /**/ 1, 3, 0, 0, 3, 0, 1, 0 }
		"-E2" => { /*header*/ 1.25, 0.5, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, /*data*/ 0, 4, 0, 1, 3, 0, 0, 0,  /**/ 0, 4, 0, 0, 3, 0, 1, 0 }
		"-A" => { /*header*/ 0, 0.5, 0, 0.5, 0, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 5, 0, 1, 3, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0 }
		"-U" => { /*header*/ 5, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 5, 0, 1, 3, 0, 0, 0,  /**/ 5, 0, 0, 0, 1, 0, 1, 0 }
		"-O" => { /*header*/ 6.75, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 5, 0, 1, 1.5, 0, 0, 0.5,  /**/ 0.75, 3, 0.5, 0, 3, 0, 0, 0.5,  /**/ 6, 2.5, 0.5, 0, 1.5, 0, 0, 0.5,  /**/ 6.75, 0, 0.5, 0, 1, 0, 1, 0 }
		"-I" => { /*header*/ 1.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, /*data*/ 4, 10, 0, 1, 3, 0, 0, 0,  /**/ 4, 10, 1, 0, 3, 0, 1, 0 }
		"-I1" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 15, 0, 1, 3, 0, 0, 0,  /**/ 0, 15, 1, 0, 3, 0, 1, 0 }
		"-EI" => { /*header*/ 1.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, /*data*/ 4, 10, 0, 1, 3, 0, 0, 0,  /**/ 4, 10, 1, 0, 3, 0, 1, 0 }
		"-^EI" => { /*header*/ 1.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 4, 10, 0, 1, 3, 0, 0, 0,  /**/ 4, 10, 1, 0, 3, 0, 1, 0 }
		"/I" => { /*header*/ 1.25, 0.5, 0, 0.5, 1, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 2, 10, 0, 1, 1, 0, 0, 0 }
		
		// bizarre things (?)
		"0-" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0 }
		"00" => { /*header:coordinate00:french*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0 }
		

		// beginnings
		"0N-" => { /*header*/ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LMA", /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0 }
		"0D-" => { /*header*/ 3, 0, -0.5, 0, 0, 0, 1, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LMA", /*data*/ 0, 0, 0, 1, 1, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0 }
		"0D1-" => { /*startbelowbaselinewithoutshiftingdown*/ 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LMA", /*data*/ 0, -5, 0, 1, 1, 0, 0, 0,  /**/ 0, -5, 0, 0, 1, 0, 1, 0 }
		"0U-" => { /*header*/ 5, 0, 0, 0, 0, 0, 1, 0, 0, 0, "", "", 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LMA", /*data*/ 0, 0, 0, 1, 1, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0 }
		"0U1-" => { /*header*/ 5, 0, 0, 0, 0, 0, 1, 0, 0, 0, "", "", 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LMA", /*data*/ 0, 0, 0, 1, 1, 0, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 1, 0 }
		"0U1B-" => { /*headerBASELINE*/ 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "LMA", /*data*/ 0, 10, 0, 1, 1, 0, 0, 0,  /**/ 0, 10, 0, 0, 1, 0, 1, 0 }
		// spaces and punctuation
		"PSPACE" => { /*header*/ 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 2, 0, 0, 0, 1, 5, 2, 0 }
		"~~" => { /*header*/ 12.5, 0, 0, 0.5, 0, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.25, 0.5, 1, 1, 5, 0, 0.5,  /**/ 2.5, 11, 0, 0, 1, 0, 0, 0.5,  /**/ 5, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 7.5, 11, 0, 0, 1, 0, 0, 0.5,  /**/ 10, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 12.5, 11, 0, 0, 1, 0, 0, 0.5, /**/ 15, 9.25, 0.5, 0, 1, 0, 1, 0 }
		"~" => { /*header*/ 12.5, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 10, 0, 1, 1, 5, 0, 0.5,  /**/ 2.5, 11, 0, 0, 1, 0, 0, 0.5,  /**/ 5, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 7.5, 11, 0, 0, 1, 0, 0, 0.5,  /**/ 10, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 12.5, 10, 0, 0, 1, 0, 1, 0 }
		"…" => { /*header*/ 9, 0, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0.5, 0, 0, 1, 1, 5, 0, 0,  /**/ 1, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 1, 0, 0, 1, 0, 1, 0.5,  /**/ 0, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 0, 0, 0, 1, 0, 1, 0.5,  /**/ 4.5, 0, 0, 1, 1, 5, 0, 0,  /**/ 5, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 4.5, 1, 0, 0, 1, 0, 1, 0.5,  /**/ 4, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 4.5, 0, 0, 0, 1, 0, 1, 0.5,  /**/ 8.5, 0, 0, 1, 1, 5, 0, 0,  /**/ 9, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 8.5, 1, 0, 0, 1, 0, 1, 0.5,  /**/ 8, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 8.5, 0, 0, 0, 1, 0, 1, 0 }
		"." => { /*header*/ 1, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0.5, 0, 0, 1, 1, 5, 0, 0,  /**/ 1, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 1, 0, 0, 1, 0, 1, 0.5,  /**/ 0, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 0, 0, 0, 1, 0, 1, 0 }
		"," => { /*header*/ 3, 0, 0, 0, 4, -2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 2, -2, 0, 1, 1, 5, 0, 0,  /**/ 3, 1, 0, 0, 1, 0, 1, 0 }
		";" => { /*header*/ 3, 0, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 2.5, 4.5, 0, 1, 1, 5, 0, 0,  /**/ 3, 5, 0, 0, 1, 0, 1, 0.5,  /**/ 2.5, 5.5, 0, 0, 1, 0, 1, 0.5,  /**/ 2, 5, 0, 0, 1, 0, 1, 0.5,  /**/ 2.5, 4.5, 0, 0, 1, 0, 1, 0.5,  /**/ 3, 1, 0, 1, 1, 5, 0, 0,  /**/ 2, -2, 0, 0, 1, 0, 1, 0 }
		":" => { /*header*/ 3, 0, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0.5, 4.5, 0, 1, 1, 5, 0, 0,  /**/ 1, 5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 5.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0, 5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 4.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 0, 0, 1, 1, 5, 0, 0,  /**/ 1, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 1, 0, 0, 1, 0, 1, 0.5,  /**/ 0, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 0, 0, 0, 1, 0, 1, 0 }
		"!" => { /*header*/ 2, 0, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0.5, 20, 0, 1, 1, 5, 0, 0,  /**/ 0.5, 5, 0, 1, 1, 0, 0, 0,  /**/ 0.5, 0, 0, 1, 1, 5, 0, 0,  /**/ 1, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 1, 0, 0, 1, 0, 1, 0.5,  /**/ 0, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 0, 0, 0, 1, 0, 1, 0 }
		"?" => { /*header*/ 5, 0, 0, 0, 4, 4, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 15, 0, 0, 1, 5, 0, 0.5,  /**/ 1.25, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 20, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.75, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 15, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 13, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 0, 0,  /**/ 2.5, 0, 0, 1, 1, 5, 0, 0,  /**/ 3, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 2.5, 1, 0, 0, 1, 0, 1, 0.5,  /**/ 2, 0.5, 0, 0, 1, 0, 1, 0.5,  /**/ 2.5, 0, 0, 0, 1, 0, 1, 0 }
		"¿" => { /*header:spanish*/ 5, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 5, 0, 0, 0, 1, 5, 0, 0.5,  /**/ 3.75, -4, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, -5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.25, -4, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 2, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 2.5, 10, 0.5, 0, 1, 0, 0, 0,  /**/ 2.5, 15, 0, 1, 1, 5, 0, 0,  /**/ 3, 14.5, 0, 0, 1, 0, 1, 0.5,  /**/ 2.5, 14, 0, 0, 1, 0, 1, 0.5,  /**/ 2, 14.5, 0, 0, 1, 0, 1, 0.5,  /**/ 2.5, 15, 0, 0, 1, 0, 1, 0 }
		"¡" => { /*header*/ 2, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0.5, -5, 0, 1, 1, 5, 0, 0,  /**/ 0.5, 10, 0, 1, 1, 0, 0, 0,  /**/ 0.5, 14, 0, 1, 1, 5, 0, 0,  /**/ 1, 14.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 15, 0, 0, 1, 0, 1, 0.5,  /**/ 0, 14.5, 0, 0, 1, 0, 1, 0.5,  /**/ 0.5, 14, 0, 0, 1, 0, 1, 0 }
		
		// quotes, brackets
		"=" => { /*header*/ 5, 0, 0, 0, 3, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 11, 0, 1, 1, 5, 0, 0.5,  /**/ 5, 11, 0, 0, 1, 0, 0, 0.5,  /**/ 0, 9, 0, 0, 1, 5, 0, 0.5,  /**/ 5, 9, 0, 0, 1, 0, 1, 0 }
		"-" => { /*header*/ 5, 0, 0, 0, 3, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/  0, 9, 0, 0, 1, 5, 0, 0.5,  /**/ 5, 9, 0, 0, 1, 0, 1, 0 }
		"'" => { /*header*/ 1, 0, 0, 0, 1, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 14, 0, 1, 1, 5, 0, 0.5,  /**/ 1, 15, 0, 0, 1, 0, 0, 0.5,  /**/ 1, 18, 0, 0, 1, 0, 1, 0 }
		""" => { /*header*/ 3, 0, 0, 0, 2, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 14, 0, 1, 1, 5, 0, 0.5,  /**/ 1, 15, 0, 0, 1, 0, 0, 0.5,  /**/ 1, 18, 0, 0, 1, 0, 0, 0.5,  /**/ 2, 14, 0, 0, 1, 5, 0, 0.5,  /**/ 3, 15, 0, 0, 1, 0, 0, 0.5,  /**/ 3, 18, 0, 0, 1, 0, 1, 0 }
		"/" => { /*header*/ 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 1, 0, 1, 1, 5, 0, 0,  /**/ 6, 19, 0, 0, 1, 0, 1, 0 }
		"#Q#" => { /*header*/ 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 14, 0, 1, 1, 5, 0, 0.5,  /**/ 1, 15, 0, 0, 1, 0, 0, 0.5,  /**/ 1, 18, 0, 0, 1, 0, 0, 0.5,  /**/ 2, 14, 0, 1, 1, 5, 0, 0.5,  /**/ 3, 15, 0, 0, 1, 0, 0, 0.5,  /**/ 3, 18, 0, 0, 1, 0, 0, 0 }
		"(" => { /*header*/ 4, 0, 0, 0, 0, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 4, 13, 0, 1, 1, 5, 0, 0,  /**/ 0, 13, 0, 0, 1, 0, 0, 0,  /**/ 0, 1, 0, 0, 1, 0, 0, 0,  /**/ 4, 1, 0, 0, 1, 0, 0, 0 }
		")" => { /*header*/ 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 13, 0, 1, 1, 5, 0, 0,  /**/ 4, 13, 0, 0, 1, 0, 0, 0,  /**/ 4, 1, 0, 0, 1, 0, 0, 0,  /**/ 0, 1, 0, 0, 1, 0, 0, 0 }
		// round brackets
		"((" => { /*header*/ 4, 0, 0, 0, 0, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 3, 19, 0.5, 1, 1, 5, 0, 0.5,  /**/ 0, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/  4, -1.25, 0, 0, 1, 0, 0, 0 }
		"))" => { /*header*/ 4, -1, 0, 0, 7, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ -1.5, 19, 0, 1, 1, 5, 0, 0.5,  /**/ 4, 9, 0.5, 0, 1, 0, 0, 0.5,  /**/  1.2, -1.5, 0, 0, 1, 0, 0, 0 }
		"*" => { /*header*/ 6, 0, 0, 0, 1, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 0, 5, 0, 1, 1, 5, 0, 0,  /**/ 6, 5, 0, 0, 1, 0, 0, 0,  /**/ 2.5, 8, 0, 0, 1, 5, 0, 0,  /**/ 3.75, 2, 0, 0, 1, 0, 0, 0, /**/ 1.5, 3, 0, 0, 1, 5, 0, 0,  /**/ 4.75, 6.75, 0, 0, 1, 0, 0, 0, /**/ 0.5, 7.2, 0, 0, 1, 5, 0, 0,  /**/ 5.95, 2.75, 0, 0, 1, 0, 1, 0 }
		"&" => { /*headermostimportanttokeneversinceithadbeenusedbyTiroalready:)*/ 8, 0, 0.5, 0, 1, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 7, 4, 0.5, 1, 1, 0, 0, 0.5,  /**/ 3, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 3, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3, 6, 0.5, 0, 1, 0, 0, 0.5, /**/ 4.5, 8, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3, 10, 0.5, 0, 1, 0, 0, 0.5, /**/ 1.5, 8, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 0, 0.5, 0, 1, 0, 1, 0.5 }
		"CROSS" => { /*crosstokenfordied*/ 8, 0, 0, 0, 1, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 4, 14, 0, 1, 1, 5, 0, 0,  /**/ 4, 1, 0, 0, 1, 0, 0, 0,  /**/ 0, 11, 0, 0, 1, 5, 0, 0,  /**/ 8, 11, 0, 0, 1, 0, 1, 0 }
		"DEGREE" => { /*uppercirclefordegree*/ 3, 0, 0, 0.5, 1, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, /*data*/ 1.5, 10, 0.5, 1, 1, 0, 0, 0.5,  /**/ 0, 8.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.5, 7, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3, 8.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 1.5, 10, 0.5, 0, 1, 0, 1, 0 }
		

		// virtual tokens (vowels; distances, shadowing, position)		
		"A" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "no", "narrow", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#0S" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "no", 0, "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#N" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "no", "narrow", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#NU" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "up", "narrow", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#W" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "no", "wide", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#NS" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "no", "narrow", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#WS" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "no", "wide", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#NDS" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "down", "narrow", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#ND" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "down", "narrow", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#NU" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "up", "narrow", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#WDS" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "down", "wide", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#WD" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "down", "wide", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#WU" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "up", "wide", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"#WUS" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "up", "wide", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"E" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "no", "wide", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"E1" => { /*header:narroweinenglish*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "no", "narrow", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"I" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "up", "narrow", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"O" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "down", "narrow", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"U" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "down", "narrow", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"Ä" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "no", "wide", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"Ö" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "down", "wide", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"Ü" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "down", "wide", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"EU" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "up", "wide", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"AU" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "up", "narrow", "yes", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"EI" => { /*header*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", 2, 0, 0, 0, 0, 0, 0, "up", "wide", "no", 0, 0, /*data*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		// how diacritics for ai is handled: 
		// (1) bundle ai to [AI] in speficic list auf words (default bundling is and remains ai => [EI])
		// (2) a) define "ai" as synonymous to "ei", b) define emtpy dummy token "&AI" with diacritics connection point "#/.", c) combine "&AI" and "@#/." (combiner)
		// (3) rewrite [AI] with [&AI@#/.][AI]	
		// NOTE: creation of additional virtual token "ai" is not strictly necessary (could be done using "ei"), but easier to handle rewriting in rewriter
		// (the downside is that certain [&E] might not be handled correctly that's why we limit this transcription to a narrow list of ai-words)	
		"AI" => { /*sameasei*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", /*virtualtoken*/ 2, 0, 0, 0, 0, 0, 0, "up", "wide", "no", 0, 0, /*emptydata*/ 0, 0, 0, 0, 1, 0, 0, 0 }
		"&AI" => { /*dummydiacriticsforai*/ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", /*normaltoken*/0, 0, 0, 0, 0, 0, 0, "up", "wide", "no", 0, 0, /*data*/ /*diacritics*/ 0,  12,  0,  "@#/.",  0,  0,  0,  0 }
		
		// dummy token (test to place it 0.5 lines higher) --- doesn't work
		//"dummy" => { /*header*/ 0, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, "", "", 0, 1, 1, 0, 0, 0, 0, "", "", "", 0, 0 /*nodata*/ }
		
		// handwritten tokens 
		// upper case		
		"#A+" => { /*header*/ 10, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 5, 19, 0, 0, 1, 0, 0, 0,  /**/ 10, 0, 0, 0, 1, 0, 0, 0,  /**/ 2.5, 9.5, 0, 0, 1, 5, 0, 0,  /**/ 7.5, 9.5, 0, 0, 1, 0, 1, 0 }
		"#B+" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 1.4,  /**/ 8, 13.5, 1.2, 0, 1, 0, 0, 0,  /**/ 0, 9.5, 0, 0, 1, 0, 0, 1.2,  /**/ 9, 3.75, 1.0, 0, 1, 0, 0, 0.5, /**/ 0, 0, 0.5, 0, 1, 0, 1, 0 }
		"#C+" => { /*header*/ 10, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 18, 0.5, 1, 1, 5, 0, 0.5,  /**/ 3, 18.5, 0.5, 1, 1, 0, 0, 0.5,  /**/ 0, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4, 1, 0.5, 0, 1, 0, 0, 0.5, /**/ 11, 1.5, 0.5, 0, 1, 0, 1, 0  }
		"#D+" => { /*header*/ 10, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 1.0, /**/ /*5, 17, 0.5, 0, 1, 0, 0, 0.5,*/ /**/ 10, 9.5, 1.1, 0, 1, 0, 0, 0.5, /**/ /*7, 1, 0.5, 0, 1, 0, 0, 0.5,*/ /**/ 0, 0.2, 0, 0, 1, 0, 1, 0 }
		"#E+" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 0, /**/ 8, 19, 0, 0, 1, 0, 0, 0, /**/ 0, 9.5, 0, 0, 1, 5, 0, 0, /**/ 6, 9.5, 0, 0, 1, 0, 0, 0, /**/ 0, 0, 0, 0, 1, 5, 0, 0, /**/ 8, 0, 0, 0, 1, 0, 1, 0 }
		"#F+" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 0, /**/ 8, 19, 0, 0, 1, 0, 0, 0, /**/ 0, 9.5, 0, 0, 1, 5, 0, 0, /**/ 6, 9.5, 0, 0, 1, 0, 1, 0 }
		"#G+" => { /*header*/ 12, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 19, 0.5, 1, 1, 5, 0, 0.5,  /**/ 3, 18, 0.5, 1, 1, 0, 0, 0.5,  /**/ 0, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4, 2, 0.5, 0, 1, 0, 0, 0.5, /**/ 9, 0.2, 0.7, 0, 1, 0, 0, 0, /**/ 12, 8, 0, 0, 1, 0, 0, 0, /**/ 5, 8, 0, 0, 1, 0, 1, 0  }
		"#H+" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 0, /**/ 0, 9.5, 0, 0, 1, 5, 0, 0, /**/ 8, 9.5, 0, 0, 1, 0, 0, 0, /**/ 8, 0, 0, 0, 1, 5, 0, 0, /**/ 8, 19, 0, 0, 1, 0, 1, 0 }
		"#I+" => { /*header*/ 2, 0, 0, 0, 6, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 1, 0 }
		"#J+" => { /*header*/ 8, 0, 0, 0, 2, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 5, 0.5, 1, 1, 5, 0, 0.8,  /**/ 5, 0, 0.7, 0, 1, 0, 0, 0.5, /**/ 8, 6, 0, 0, 1, 0, 0, 0, /**/ 8, 19, 0, 0, 1, 0, 1, 0 }
		"#K+" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 0, /**/ 1, 9.5, 0, 0, 1, 5, 0, 0, /**/ 8, 19, 0, 0, 1, 0, 0, 0, /**/ 1, 9.5, 0, 0, 1, 5, 0, 0, /**/ 8, 0, 0, 0, 1, 0, 1, 0 }
		"#L+" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0,  /**/ 0, 0, 0, 0, 1, 0, 0, 0, /**/ 8, 0, 0, 0, 1, 0, 1, 0 }
		"#M+" => { /*header*/ 10, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 0, /**/ 5, 9.5, 0, 0, 1, 0, 0, 0, /**/ 10, 19, 0, 0, 1, 0, 0, 0, /**/ 10, 0, 0, 0, 1, 0, 1, 0 }
		"#N+" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 0, /**/ 8, 0, 0, 0, 1, 0, 0, 0, /**/ 8, 19, 0, 0, 1, 0, 1, 0 }
		"#O+" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 4, 0.2, 0, 0, 1, 5, 0, 0.5,  /**/ 7, 1.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 17, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 17.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 4, 0.2, 0, 1, 1, 0, 0, 0,  /**/ 6, 2.5, 0, 0, 1, 5, 1, 0 }
		"#P+" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 1.1,  /**/ /*3, 18, 0.5, 0, 1, 0, 0, 0.5,*/  /**/ 7, 14.5, 1.1, 0, 1, 0, 0, 0.5,  /**/ /*3, 10.5, 0.5, 0, 1, 0, 0, 0,*/ /**/ 0, 9.5, 0, 0, 1, 0, 1, 0 }
		"#Q+" => { /*header*/ 9, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 4, 0.2, 0, 0, 1, 5, 0, 0.5,  /**/ 7, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 17.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 17.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 4, 0.2, 0, 1, 1, 0, 0, 0,  /**/ 7, 2.5, 0, 0, 1, 5, 0, 0, /**/ 4, 5, 0, 0, 1, 5, 0, 0, /**/ 9, 0, 0, 0, 1, 0, 1, 0 }
		"#R+" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 1.0,  /**/ /*3, 18, 0.5, 0, 1, 0, 0, 0.5,*/  /**/ 8, 14.5, 1.0, 0, 1, 0, 0, 0.0,  /**/ /*3, 10.5, 0.5, 0, 1, 0, 0, 0,*/ /**/ 1, 9.5, 0, 0, 1, 0, 0, 0, /**/ 8, 0, 0, 0, 1, 0, 1, 0 }
		"#S+" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 17, 0, 1, 1, 5, 0, 0.5, /**/ 1.5, 18, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 14.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 1.5, 11, 0.5, 0, 1, 0, 0, 0.5,  /**/ /*4, 9.5, 0.5, 0, 1, 0, 0, 0.5,*/ /**/ 6.5, 8.0, 0.5, 0, 1, 0, 0, 0.7, /**/ 9, 4.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 7, 0.2, 0.5, 0, 1, 0, 0, 0.5,  /**/  0, 3, 0, 0, 1, 0, 1, 0 }
		"#T+" => { /*header*/ 12, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 18.5, 0, 1, 1, 5, 0, 0,  /**/ 12, 18.5, 0, 0, 1, 0, 0, 0, /**/ 6, 18.5, 0, 0, 1, 5, 0, 0, /**/ 6, 0.5, 0, 0, 1, 0, 1, 0 }
		"#U+" => { /*header*/ 10, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 0, 1, 5, 0, 0,  /**/ 0, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 10, 5, 0, 0, 1, 0, 0, 0,  /**/ 10, 19, 0, 0, 1, 0, 1, 0 }
		"#V+" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0,  /**/ 5, 0, 0, 0, 1, 0, 0, 0, /**/ 10, 19, 0, 0, 1, 0, 1, 0 }
		"#W+" => { /*header*/ 12, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0,  /**/ 4, 0, 0, 0, 1, 0, 0, 0, /**/ 6, 9.5, 0, 0, 1, 0, 0, 0, /**/ 8, 0, 0, 0, 1, 0, 0, 0, /**/ 12, 19, 0, 0, 1, 0, 1, 0 }
		"#X+" => { /*header*/ 10, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0,  /**/ 10, 0, 0, 0, 1, 0, 0, 0, /**/ 0, 0, 0, 0, 1, 5, 0, 0, /**/ 10, 19, 0, 0, 1, 0, 1, 0 }
		"#Y+" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0,  /**/ 5, 9.5, 0, 0, 1, 0, 0, 0, /**/ 10, 19, 0, 0, 1, 0, 0, 0, /**/ 5, 9.5, 0, 0, 1, 5, 0, 0, /**/ 5, 0, 0, 0, 1, 0, 1, 0 }
		"#Z+" => { /*header*/ 8, 0, 0, 0, 4, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 18.75, 0, 1, 1, 5, 0, 0,  /**/ 10, 18.75, 0, 0, 1, 0, 0, 0, /**/ 2, 0.25, 0, 0, 1, 0, 0, 0, /**/ 12, 0.25, 0, 0, 1, 0, 1, 0 }
		"#Ä+" => { /*header*/ 10, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 0, 0, 1, 1, 5, 0, 0,  /**/ 5, 19, 0, 0, 1, 0, 0, 0,  /**/ 10, 0, 0, 0, 1, 0, 0, 0,  /**/ 2.5, 9.5, 0, 0, 1, 5, 0, 0,  /**/ 7.5, 9.5, 0, 0, 1, 0, 0, 0, /**/ 2.75, 22, 0, 0, 1, 5, 0, 0, /**/ 2.75, 25, 0, 0, 1, 0, 0, 0, /**/ 5.25, 22, 0, 0, 1, 5, 0, 0, /**/ 5.25, 25, 0, 0, 1, 0, 1, 0 }
		"#Ö+" => { /*header*/ 7, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 3.5, 1, 0, 0, 1, 5, 0, 0.5,  /**/ 6, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 17.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 17.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 10, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 3.5, 1, 0, 1, 1, 0, 0, 0,  /**/ 6, 2.5, 0, 0, 1, 5, 0, 0, /**/ 2.75, 22, 0, 0, 1, 5, 0, 0, /**/ 2.75, 25, 0, 0, 1, 0, 0, 0, /**/ 5.25, 22, 0, 0, 1, 5, 0, 0, /**/ 5.25, 25, 0, 0, 1, 0, 1, 0 }
		"#Ü+" => { /*header*/ 10, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 0, 1, 5, 0, 0,  /**/ 0, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 10, 5, 0, 0, 1, 0, 0, 0,  /**/ 10, 19, 0, 0, 1, 0, 0, 0, /**/ 2.75, 22, 0, 0, 1, 5, 0, 0, /**/ 2.75, 25, 0, 0, 1, 0, 0, 0, /**/ 5.25, 22, 0, 0, 1, 5, 0, 0, /**/ 5.25, 25, 0, 0, 1, 0, 1, 0 }
		
		

		// lower case
		"#A-" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 9, 0, 1, 1, 5, 0, 0.5, /**/ 5, 9.5, 0, 0, 1, 0, 0, 0.5, /**/ 1.5, 8, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4.0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 0, 0.7, 0, 1, 0, 0, 0,  /**/ 8, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 8, 1, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 0, 0, 0, 1, 0, 1, 0 }
		"#Á-" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 9, 0, 1, 1, 5, 0, 0.5, /**/ 5, 9.5, 0, 0, 1, 0, 0, 0.5, /**/ 1.5, 8, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4.0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 0, 0.7, 0, 1, 0, 0, 0,  /**/ 8, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 8, 1, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 0, 0, 0, 1, 0, 1, 0, /*accentaigue*/ 1, 12.5, 0.0, 0, 1, 5, 0, 0, /**/ 7, 16, 0.0, 0, 1, 0, 1, 0 }
		"#À-" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 9, 0, 1, 1, 5, 0, 0.5, /**/ 5, 9.5, 0, 0, 1, 0, 0, 0.5, /**/ 1.5, 8, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4.0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 0, 0.7, 0, 1, 0, 0, 0,  /**/ 8, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 8, 1, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 0, 0, 0, 1, 0, 1, 0, /*accentgrave*/ -1, 17, 0.0, 0, 1, 5, 0, 0, /**/ 8, 12.5, 0.0, 0, 1, 0, 1, 0 }
		"#Â-" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 9, 0, 1, 1, 5, 0, 0.5, /**/ 5, 9.5, 0, 0, 1, 0, 0, 0.5, /**/ 1.5, 8, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4.0, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 0, 0.7, 0, 1, 0, 0, 0,  /**/ 8, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 8, 1, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 0, 0, 0, 1, 0, 1, 0, /*circonflexe*/ -1, 12.5, 0.0, 0, 1, 5, 0, 0, /**/ 3, 17, 0.0, 0, 1, 0, 0, 0, /**/ 8, 12.5, 0.0, 0, 1, 0, 1, 0 }
		"#B-" => { /*header*/ 8, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0,  /**/ 0, 0.2, 0.0, 0, 1, 0, 0, 0.5,  /**/ 6, 0.5, 0.0, 0, 1, 0, 0, 0.9,  /**/ 7.75, 5, 1.0, 0, 1, 0, 0, 0.5,  /**/ /*3, 9, 0.5, 0, 1, 0, 0, 0,*/ /**/ 0, 9, 0, 0, 1, 0, 1, 0 }	
		"#Ä-" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 9, 0, 1, 1, 5, 0, 0.5, /**/ 5, 9.5, 0, 0, 1, 0, 0, 0.5, /**/ 1.5, 8, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 0, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 8, 1, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 0, 0, 0, 1, 0, 0, 0, /**/ 3, 12, 0, 0, 1, 5, 0, 0, /**/ 3, 16, 0, 0, 1, 0, 0, 0, /**/ 6, 12, 0, 0, 1, 5, 0, 0, /**/ 6, 16, 0, 0, 1, 0, 1, 0 }		
		"#C-" => { /*header*/ 6, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 6, 9.5, 0, 1, 1, 5, 0, 0,  /**/ 2, 9, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4.75, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 0, 0.5, 0, 1, 0, 1, 0 }	
		"#Ç-" => { /*header*/ 6, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 6, 9.5, 0, 1, 1, 5, 0, 0,  /**/ 2, 9, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4.75, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 0, 0.5, 0, 1, 0, 0, 0, /**/ 8, 1, 0.5, 0, 1, 0, 0, 0, /*cedille*/ 5, 0, 0.0, 0, 1, 5, 0, 0.0, /**/ 5, -2, 0.0, 0, 1, 0, 0, 0.0, /**/ 8, -3.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 5, -5, 0.5, 0, 1, 0, 1, 0.5 }	
		"#D-" => { /*header*/ 6, 0, 0, 0, 5, 2, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 6, 8, 0.5, 1, 1, 5, 0, 0.5,  /**/ 3, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 8.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4.75, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 1.5, 0.5, 0, 1, 0, 0, 0, /**/ 6, 0, 0, 0, 1, 0, 0, 0, /**/ 6, 19, 0, 0, 1, 0, 1, 0 }	
		"#E-" => { /*header*/ 10, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 4.75, 0, 1, 1, 5, 0, 0.5,  /**/ 6, 4.75, 0.5, 1, 1, 0, 0, 0.5,  /**/ 10, 7.1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 9.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 1.5, 8.5, 0.5, 0, 1, 0, 0, 0, /**/ 0, 4.75, 0.5, 0, 1, 0, 0, 0, /**/ 1, 1.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5, /**/ 10, 1.5, 0.5, 0, 1, 0, 1, 0  }
		"#É-" => { /*header*/ 10, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 4.75, 0, 1, 1, 5, 0, 0.5,  /**/ 6, 4.75, 0.5, 1, 1, 0, 0, 0.5,  /**/ 10, 7.1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 9.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 1.5, 8.5, 0.5, 0, 1, 0, 0, 0, /**/ 0, 4.75, 0.5, 0, 1, 0, 0, 0, /**/ 1, 1.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5, /**/ 10, 1.5, 0.5, 0, 1, 0, 0, 0, /*accentaigue*/ 1, 12.5, 0.0, 0, 1, 5, 0, 0, /**/ 7, 16, 0.0, 0, 1, 0, 1, 0  }
		"#È-" => { /*header*/ 10, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 4.75, 0, 1, 1, 5, 0, 0.5,  /**/ 6, 4.75, 0.5, 1, 1, 0, 0, 0.5,  /**/ 10, 7.1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 9.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 1.5, 8.5, 0.5, 0, 1, 0, 0, 0, /**/ 0, 4.75, 0.5, 0, 1, 0, 0, 0, /**/ 1, 1.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5, /**/ 10, 1.5, 0.5, 0, 1, 0, 1, 0, /*accentgrave*/ -1, 17, 0.0, 0, 1, 5, 0, 0, /**/ 8, 12.5, 0.0, 0, 1, 0, 1, 0  }
		"#Ê-" => { /*header*/ 10, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 4.75, 0, 1, 1, 5, 0, 0.5,  /**/ 6, 4.75, 0.5, 1, 1, 0, 0, 0.5,  /**/ 10, 7.1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 9.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 1.5, 8.5, 0.5, 0, 1, 0, 0, 0, /**/ 0, 4.75, 0.5, 0, 1, 0, 0, 0, /**/ 1, 1.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5, /**/ 10, 1.5, 0.5, 0, 1, 0, 1, 0, /*circonflexe*/ -1, 12.5, 0.0, 0, 1, 5, 0, 0, /**/ 3, 17, 0.0, 0, 1, 0, 0, 0, /**/ 8, 12.5, 0.0, 0, 1, 0, 1, 0  }		
		"#Ë-" => { /*header*/ 10, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 4.75, 0, 1, 1, 5, 0, 0.5,  /**/ 6, 4.75, 0.5, 1, 1, 0, 0, 0.5,  /**/ 10, 7.1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 9.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 1.5, 8.5, 0.5, 0, 1, 0, 0, 0, /**/ 0, 4.75, 0.5, 0, 1, 0, 0, 0, /**/ 1, 1.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 5, 0, 0.5, 0, 1, 0, 0, 0.5, /**/ 10, 1.5, 0.5, 0, 1, 0, 1, 0, /*trema*/ 3, 16, 0.0, 0, 1, 5, 0, 0, /**/ 3, 12, 0.0, 0, 1, 0, 0, 0, /**/ 6, 16, 0.0, 0, 1, 5, 0, 0, /**/ 6, 12, 0.0, 0, 1, 0, 1, 0  }
		"#F-" => { /*header*/ 8, 0, 0, 0, 7, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 7, 14.5, 0, 1, 1, 5, 0, 0.5,  /**/ 6, 18, 0.5, 1, 1, 0, 0, 0.5,  /**/ 2, 19, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 15, 0, 0, 1, 0, 0, 0, /**/ 0, -10, 0.5, 0, 1, 0, 0, 0, /**/ -2.75, 4.5, 0, 0, 1, 5, 0, 0, /**/ 3.25, 4.5, 0, 0, 1, 0, 1, 0  }
		"#G-" => { /*header*/ 8, 0, 0, 0, 5, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 9, 0, 1, 1, 5, 0, 0.5, /**/ 5, 9.5, 0, 0, 1, 0, 0, 0.5, /**/ 1.5, 8, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 4, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0.5, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 0, 0.7, 0, 1, 0, 0, 0,  /**/ 8, 9, 0, 0, 1, 0, 0, 0.5,  /**/ 8, 1, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 0, 0, 0, 1, 0, 0, 0, /**/ 8, -7, 0.5, 0, 1, 0, 0, 0.5, /**/ 3.5, -9.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 0, -5, 0, 0, 1, 0, 1, 0 }
		"#H-" => { /*header*/ 10, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0, /**/ 0, 1, 0, 0, 1, 0, 0, 0, /**/ 0, 7, 0.5, 0, 1, 5, 0, 0.5,  /**/ 5, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 10, 7, 0, 0, 1, 0, 0, 0,  /**/ 10, 1, 0, 0, 1, 0, 1, 0 }
		"#I-" => { /*header*/ 2, 0, 0, 0, 6, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 1, 0, 1, 1, 5, 0, 0, /**/ 0, 9.5, 0, 0, 1, 0, 0, 0, /**/ 0, 17, 0, 0, 1, 5, 0, 0,  /**/ 0, 19, 0, 0, 1, 0, 0, 0 }
		"#Í-" => { /*header*/ 2, 0, 0, 0, 6, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 1, 0, 1, 1, 5, 0, 0, /**/ 0, 9.5, 0, 0, 1, 0, 0, 0, /**/ /*accentaigue*/ -1, 14, 0.0, 0, 1, 5, 0, 0, /**/ 3, 18, 0.0, 0, 1, 0, 1, 0 }
		"#Ì-" => { /*header*/ 2, 0, 0, 0, 6, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 1, 0, 1, 1, 5, 0, 0, /**/ 0, 9.5, 0, 0, 1, 0, 0, 0, /**/ /*accentgrave*/ -2, 18, 0.0, 0, 1, 5, 0, 0, /**/ 4, 13, 0.0, 0, 1, 0, 1, 0 }
		"#Î-" => { /*header*/ 2, 0, 0, 0, 6, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 1, 0, 1, 1, 5, 0, 0, /**/ 0, 9.5, 0, 0, 1, 0, 0, 0, /**/ /*circonflexe*/ -3, 13, 0.0, 0, 1, 5, 0, 0, /**/ 0, 17, 0.0, 0, 1, 0, 0, 0, /**/ 3, 13, 0.0, 0, 1, 0, 1, 0 }
		"#Ï-" => { /*header*/ 2, 0, 0, 0, 6, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 1, 0, 1, 1, 5, 0, 0, /**/ 0, 9.5, 0, 0, 1, 0, 0, 0, /**/ /*trema*/ -1.5, 16, 0.0, 0, 1, 5, 0, 0, /**/ -1.5, 12, 0.0, 0, 1, 0, 0, 0, /**/ 1.5, 16, 0.0, 0, 1, 5, 0, 0, /**/ 1.5, 12, 0.0, 0, 1, 0, 1, 0 }
		"#J-" => { /*header*/ 8, 0, 0, 0, 2, 3, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, -5.5, 0.5, 1, 1, 5, 0, 0.5, /**/ 3.5, -9.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 8, -7, 0, 0, 1, 0, 0, 0, /**/ 8, 9.5, 0, 0, 1, 0, 0, 0, /**/ 8, 17, 0, 0, 1, 5, 0, 0,  /**/ 8, 19, 0, 0, 1, 0, 0, 0 }
		"#K-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0, /**/ 0, 1, 0, 0, 1, 0, 0, 0, /**/ 0.25, 5.1, 0, 0, 1, 5, 0, 0, /**/ 6, 9.5, 0, 0, 1, 0, 0, 0, /**/ 0.25, 5.1, 0, 0, 1, 5, 0, 0,  /**/ 8, 1, 0, 0, 1, 0, 0, 0 }
		"#L-" => { /*header*/ 4, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0.0, /**/ 0, 4, 0.5, 0, 1, 0, 0, 0.5, /**/ 2.75, 1, 0.5, 0, 1, 0, 0, 0.5, /**/ 5.25, 1.5, 0, 0, 1, 0, 1, 0 }
		"#M-" => { /*header*/ 12, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0, /**/ 0, 1, 0, 0, 1, 0, 0, 0, /**/ 0, 7, 0.5, 0, 1, 5, 0, 0.5,  /**/ 3, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 7, 0, 0, 1, 0, 0, 0,  /**/ 6, 1, 0, 0, 1, 0, 0, 0, /**/ 6, 7, 0.5, 0, 1, 5, 0, 0.5,  /**/ 9, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 12, 7, 0, 0, 1, 0, 0, 0,  /**/ 12, 1, 0, 0, 1, 0, 1, 0 }
		"#N-" => { /*header*/ 8, 0, 0, 0, 4, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0, /**/ 0, 1, 0, 0, 1, 0, 0, 0, /**/ 0, 7, 0.5, 0, 1, 5, 0, 0.5,  /**/ 4, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 7, 0, 0, 1, 0, 0, 0,  /**/ 8, 1, 0, 0, 1, 0, 1, 0 }
		"#O-" => { /*header*/ 8, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 4, 1, 0, 0, 1, 5, 0, 0.5,  /**/ 7, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 4, 1, 0, 1, 1, 0, 0, 0,  /**/ 6, 2.5, 0, 0, 1, 5, 1, 0 }
		"#Ó-" => { /*header*/ 8, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 4, 1, 0, 0, 1, 5, 0, 0.5,  /**/ 7, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 4, 1, 0, 1, 1, 0, 0, 0,  /**/ 6, 2.5, 0, 0, 1, 5, 1, 0, /*accentaigue*/ 1, 12.5, 0.0, 0, 1, 5, 0, 0, /**/ 7, 16, 0.0, 0, 1, 0, 1, 0 }
		"#Ò-" => { /*header*/ 8, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 4, 1, 0, 0, 1, 5, 0, 0.5,  /**/ 7, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 4, 1, 0, 1, 1, 0, 0, 0,  /**/ 6, 2.5, 0, 0, 1, 5, 1, 0, /*accentgrave*/ -1, 17, 0.0, 0, 1, 5, 0, 0, /**/ 8, 12.5, 0.0, 0, 1, 0, 1, 0 }
		"#Ô-" => { /*header*/ 8, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 4, 1, 0, 0, 1, 5, 0, 0.5,  /**/ 7, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 7, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 4, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 4, 1, 0, 1, 1, 0, 0, 0,  /**/ 6, 2.5, 0, 0, 1, 5, 1, 0, /*circonflexe*/ -1, 12.5, 0.0, 0, 1, 5, 0, 0, /**/ 3, 17, 0.0, 0, 1, 0, 0, 0, /**/ 8, 12.5, 0.0, 0, 1, 0, 1, 0 }
		"#Ö-" => { /*header*/ 7, 0, 0, 0, 3, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 3.5, 1, 0, 0, 1, 5, 0, 0.5,  /**/ 6, 2.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3.5, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 7.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 1, 2.5, 0.5, 0, 1, 0, 0, 0,  /**/ 3.5, 1, 0, 1, 1, 0, 0, 0,  /**/ 6, 2.5, 0, 0, 1, 5, 0, 0, /**/ 3, 12, 0, 0, 1, 5, 0, 0, /**/ 3, 16, 0, 0, 1, 0, 0, 0, /**/ 6, 12, 0, 0, 1, 5, 0, 0, /**/ 6, 16, 0, 0, 1, 0, 1, 0 }
		"#P-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, -9.5, 0, 0, 1, 5, 0, 0, /**/ 0, 9.5, 0, 0, 1, 0, 0, 0.5,  /**/ 5, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 6, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 1, 0.5, 0, 1, 0, 1, 0.5 }
		"#Q-" => { /*header*/ 8, 0, 0, 0, 3, 1, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 8, 9.5, 0, 0, 1, 5, 0, 0, /**/ 3, 9.5, 0, 0, 1, 0, 0, 0.5,  /**/ 0, 5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 3, 1, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 1, 0.5, 0, 1, 0, 0, 0,  /**/ 8, 9.5, 0, 0, 1, 5, 0, 0, /**/ 8, -9.5, 0.5, 0, 1, 0, 1, 0.5 }
		"#R-" => { /*header*/ 8, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0, /**/ 0, 1, 0, 0, 1, 0, 0, 0, /**/ 0, 7, 0.5, 0, 1, 5, 0, 0.5,  /**/ 4, 9.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 8.5, 0, 0, 1, 0, 1, 0 }
		"#S-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 7, 8, 0, 1, 1, 5, 0, 0.5, /**/ 5.5, 9, 0, 1, 1, 0, 0, 0.5, /**/ 1.5, 9, 0.5, 0, 1, 0, 0, 0.5,  /**/ 0, 7.25, 0.5, 0, 1, 0, 0, 0.5, /**/ 1.5, 5.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ /*4, 4.75, 0.5, 0, 1, 0, 0, 0.5,*/ /**/ 6.5, 4, 0.5, 0, 1, 0, 0, 0.5, /**/ 8, 1.8, 0.5, 0, 1, 0, 0, 0.5, /**/ 7, 0.5, 0.5, 0, 1, 0, 0, 0.5,  /**/  3, 1, 0, 0, 1, 0, 0, 0, /**/  0, 2, 0, 0, 1, 0, 1, 0 }
		"#T-" => { /*header*/ 4, 0, 0, 0, 5, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 19, 0, 1, 1, 5, 0, 0, /**/ 0, 3.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 3, 1, 0.5, 0, 1, 0, 0, 0.5, /**/ 5, 2, 0, 0, 1, 0, 0, 0, /**/ -3, 14, 0, 0, 1, 5, 0, 0, /**/ 4, 14, 0, 0, 1, 0, 1, 0 }
		"#U-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0.5, /**/ 0, 2.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 4, 0.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 4, 0, 0, 1, 0, 0, 0,  /**/ 8, 9.5, 0, 0, 1, 5, 0, 0,  /**/ 8, 0.5, 0, 0, 1, 0, 1, 0 }
		"#Ú-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0.5, /**/ 0, 2.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 4, 0.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 4, 0, 0, 1, 0, 0, 0,  /**/ 8, 9.5, 0, 0, 1, 5, 0, 0,  /**/ 8, 0.5, 0, 0, 1, 0, 1, 0, /*accentaigue*/ 1, 12.5, 0.0, 0, 1, 5, 0, 0, /**/ 7, 16, 0.0, 0, 1, 0, 1, 0 }
		"#Ù-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0.5, /**/ 0, 2.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 4, 0.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 4, 0, 0, 1, 0, 0, 0,  /**/ 8, 9.5, 0, 0, 1, 5, 0, 0,  /**/ 8, 0.5, 0, 0, 1, 0, 1, 0, /*accentgrave*/ -1, 17, 0.0, 0, 1, 5, 0, 0, /**/ 8, 12.5, 0.0, 0, 1, 0, 1, 0 }
		"#Û-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0.5, /**/ 0, 2.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 4, 0.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 4, 0, 0, 1, 0, 0, 0,  /**/ 8, 9.5, 0, 0, 1, 5, 0, 0,  /**/ 8, 0.5, 0, 0, 1, 0, 1, 0, /*circonflexe*/ -1, 12.5, 0.0, 0, 1, 5, 0, 0, /**/ 3, 17, 0.0, 0, 1, 0, 0, 0, /**/ 8, 12.5, 0.0, 0, 1, 0, 1, 0 }
		"#Ü-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0.5, /**/ 0, 2.5, 0.5, 0, 1, 0, 0, 0.5, /**/ 4, 0.5, 0.5, 0, 1, 0, 0, 0.5,  /**/ 8, 4, 0, 0, 1, 0, 0, 0,  /**/ 8, 9.5, 0, 0, 1, 5, 0, 0,  /**/ 8, 0.5, 0, 0, 1, 0, 0, 0, /**/ 2, 12, 0, 0, 1, 5, 0, 0, /**/ 2, 16, 0, 0, 1, 0, 0, 0, /**/ 5, 12, 0, 0, 1, 5, 0, 0, /**/ 5, 16, 0, 0, 1, 0, 1, 0 }
				
		"#V-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0, /**/ 4, 0.5, 0, 0, 1, 0, 0, 0, /**/ 8, 9.5, 0, 0, 1, 0, 1, 0 }
		"#W-" => { /*header*/ 11, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0, /**/ 3, 0.5, 0, 0, 1, 0, 0, 0, /**/ 5, 5, 0, 0, 1, 0, 0, 0, /**/ 8, 0.5, 0, 0, 1, 0, 0, 0, /**/ 11, 9.5, 0, 0, 1, 0, 0, 0   }
		"#X-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0, /**/ 8, 0.5, 0, 0, 1, 0, 0, 0, /**/ 0, 0.5, 0, 0, 1, 5, 0, 0, /**/ 8, 9.5, 0, 0, 1, 0, 1, 0 }
		"#Y-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0, /**/ 4, 0, 0, 0.5, 1, 0, 0, 0, /**/ 8, 9.5, 0, 0, 1, 5, 0, 0, /**/ 0.5, -9, 0, 0, 1, 0, 1, 0 }
		"#Z-" => { /*header*/ 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, /*data*/ 0, 9.5, 0, 1, 1, 5, 0, 0, /**/ 8, 9.5, 0, 0, 1, 0, 0, 0, /**/ 1, 0.5, 0, 0, 1, 0, 0, 0, /**/ 9, 0.5, 0, 0, 1, 0, 1, 0 }
		
		//"TEST" => { /*header*/ 10, 0.5, 0, 0.5, 0, 0, 0, 0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "", /*data*/ 0, 0, 0, 1, 1.0, 0, 0, 0.5,  /**/ 10, 20, 0.5, 0, 2.0, 0, 0, 0.5,  /**/ 20, 0, 0, 0, 1.0, 0, 0, 0 }
		

	#EndSubSection(base)
	#BeginSubSection(combiner)
		"&AI" => { "@#/.", "", "" }
		"D" => { "@R", 0, 0 }
		"D" => { "@#/", "", "" }
		"D" => { "@#/.", "", "" }
		"D" => { "@#.", "", "" }
		"D" => { "@R3^", "", "" }				
		"D1" => { "@R", 0, 0 }				
		"C" => { "@R", 0, 0 }
		"ND" => { "@R", 0, 0 }
		"T" => { "@R", 0, 0 }
		"G" => { "@R", 0, 0 }
		"G" => { "@ARR3S", 0, 0 }
		"K" => { "@R", 0, 0 }
		"CH" => { "@R", 0, 0 }
		"WELCH" => { "@R", 0, 0 }
		"WELCH" => { "@L3", 0, 0 }
		"CCHH" => { "@L", 0, 0 }
		"NK" => { "@R", 0, 0 }
		"NG" => { "@R", 0, 0 }
		"NS" => { "@R", 0, 0 }
		"H" => { "@R", 0, 0 }
		"H" => { "@L3", 0, 0 }
		"SCH" => { "@R", 0, 0 }
		"ST" => { "@R", 0, 0 }
		"L" => { "@L", 0, 0 }
		"B" => { "@L", 0, 0 }
		"G" => { "@L3", 0, 0 }
		"M" => { "@L", 0, 0 }
		"MM" => { "@L", 0, 0 }
		"MM" => { "@R6", 0, 0 }
		"F" => { "@L", 0, 0 }
		"P" => { "@L", 0, 0 }
		"PF" => { "@L", 0, 0 }
		"V" => { "@L", 0, 0 }
		"SP" => { "@L", 0, 0 }
		"W" => { "@L", 0, 0 }
		"T" => { "@L3", 0, 0 }
		"TT" => { "@L3", 0, 0 }
		"PP" => { "@L", 0, 0 }
		"CK" => { "@L3", 0, 0 }
		"FF" => { "@L", 0, 0 }
		"NG" => { "@L3", 0, 0 }
		"NS" => { "@L3", 0, 0 }
		"NK" => { "@L3", 0, 0 }
		"D" => { "@L3", 0, 0 }
		"C" => { "@L3", 0, 0 }
		"ND" => { "@L3", 0, 0 }
		"ND1" => { "@L3", 0, 0 }
		"ND2" => { "@L3", 0, 0 }
		"ST" => { "@L3", 0, 0 }
		"NK" => { "@L3", 0, 0 }
		"NK1" => { "@L3", 0, 0 }
		"K" => { "@L3", 0, 0 }
		"Z" => { "@L3", 0, 0 }
		"ZW" => { "@L3", 0, 0 }
		"SCH" => { "@L3", 0, 0 }
		"^SCH" => { "@L3", 0, 0 }  // probably not needed any more (replaced by ^sch_)
		"^SCH_" => { "@L3", 0, 0 }
		"CH" => { "@L3", 0, 0 }
		"^CH" => { "@L3", 0, 0 }
		"^CH" => { "@R", 0, 0 }
		"B" => { "@R6", 0, 0 }
		"SP" => { "@R6", 0, 0 }
		"F" => { "@R6", 0, 0 }
		"M" => { "@R6", 0, 0 }
		"P" => { "@R6", 0, 0 }
		"PF" => { "@R6", 0, 0 }
		"V" => { "@R6", 0, 0 }
		"W" => { "@R6", 0, 0 }
		"Z" => { "@R", 0, 0 }
		"Z" => { "@L3", 0, 0 }
		"^Z1" => { "@L3", 1, -1 }
		"DA" => { "@R", 0, 0 }
		"N" => { "@R6", 0, 0 }
		"N=" => { "@R6", 0, 0 }
		"N=" => { "@L", 0, 0 }
		"N" => { "@L", 0, 0 }
		"N" => { "@#/", "", "" }
		//"NICHT" => { "@R6", 0, 0 } // combined token is not placed higher (why?!?) => use I[N=@R6] instead
		"NN" => { "@L", 0, 0 }
		"NN" => { "@R6", 0, 0 }
		"ON" => { "@#/.", "", "" }
		"ON" => { "@#.", "", "" }
		"Q" => { "@L3", 0, 0}		
		"VR" => { "@L", 0, 0.5 } // problem in this combination is that base token vr offers an alternative exit point
		"VR_NAEP" => { "@L", 0, 0.5 }	// create combined token without alternative exit point => use shifter to rename it (= create identical copy)
		"VR10" => { "@L", 0, 0.5 }
		"RR" => { "@L", 0, 1 }
		"CK" => { "@L", 0, 0 }
		"L" => { "@R6", 0, 0 }
		"TT" => { "@R", 0, 0 }
		"PP" => { "@R6", 0, 0 }
		"CK" => { "@R", 0, 0 }
		"FF" => { "@R6", 0, 0 }
		"LT" => { "@R6", 0, 0 }
		//"N=" => { "@R6", 0, 0 }
		"B" => { "@#/", "", "" }
		"B" => { "@#_", "", "" }
		"B@L" => { "@#_", "", "" }
		"L" => { "@#/", "", "" }
		"L" => { "@#/.", "", "" }
		"L" => { "@#/_", "", "" }
		"S=" => { "@#/", "", "" }
		"AR" => { "@#/", "", "" }
		"AR" => { "@#_", "", "" }
		"VR" => { "@#/_", "", "" }
		"VR" => { "@#/.", "", "" }
		"VR10" => { "@#/_", "", "" }
		"NS" => { "@#.", "", "" }
		"S" => { "@#.", "", "" }
		"S" => { "@#/_", "", "" }
		"S=" => { "@#.", "", "" }
		"SS" => { "@#.", "", "" }
		"DIS" => { "@#.", "", "" }
		"W" => { "@#.", "", "" }
		"W" => { "@#/", "", "" }
		"T" => { "@#/.", "", "" }
		"T" => { "@#/", "", "" }
		"T" => { "@#/_", "", "" }
		"SS" => { "@#/_", "", "" }
		"SS" => { "@#/", "", "" }
		"EST" => { "@#/_", "", "" }
		"IL" => { "@#/_", "", "" }
		"MPF" => { "@#/_", "", "" }
		"ION" => { "@#/_", "", "" }
		"HEIT" => { "@#/_", "", "" }
		"#D#" => { "@#._.", "", "" }
		"#D#" => { "@#/_", "", "" }
		"#D#" => { "@#O", "", "" }
		"B" => { "@#/", "", "" }
		"C" => { "@#/", "", "" }
		"F" => { "@#/", "", "" }
		"G" => { "@#/", "", "" }
		"L" => { "@#/", "", "" }
		"M" => { "@#/", "", "" }
		"V" => { "@#/", "", "" }
		"W" => { "@#/", "", "" }
		"Z" => { "@#/", "", "" }
		"Z" => { "@#/.", "", "" }
		"&A" => { "@#_", "", "" }
		"B" => { "@#_", "", "" }
		"C" => { "@#_", "", "" }
		"D" => { "@#_", "", "" }
		"&E" => { "@#_", "", "" }
		"F" => { "@#_", "", "" }
		"G" => { "@#_", "", "" }
		"H" => { "@#_", "", "" }
		"&I" => { "@#_", "", "" }
		"J" => { "@#_", "", "" }
		"K" => { "@#_", "", "" }
		"L" => { "@#_", "", "" }
		"M" => { "@#_", "", "" }
		"N" => { "@#_", "", "" }
		"N=" => { "@#_", "", "" }
		"N=@#_" => { "@R6", 0, 0 } // for abbreviation Nr. (underscore)
		"&O" => { "@#_", "", "" }
		"P" => { "@#_", "", "" }
		"Q" => { "@#_", "", "" }
		"VR" => { "@#_", "", "" }
		"AR" => { "@#_", "", "" }
		"S" => { "@#_", "", "" }
		"S=" => { "@#_", "", "" }
		"T" => { "@#_", "", "" }
		"&U" => { "@#_", "", "" }
		"V" => { "@#_", "", "" }
		"W" => { "@#_", "", "" }
		"X" => { "@#_", "", "" }
		"Y" => { "@#_", "", "" }
		"Z" => { "@#_", "", "" }
	#EndSubSection(combiner)
	#BeginSubSection(shifter)
		//"VR_NAEP@L" => { "VR@L", 1.0, 1.0, "", "" } // rename token (= create identical copy) => this might create incompatibilities with DESSBAS => leave it as is and replace VR@L by VR_NAEP@L with specific rules for each model
		"ZURÜCK" => { "^^ZURÜCK", 0, 10, 0, 1 }
		"DEM" => { "^DEM", 0, 5, 0, 0 }
		"DEN" => { "^DEN", 0, 5, 0, 0 }
		"DEM" => { "^^DEM", 0, 10, 0, 0 }
		"DEN" => { "^^DEN", 0, 10, 0, 0 }
		"=ES" => { "&EITES", 10, 14.5, 0, 1 }
		"=ES" => { "&ETES", 6, 20, 0, 1 }
		"AUS" => { "&EITAUS", 10, 14.5, 0, 1 }
		"B" => { "&TB", 4, 10, 0, 1 }
		"B@L" => { "&TBL", 4, 10, 0, 1 }
		"B@R6" => { "&TB@R6", 4, 10, 0, 1 }
		"NG" => { "&TNG", 4, 10, 0, 1 }
		"NS" => { "&TNS", 4, 10, 0, 1 }
		"C" => { "&TC", 4, 10, 0, 1 }
		"D" => { "&TD", 4, 10, 0, 1 }
		"FORT" => { "STUNG", 0, 0, 0, "-1" } // same as fort but continue 1 line lower
		"G" => { "&TG", 4, 10, 0, 1 }
		"H" => { "&TH", 4, 10, 0, 1 }
		"&I" => { "&EIT&I", 15, 15, 0, 1.5 }
		"J" => { "&TJ", 4, 10, 0, 1 }
		"L" => { "&T#L", 4, 10, 0, 1 }
		"@L3" => { "&T@L3", 4, 16.5, 0, 1.5 }
		"@L3" => { "&ET@L3", 4, 20, 0, 2 } // english: quietly (two system lines high instead of 1.5!)
		"@L3" => { "&ET3@L3", 6, 30, 0, 3 } // Heimetli (swiss german)
		"ALL" => { "&TALL", 4, 10, 0, 1 }
		"M" => { "&TM", 4, 10, 0, 1 }
		"M@R6" => { "&TM@R6", 4, 10, 0, 1 }
		"W" => { "&TW", 4, 10, 0, 1 }
		"X" => { "&TX", 4, 10, 0, 1 }
		"Y" => { "&TY", 4, 10, 0, 1 }
		"&E" => { "&T&E", 4, 15, 0, 1.5 }
		"&E" => { "&ET&E", 7, 25, 0, 2.5 }
		"SCHAFT" => { "&TSCHAFT", 4, 15, 0, 1.5 }
		"ION" => { "&TION", 4, 10, 0, 1 }
		"N" => { "&TN", 4, 15, 0, 1.5 }
		"VR10" => { "&TVR", 4, 15, 0, 1.5 }
		"VR10@L" => { "&TVR@L", 4, 15, 0, 1.5 }
		"VR10" => { "&ETVR", 9, 25, 0, 2.5 }
		"AR5" => { "&TAR5", 4, 15, 0, 1.5 }
		"&S" => { "&TS", 4, 15, 0, 1.5 }
		"&U" => { "&T&U", 4, 15, 0, 1.5 }
		"&O" => { "&T&O", 4, 15, 0, 1.5 }
		"&I1" => { "&T&I", 4, 15, 0, 1.5 }
		"CH" => { "&TCH", 4, 20, 0, 1 }
		"SCH" => { "&T^SCH", 4, 20, 0, 2 }
		"^Z" => { "&T^Z", 4, 20, 0, 1 }
		"^CH" => { "&T^CH", 4, 20, 0, 1 }  // baseline after token not correct: should be "ch" => { ....., 2 } => leave it like that for the moment
		"CH" => { "&TCH", 4, 20, 0, 2 }  // baseline after token not correct: should be "ch" => { ....., 2 } => leave it like that for the moment		
		"^SCH" => { "&T^SCH", 4, 20, 0, 2 }
		"SCH" => { "&TSCH", 4, 20, 0, 2 }		
		"^Z" => { "&TZ", 4, 10, 0, 2 }
		"F@L" => { "&TF@L", 4, 10, 0, 1 }
		"F" => { "&TF", 4, 10, 0, 1 }
		"HAFT" => { "&THAFT", 4, 10, 0, 1 }
		"K" => { "&TK", 4, 10, 0, 1 }
		"CK" => { "CK1", 0, -10, 0, "-1" }
		"P" => { "&TP", 4, 20, 0, 1 }
		"Q" => { "&TQ", 4, 20, 0, 1 }
		"V" => { "&TV", 4, 10, 0, 1 }
		"NK" => { "&TNK", 4, 20, 0, 1 }
		"PF" => { "&TPF", 4, 20, 0, 1 }
		"SP" => { "&TSP", 4, 20, 0, 1 }
		"ST" => { "&TST", 4, 10, 0, 1 }
		"SCHW" => { "&TSCHW", 4, 30, 0, 1 }
		"TT" => { "TT1", 0, -10, 0, "-1" }
		"ZW" => { "&TZW", 4, 30, 0, 1 }
		"B" => { "&EITB", 18, 10, 0, 1 }
		"NG" => { "&EITNG", 18, 10, 0, 1 }
		"NS" => { "&EITNS", 18, 10, 0, 1 }
		"C" => { "&EITC", 18, 10, 0, 1 }
		"D" => { "&EITD", 18, 10, 0, 1 }
		"G" => { "&EITG", 18, 10, 0, 1 }
		"H" => { "&EITH", 18, 10, 0, 1 }
		"J" => { "&EITJ", 18, 10, 0, 1 }
		"L" => { "&EITL", 18, 10, 0, 1 }
		"@L3" => { "&EIT@L3", 18, 10, 0, 1 }
		"ALL" => { "&EITALL", 18, 10, 0, 1 }
		"M" => { "&EITM", 18, 10, 0, 1 }
		"W" => { "&EITW", 18, 10, 0, 1 }
		"X" => { "&EITX", 18, 10, 0, 1 }
		"Y" => { "&EITY", 18, 10, 0, 1 }
		"&E" => { "&EIT&E", 18, 15, 0, 1.5 }
		"SCHAFT" => { "&EITSCHAFT", 18, 15, 0, 1.5 }
		"N" => { "&EITN", 18, 15, 0, 1.5 }
		"N=" => { "NICHT2", 0, 5, 0, 0.5 }
		"VR" => { "&EITVR", 18, 15, 0, 1.5 }
		"&S" => { "&EITS", 18, 15, 0, 1.5 }
		"U" => { "&EITU", 18, 15, 0, 1.5 }
		"&O" => { "&EIT&O", 18, 15, 0, 1.5 }
		"CH" => { "&EITCH", 18, 20, 0, 1 }
		"SCH" => { "&EITSCH", 18, 20, 0, 2 }
		"Z" => { "&EITZ", 18, 20, 0, 1 }
		"^Z" => { "&EIT^Z", 4, 20, 0, 1 }
		"^CH" => { "&EIT^CH", 4, 20, 0, 1 }
		"^SCH" => { "&EIT^SCH", 4, 20, 0, 1 }
		"F" => { "&EITF", 18, 10, 0, 1 }
		"K" => { "&EITK", 18, 20, 0, 1 }
		"P" => { "&EITP", 18, 20, 0, 1 }
		"Q" => { "&EITQ", 18, 20, 0, 1 }
		"V" => { "&EITV", 18, 20, 0, 1 }
		"NK" => { "&EITK", 18, 20, 0, 1 }
		//"NN" => { "^NN", 0, 10, 0, 1 }
		"PF" => { "&EITPF", 18, 20, 0, 1 }
		"SP" => { "&EITSP", 18, 20, 0, 1 }
		"ST" => { "&EITST", 18, 10, 0, 1 }
		"SCHW" => { "&EITSCHW", 18, 30, 0, 1 }
		"ZW" => { "&EITZW", 18, 30, 0, 1 }
		"@L3" => { "&T@L3", 4, 15, 0, 1.5 }
		"@R" => { "&T@R", 4, 15, 0, 1.5 }
		"@R_S" => { "&T@R_S", 4, 15, 0, 1.5 } // keep preceeding for compatibility reasons
		"@R_S" => { "&EIT@R_S", 18, 15, 0, 1.5 } // keep variant with @R for compatibility reasons
		"@L3" => { "&EIT@L3", 18, 15, 0, 1.5 }
		"@L3" => { "MITTL", 0, 25, 0, 2.5 }
		"@R" => { "&EIT@R", 18, 15, 0, 1.5 }
		"M" => { "ISIM", 4, 10, 0, 1 }
		"ICH" => { "ICH", 0.8, 1.0, "", "" } // remodify "ich" (make it less wide)
		"#A+" => { "#A+0", 0.5, 0.5, "", "" }
		"#B+" => { "#B+0", 0.5, 0.5, "", "" }
		"#C+" => { "#C+0", 0.5, 0.5, "", "" }
		"#D+" => { "#D+0", 0.5, 0.5, "", "" }
		"#E+" => { "#E+0", 0.5, 0.5, "", "" }
		"#F+" => { "#F+0", 0.5, 0.5, "", "" }
		"#G+" => { "#G+0", 0.5, 0.5, "", "" }
		"#H+" => { "#H+0", 0.5, 0.5, "", "" }
		"#I+" => { "#I+0", 0.5, 0.5, "", "" }
		"#J+" => { "#J+0", 0.5, 0.5, "", "" }
		"#K+" => { "#K+0", 0.5, 0.5, "", "" }
		"#L+" => { "#L+0", 0.5, 0.5, "", "" }
		"#M+" => { "#M+0", 0.5, 0.5, "", "" }
		"#N+" => { "#N+0", 0.5, 0.5, "", "" }
		"#O+" => { "#O+0", 0.5, 0.5, "", "" }
		"#P+" => { "#P+0", 0.5, 0.5, "", "" }
		"#Q+" => { "#Q+0", 0.5, 0.5, "", "" }
		"#R+" => { "#R+0", 0.5, 0.5, "", "" }
		"#S+" => { "#S+0", 0.5, 0.5, "", "" }
		"#T+" => { "#T+0", 0.5, 0.5, "", "" }
		"#U+" => { "#U+0", 0.5, 0.5, "", "" }
		"#V+" => { "#V+0", 0.5, 0.5, "", "" }
		"#W+" => { "#W+0", 0.5, 0.5, "", "" }
		"#X+" => { "#X+0", 0.5, 0.5, "", "" }
		"#Y+" => { "#Y+0", 0.5, 0.5, "", "" }
		"#Z+" => { "#Z+0", 0.5, 0.5, "", "" }
		"#Ä+" => { "#Ä+0", 0.5, 0.5, "", "" }
		"#Ö+" => { "#Ö+0", 0.5, 0.5, "", "" }
		"#Ü+" => { "#Ü+0", 0.5, 0.5, "", "" }
		"#A-" => { "#A-0", 0.5, 0.5, "", "" }
		"#Á-" => { "#Á-0", 0.5, 0.5, "", "" }
		"#À-" => { "#À-0", 0.5, 0.5, "", "" }
		"#Â-" => { "#Â-0", 0.5, 0.5, "", "" }
		"#B-" => { "#B-0", 0.5, 0.5, "", "" }
		"#C-" => { "#C-0", 0.5, 0.5, "", "" }
		"#Ç-" => { "#Ç-0", 0.5, 0.5, "", "" }
		"#D-" => { "#D-0", 0.5, 0.5, "", "" }
		"#E-" => { "#E-0", 0.5, 0.5, "", "" }
		"#É-" => { "#É-0", 0.5, 0.5, "", "" }
		"#È-" => { "#È-0", 0.5, 0.5, "", "" }
		"#Ê-" => { "#Ê-0", 0.5, 0.5, "", "" }
		"#Ë-" => { "#Ë-0", 0.5, 0.5, "", "" }
		"#F-" => { "#F-0", 0.5, 0.5, "", "" }
		"#G-" => { "#G-0", 0.5, 0.5, "", "" }
		"#H-" => { "#H-0", 0.5, 0.5, "", "" }
		"#I-" => { "#I-0", 0.5, 0.5, "", "" }
		"#Í-" => { "#Í-0", 0.5, 0.5, "", "" }
		"#Ì-" => { "#Ì-0", 0.5, 0.5, "", "" }
		"#Î-" => { "#Î-0", 0.5, 0.5, "", "" }
		"#Ï-" => { "#Ï-0", 0.5, 0.5, "", "" }
		"#J-" => { "#J-0", 0.5, 0.5, "", "" }
		"#K-" => { "#K-0", 0.5, 0.5, "", "" }
		"#L-" => { "#L-0", 0.5, 0.5, "", "" }
		"#M-" => { "#M-0", 0.5, 0.5, "", "" }
		"#N-" => { "#N-0", 0.5, 0.5, "", "" }
		"#O-" => { "#O-0", 0.5, 0.5, "", "" }
		"#Ó-" => { "#Ó-0", 0.5, 0.5, "", "" }
		"#Ò-" => { "#Ò-0", 0.5, 0.5, "", "" }
		"#Ô-" => { "#Ô-0", 0.5, 0.5, "", "" }
		"#P-" => { "#P-0", 0.5, 0.5, "", "" }
		"#Q-" => { "#Q-0", 0.5, 0.5, "", "" }
		"#R-" => { "#R-0", 0.5, 0.5, "", "" }
		"#S-" => { "#S-0", 0.5, 0.5, "", "" }
		"#T-" => { "#T-0", 0.5, 0.5, "", "" }
		"#U-" => { "#U-0", 0.5, 0.5, "", "" }
		"#Ú-" => { "#Ú-0", 0.5, 0.5, "", "" }
		"#Ù-" => { "#Ù-0", 0.5, 0.5, "", "" }
		"#Û-" => { "#Û-0", 0.5, 0.5, "", "" }
		"#V-" => { "#V-0", 0.5, 0.5, "", "" }
		"#W-" => { "#W-0", 0.5, 0.5, "", "" }
		"#X-" => { "#X-0", 0.5, 0.5, "", "" }
		"#Y-" => { "#Y-0", 0.5, 0.5, "", "" }
		"#Z-" => { "#Z-0", 0.5, 0.5, "", "" }
		"#Ä-" => { "#Ä-0", 0.5, 0.5, "", "" }
		"#Ö-" => { "#Ö-0", 0.5, 0.5, "", "" }
		"#Ü-" => { "#Ü-0", 0.5, 0.5, "", "" }
		"#É-" => { "#É-0", 0.5, 0.5, "", "" }
		//"'" => { "#'", 1.0, 1.0, "", "" }		
		//"'" => { "#'0", 0.5, 0.5, "", "" }
		""" => { "#"", 1.0, 1.0, "", "" }		
		""" => { "#"0", 0.5, 0.5, "", "" }
		"." => { "#.", 1.0, 1.0, "", "" }		
		"." => { "#.0", 0.5, 0.5, "", "" }
		"," => { "#,", 1.0, 1.0, "", "" }		
		"," => { "#,0", 0.5, 0.5, "", "" }
		";" => { "#;", 1.0, 1.0, "", "" }		
		";" => { "#;0", 0.5, 0.5, "", "" }
		":" => { "#:", 1.0, 1.0, "", "" }		
		":" => { "#:0", 0.5, 0.5, "", "" }
		"!" => { "#!", 1.0, 1.0, "", "" }		
		"!" => { "#!0", 0.5, 0.5, "", "" }
		"?" => { "#?", 1.0, 1.0, "", "" }		
		"?" => { "#?0", 0.5, 0.5, "", "" }
		"¿" => { "#¿", 1.0, 1.0, "", "" }		
		"¿" => { "#¿0", 0.5, 0.5, "", "" }
		")" => { "#)", 1.0, 1.0, "", "" }		
		")" => { "#)0", 0.5, 0.5, "", "" }
		"(" => { "#(", 1.0, 1.0, "", "" }		
		"(" => { "#(0", 0.5, 0.5, "", "" }
		"-" => { "#-", 1.0, 1.0, "", "" }
		"-" => { "#-0", 0.5, 0.5, "", "" }
		"0" => { "#00", 0.5, 0.5, "", "" }
		"1" => { "#10", 0.5, 0.5, "", "" }
		"2" => { "#20", 0.5, 0.5, "", "" }
		"3" => { "#30", 0.5, 0.5, "", "" }
		"4" => { "#40", 0.5, 0.5, "", "" }
		"5" => { "#50", 0.5, 0.5, "", "" }
		"6" => { "#60", 0.5, 0.5, "", "" }
		"7" => { "#70", 0.5, 0.5, "", "" }
		"8" => { "#80", 0.5, 0.5, "", "" }
		"9" => { "#90", 0.5, 0.5, "", "" }
		// new font 1
		"#A+" => { "#A+1", 0.5, 0.7, "", "" }
		"#B+" => { "#B+1", 0.5, 0.7, "", "" }
		"#C+" => { "#C+1", 0.5, 0.7, "", "" }
		"#D+" => { "#D+1", 0.5, 0.7, "", "" }
		"#E+" => { "#E+1", 0.5, 0.7, "", "" }
		"#F+" => { "#F+1", 0.5, 0.7, "", "" }
		"#G+" => { "#G+1", 0.5, 0.7, "", "" }
		"#H+" => { "#H+1", 0.5, 0.7, "", "" }
		"#I+" => { "#I+1", 0.5, 0.7, "", "" }
		"#J+" => { "#J+1", 0.5, 0.7, "", "" }
		"#K+" => { "#K+1", 0.5, 0.7, "", "" }
		"#L+" => { "#L+1", 0.5, 0.7, "", "" }
		"#M+" => { "#M+1", 0.5, 0.7, "", "" }
		"#N+" => { "#N+1", 0.5, 0.7, "", "" }
		"#O+" => { "#O+1", 0.5, 0.7, "", "" }
		"#P+" => { "#P+1", 0.5, 0.7, "", "" }
		"#Q+" => { "#Q+1", 0.5, 0.7, "", "" }
		"#R+" => { "#R+1", 0.5, 0.7, "", "" }
		"#S+" => { "#S+1", 0.5, 0.7, "", "" }
		"#T+" => { "#T+1", 0.5, 0.7, "", "" }
		"#U+" => { "#U+1", 0.5, 0.7, "", "" }
		"#V+" => { "#V+1", 0.5, 0.7, "", "" }
		"#W+" => { "#W+1", 0.5, 0.7, "", "" }
		"#X+" => { "#X+1", 0.5, 0.7, "", "" }
		"#Y+" => { "#Y+1", 0.5, 0.7, "", "" }
		"#Z+" => { "#Z+1", 0.5, 0.7, "", "" }
		"#Ä+" => { "#Ä+1", 0.5, 0.7, "", "" }
		"#Ö+" => { "#Ö+1", 0.5, 0.7, "", "" }
		"#Ü+" => { "#Ü+1", 0.5, 0.7, "", "" }
		"#A-" => { "#A-1", 0.5, 0.7, "", "" }
		"#Á-" => { "#Á-1", 0.5, 0.7, "", "" }
		"#À-" => { "#À-1", 0.5, 0.7, "", "" }
		"#Â-" => { "#Â-1", 0.5, 0.7, "", "" }
		"#B-" => { "#B-1", 0.5, 0.7, "", "" }
		"#C-" => { "#C-1", 0.5, 0.7, "", "" }
		"#Ç-" => { "#Ç-1", 0.5, 0.7, "", "" }
		"#D-" => { "#D-1", 0.5, 0.7, "", "" }
		"#E-" => { "#E-1", 0.5, 0.7, "", "" }
		"#F-" => { "#F-1", 0.5, 0.7, "", "" }
		"#G-" => { "#G-1", 0.5, 0.7, "", "" }
		"#H-" => { "#H-1", 0.5, 0.7, "", "" }
		"#I-" => { "#I-1", 0.5, 0.7, "", "" }
		"#Í-" => { "#Í-1", 0.5, 0.7, "", "" }
		"#Ì-" => { "#Ì-1", 0.5, 0.7, "", "" }
		"#Î-" => { "#Î-1", 0.5, 0.7, "", "" }
		"#Ï-" => { "#Ï-1", 0.5, 0.7, "", "" }
		"#J-" => { "#J-1", 0.5, 0.7, "", "" }
		"#K-" => { "#K-1", 0.5, 0.7, "", "" }
		"#L-" => { "#L-1", 0.5, 0.7, "", "" }
		"#M-" => { "#M-1", 0.5, 0.7, "", "" }
		"#N-" => { "#N-1", 0.5, 0.7, "", "" }
		"#O-" => { "#O-1", 0.5, 0.7, "", "" }
		"#Ó-" => { "#Ó-1", 0.5, 0.7, "", "" }
		"#Ò-" => { "#Ò-1", 0.5, 0.7, "", "" }
		"#Ô-" => { "#Ô-1", 0.5, 0.7, "", "" }
		"#P-" => { "#P-1", 0.5, 0.7, "", "" }
		"#Q-" => { "#Q-1", 0.5, 0.7, "", "" }
		"#R-" => { "#R-1", 0.5, 0.7, "", "" }
		"#S-" => { "#S-1", 0.5, 0.7, "", "" }
		"#T-" => { "#T-1", 0.5, 0.7, "", "" }
		"#U-" => { "#U-1", 0.5, 0.7, "", "" }
		"#Ú-" => { "#Ú-1", 0.5, 0.7, "", "" }
		"#Ù-" => { "#Ù-1", 0.5, 0.7, "", "" }
		"#Û-" => { "#Û-1", 0.5, 0.7, "", "" }
		"#V-" => { "#V-1", 0.5, 0.7, "", "" }
		"#W-" => { "#W-1", 0.5, 0.7, "", "" }
		"#X-" => { "#X-1", 0.5, 0.7, "", "" }
		"#Y-" => { "#Y-1", 0.5, 0.7, "", "" }
		"#Z-" => { "#Z-1", 0.5, 0.7, "", "" }
		"#Ä-" => { "#Ä-1", 0.5, 0.7, "", "" }
		"#Ö-" => { "#Ö-1", 0.5, 0.7, "", "" }
		"#Ü-" => { "#Ü-1", 0.5, 0.7, "", "" }
		"#É-" => { "#É-1", 0.5, 0.7, "", "" }
		"#È-" => { "#È-1", 0.5, 0.7, "", "" }
		"#Ê-" => { "#Ê-1", 0.5, 0.7, "", "" }
		"#Ë-" => { "#Ë-1", 0.5, 0.7, "", "" }
		//"'" => { "#'", 1.0, 1.0, "", "" }		
		"'" => { "#'+1", 0.9, 0.7, "", "" }
		//""" => { "#"", 1.0, 1.0, "", "" }		
		""" => { "#"+1", 0.9, 0.7, "", "" }
		"." => { "#.", 1.0, 1.0, "", "" }		
		"." => { "#.+1", 0.5, 0.7, "", "" }
		//"," => { "#,", 1.0, 1.0, "", "" }		
		"," => { "#,+1", 0.6, 1.0, "", "" }
		//";" => { "#;", 1.0, 1.0, "", "" }		
		";" => { "#;+1", 0.6, 1.0, "", "" }
		//":" => { "#:", 1.0, 1.0, "", "" }		
		":" => { "#:+1", 0.7, 1.0, "", "" }
		//"!" => { "#!", 1.0, 1.0, "", "" }		
		"!" => { "#!+1", 0.7, 0.7, "", "" }
		//"?" => { "#?", 1.0, 1.0, "", "" }		
		"?" => { "#?+1", 0.7, 0.7, "", "" }
		//"¿" => { "#¿", 1.0, 1.0, "", "" }		
		"¿" => { "#¿+1", 0.5, 0.7, "", "" }
		//")" => { "#)", 1.0, 1.0, "", "" }		
		"))" => { "#)+1", 0.5, 0.7, "", "" }
		//"(" => { "#(", 1.0, 1.0, "", "" }		
		"((" => { "#(+1", 0.5, 0.7, "", "" }
		//"-" => { "#-", 1.0, 1.0, "", "" }
		"-" => { "#-1", 0.5, 0.7, "", "" }
		"0" => { "#01", 0.5, 0.7, "", "" }
		"1" => { "#11", 0.5, 0.7, "", "" }
		"2" => { "#21", 0.5, 0.7, "", "" }
		"3" => { "#31", 0.5, 0.7, "", "" }
		"4" => { "#41", 0.5, 0.7, "", "" }
		"5" => { "#51", 0.5, 0.7, "", "" }
		"6" => { "#61", 0.5, 0.7, "", "" }
		"7" => { "#71", 0.5, 0.7, "", "" }
		"8" => { "#81", 0.5, 0.7, "", "" }
		"9" => { "#91", 0.5, 0.7, "", "" }			
		// end new font 1		
		// standard numbers are ugly (too big compared to shorthand tokens)
		// substitute them by smaller variants using extended shifter
		"#10" => { "1", 1.0, 1.0, "", "" }		
		"#20" => { "2", 1.0, 1.0, "", "" }		
		"#30" => { "3", 1.0, 1.0, "", "" }		
		"#40" => { "4", 1.0, 1.0, "", "" }		
		"#50" => { "5", 1.0, 1.0, "", "" }		
		"#60" => { "6", 1.0, 1.0, "", "" }		
		"#70" => { "7", 1.0, 1.0, "", "" }		
		"#80" => { "8", 1.0, 1.0, "", "" }		
		"#90" => { "9", 1.0, 1.0, "", "" }		
		"#00" => { "0", 1.0, 1.0, "", "" }				
		//"#A+0" => { "#A+", 2, 2, "a:sf!", "" }
	#EndSubSection(shifter)
#EndSection(font)
#BeginSection(rules)
	#BeginSubSection(global,#>stage0)
		// not needed for font
	#EndSubSection(global,#>stage1)
	#BeginSubSection(dasher,#>stage2)
		// not needed for font
	#EndSubSection(dasher,#>stage3)
	#BeginSubSection(splitter1,#>stage3)
		// not needed for font	
	#EndSubSection(splitter1,!>acronymator,=>packer)
	#BeginSubSection(acronymator)
		// empty
	#EndSubSection(acronymater)
	#BeginSubSection(packer)
		// empty
	#EndSubSection(packer)
	#BeginSubSection(accentizer)
		//empty
	#EndSubSection(accentizer)
	#BeginSubSection(normalizer)
		// empty	
	#EndSubSection(normalizer)
	#BeginSubSection(shortener)
		// not needed for font
	#EndSubSection(shortener,#>stage4)
	#BeginSubSection(upbundler,#>stage4)
		// not needed for font
	#EndSubSection(upbundler)
	#BeginSubSection(decapitalizer)
		// not needed for font
	#EndSubSection(decapitalizer)
	#BeginSubSection(phonetizer)	
		// empty
	#EndSubSection(phonetizer)
	#BeginSubSection(bundler)
		// not needed for font
	#EndSubSection(bundler,=:std)
	#BeginSubSection(relancer1)	
		// empty
	#EndSubSection(relancer1)
	#BeginSubSection(transcriptor)
		// not needed for font
	#EndSubSection(transcriptor)
	#BeginSubSection(completor)
		// not needed for font
	#EndSubSection(completor)
	#BeginSubSection(separator)
		// not needed for font
	#EndSubSection(separator)
	#BeginSubSection(rewriter)
		// not needed for font
	#EndSubSection(rewriter)
	#BeginSubSection(beautifier)
		// not needed for font
	#EndSubSection(beautifier)
	#BeginSubSection(substituter)
		// not needed for font
	#EndSubSection(substituter)
	#BeginSubSection(relancer2)	
		// empty
	#EndSubSection(relancer2)
	#BeginSubSection(eliminator)
		// not needed for font
	#EndSubSection(eliminator)
	#BeginSubSection(prespacer)

		// in order to share font include jailor and corrector inside prespacer	
		// puts all tokens (including single ones) inside brackets []
		"(.*)" => "strtolower()";
		"(\[.*?\])" => "strtoupper()";
		"({.*?})" => "strtoupper()";
		"(?<!\[)([a-z]|ä|ö|ü)" => "[$1]";
	
		// correct incorrect stuff ... :)
		"\[VR@L\]\[-E\]" => "[VR@L][#3-]O[-E]";    // -e 0.5 too high
		"\[VR\]\[-I\]" => "[VR][-I1]"; // -i 0.5 too low 

		// old prespacer:
		// at this point words are raw token sequences inside brackets
		// add spacing where necessary
		
		// convert all to lower
		"(.*)" => "strtolower()";

		// special cases
		"\[f\]\[ar\]" => "f[#2-][ar]";

		// filtering
		"\|" => ""; // filter out | to get correct spacing (case tire-ligne: | is used to separate r-l)
		// filter out all remaining e muet (@), necessary for the spacer to work correctly
		"\]@\[" => "][";
		"\]#\[" => "][";
		
		// #NS is not handled by spacer rules => replace it (treat it like vowel a)
		"\[#ns\]" => "[a]";

		// end prespacer
	#EndSubSection(prespacer)
	#BeginSubSection(spacer)

// special: for english, additional spacing is needed for short e, e.g. in beg
// e1 is defined as short e 
// normal (= german) e with wide distance is kept for "backwards" compatibility

// statistics: these rules cover approximately 249704 token combinations.
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:a|e1|o|u)\])?(\[(?:rück|rr|vr\+ar|vr|ar|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])" => "$1[#d1]$2$3"; // R1|C1: LK#V1:D1#RK (1210)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:i|au)\])(\[(?:les|hab|da|sind|durch|wo|sch|\^sch|ng|ns|st|xt|b|c|d|f|h|j|l|w|&e|&a|&u|d@r|d@#\/|d@r3\^|c@r|ng@r|ns@r|h@r|sch@r|st@r|l@l|b@l|f@l|w@l|ng@l3|ns@l3|d@l3|c@l3|st@l3|sch@l3|\^sch@l3|b@r6|f@r6|w@r6|da@r|l@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|ns@#\.|w@#\.|w@#\/)\])" => "$1[#d10]$2$3"; // R10|C5: LK#V2:D10#RP (2508)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:a|e1|o|u)\])?(\[(?:schw|lt|nk|q|v|nk@r|v@l|nk@l3|v@r6|lt@r6)\])" => "$1[#d11]$2$3"; // R11|C6: LK#V1:D11#RPD (1100)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:i|au)\])(\[(?:schw|lt|nk|q|v|nk@r|v@l|nk@l3|v@r6|lt@r6)\])" => "$1[#d12]$2$3"; // R12|C6: LK#V2:D12#RPD (440)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:a|e1|o|u)\])?(\[(?:tt|tt@l3|tt@r)\])" => "$1[#d13]$2$3"; // R13|C7: LK#V1:D13#RPE (330)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:i|au)\])(\[(?:tt|tt@l3|tt@r)\])" => "$1[#d14]$2$3"; // R14|C7: LK#V2:D14#RPE (132)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:a|e1|o|u)\])?(\[(?:rück|rr|vr\+ar|vr|ar|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])" => "$1[#d15]$2$3"; // R15|C8: LMA#V1:D15#RK (165)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:i|au)\])(\[(?:rück|rr|vr\+ar|vr|ar|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])" => "$1[#d16]$2$3"; // R16|C8: LMA#V2:D16#RK (66)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:a|e1|o|u)\])?(\[(?:in|sein|gegen|hat|vor|vorar|ant|ur|anti|ion|on|haft|schaft|auf|off|aus|\-aus|bei|bei\+ar|solch|selb|fort|schm|mpf|\^ch|\^z|ff|ll|mm|nn|ss|sobre|ch|nd|pf|g|m|n|auf\+ar|off\+ar|s|\-s|x|y|z|&o|&i|nd@r|g@r|ch@r|g@l3|m@l|mm@l|pf@l|ff@l|nd@l3|z@l3|ch@l3|m@r6|pf@r6|z@r|n@r6|n@l|n@#\/|nn@l|nn@r6|ff@r6|m@#_|s@#\.|s@#\/_|ss@#\.|ss@#\/_|mpf@#\/_|ion@#\/_)\])" => "$1[#d17]$2$3"; // R17|C9: LMA#V1:D17#RN (1110)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:i|au)\])(\[(?:in|sein|gegen|hat|vor|vorar|ant|ur|anti|ion|on|haft|schaft|auf|off|aus|\-aus|bei|bei\+ar|solch|selb|fort|schm|mpf|\^ch|\^z|ff|ll|mm|nn|ss|sobre|ch|nd|pf|g|m|n|auf\+ar|off\+ar|s|\-s|x|y|z|&o|&i|nd@r|g@r|ch@r|g@l3|m@l|mm@l|pf@l|ff@l|nd@l3|z@l3|ch@l3|m@r6|pf@r6|z@r|n@r6|n@l|n@#\/|nn@l|nn@r6|ff@r6|m@#_|s@#\.|s@#\/_|ss@#\.|ss@#\/_|mpf@#\/_|ion@#\/_)\])" => "$1[#d18]$2$3"; // R18|C9: LMA#V2:D18#RN (444)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:a|e1|o|u)\])?(\[(?:sp|sp1|sp2|mp|perhaps|zw|k|p|t|t@r|k@r|p@l|sp@l|t@l3|k@l3|sp@r6|p@r6|t@#\/\.|t@#\/|t@#\/_)\])" => "$1[#d19]$2$3"; // R19|C10: LMA#V1:D19#RND (300)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:i|au)\])(\[(?:rück|rr|vr\+ar|vr|ar|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])" => "$1[#d2]$2$3"; // R2|C1: LK#V2:D2#RK (484)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:i|au)\])(\[(?:sp|sp1|sp2|mp|perhaps|zw|k|p|t|t@r|k@r|p@l|sp@l|t@l3|k@l3|sp@r6|p@r6|t@#\/\.|t@#\/|t@#\/_)\])" => "$1[#d20]$2$3"; // R20|C10: LMA#V2:D20#RND (120)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:a|e1|o|u)\])?(\[(?:ck|pp|pp@l|ck@l3|ck@l|pp@r6|ck@r)\])" => "$1[#d21]$2$3"; // R21|C11: LMA#V1:D21#RNE (105)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:i|au)\])(\[(?:ck|pp|pp@l|ck@l3|ck@l|pp@r6|ck@r)\])" => "$1[#d22]$2$3"; // R22|C11: LMA#V2:D22#RNE (42)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:a|e1|o|u)\])?(\[(?:les|hab|da|sind|durch|wo|sch|\^sch|ng|ns|st|xt|b|c|d|f|h|j|l|w|&e|&a|&u|d@r|d@#\/|d@r3\^|c@r|ng@r|ns@r|h@r|sch@r|st@r|l@l|b@l|f@l|w@l|ng@l3|ns@l3|d@l3|c@l3|st@l3|sch@l3|\^sch@l3|b@r6|f@r6|w@r6|da@r|l@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|ns@#\.|w@#\.|w@#\/)\])" => "$1[#d23]$2$3"; // R23|C12: LMA#V1:D23#RP (855)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:i|au)\])(\[(?:les|hab|da|sind|durch|wo|sch|\^sch|ng|ns|st|xt|b|c|d|f|h|j|l|w|&e|&a|&u|d@r|d@#\/|d@r3\^|c@r|ng@r|ns@r|h@r|sch@r|st@r|l@l|b@l|f@l|w@l|ng@l3|ns@l3|d@l3|c@l3|st@l3|sch@l3|\^sch@l3|b@r6|f@r6|w@r6|da@r|l@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|ns@#\.|w@#\.|w@#\/)\])" => "$1[#d24]$2$3"; // R24|C12: LMA#V2:D24#RP (342)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:a|e1|o|u)\])?(\[(?:schw|lt|nk|q|v|nk@r|v@l|nk@l3|v@r6|lt@r6)\])" => "$1[#d25]$2$3"; // R25|C13: LMA#V1:D25#RPD (150)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:i|au)\])(\[(?:schw|lt|nk|q|v|nk@r|v@l|nk@l3|v@r6|lt@r6)\])" => "$1[#d26]$2$3"; // R26|C13: LMA#V2:D26#RPD (60)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:a|e1|o|u)\])?(\[(?:tt|tt@l3|tt@r)\])" => "$1[#d27]$2$3"; // R27|C14: LMA#V1:D27#RPE (45)
"(\[(?:0n\-|0d\-|0u\-)\])(\[(?:i|au)\])(\[(?:tt|tt@l3|tt@r)\])" => "$1[#d28]$2$3"; // R28|C14: LMA#V2:D28#RPE (18)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:rück|rr|vr\+ar|vr|ar|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])" => "$1[#d29]$2$3"; // R29|C15: LN#V1:D29#RK (6655)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:a|e1|o|u)\])?(\[(?:in|sein|gegen|hat|vor|vorar|ant|ur|anti|ion|on|haft|schaft|auf|off|aus|\-aus|bei|bei\+ar|solch|selb|fort|schm|mpf|\^ch|\^z|ff|ll|mm|nn|ss|sobre|ch|nd|pf|g|m|n|auf\+ar|off\+ar|s|\-s|x|y|z|&o|&i|nd@r|g@r|ch@r|g@l3|m@l|mm@l|pf@l|ff@l|nd@l3|z@l3|ch@l3|m@r6|pf@r6|z@r|n@r6|n@l|n@#\/|nn@l|nn@r6|ff@r6|m@#_|s@#\.|s@#\/_|ss@#\.|ss@#\/_|mpf@#\/_|ion@#\/_)\])" => "$1[#d3]$2$3"; // R3|C2: LK#V1:D3#RN (8140)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:i|au)\])(\[(?:rück|rr|vr\+ar|vr|ar|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])" => "$1[#d30]$2$3"; // R30|C15: LN#V2:D30#RK (2662)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:in|sein|gegen|hat|vor|vorar|ant|ur|anti|ion|on|haft|schaft|auf|off|aus|\-aus|bei|bei\+ar|solch|selb|fort|schm|mpf|\^ch|\^z|ff|ll|mm|nn|ss|sobre|ch|nd|pf|g|m|n|auf\+ar|off\+ar|s|\-s|x|y|z|&o|&i|nd@r|g@r|ch@r|g@l3|m@l|mm@l|pf@l|ff@l|nd@l3|z@l3|ch@l3|m@r6|pf@r6|z@r|n@r6|n@l|n@#\/|nn@l|nn@r6|ff@r6|m@#_|s@#\.|s@#\/_|ss@#\.|ss@#\/_|mpf@#\/_|ion@#\/_)\])" => "$1[#d31]$2$3"; // R31|C16: LN#V1:D31#RN (44770)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:i|au)\])(\[(?:in|sein|gegen|hat|vor|vorar|ant|ur|anti|ion|on|haft|schaft|auf|off|aus|\-aus|bei|bei\+ar|solch|selb|fort|schm|mpf|\^ch|\^z|ff|ll|mm|nn|ss|sobre|ch|nd|pf|g|m|n|auf\+ar|off\+ar|s|\-s|x|y|z|&o|&i|nd@r|g@r|ch@r|g@l3|m@l|mm@l|pf@l|ff@l|nd@l3|z@l3|ch@l3|m@r6|pf@r6|z@r|n@r6|n@l|n@#\/|nn@l|nn@r6|ff@r6|m@#_|s@#\.|s@#\/_|ss@#\.|ss@#\/_|mpf@#\/_|ion@#\/_)\])" => "$1[#d32]$2$3"; // R32|C16: LN#V2:D32#RN (17908)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:sp|sp1|sp2|mp|perhaps|zw|k|p|t|t@r|k@r|p@l|sp@l|t@l3|k@l3|sp@r6|p@r6|t@#\/\.|t@#\/|t@#\/_)\])" => "$1[#d33]$2$3"; // R33|C17: LN#V1:D33#RND (12100)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:i|au)\])(\[(?:sp|sp1|sp2|mp|perhaps|zw|k|p|t|t@r|k@r|p@l|sp@l|t@l3|k@l3|sp@r6|p@r6|t@#\/\.|t@#\/|t@#\/_)\])" => "$1[#d34]$2$3"; // R34|C17: LN#V2:D34#RND (4840)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:ck|pp|pp@l|ck@l3|ck@l|pp@r6|ck@r)\])" => "$1[#d35]$2$3"; // R35|C18: LN#V1:D35#RNE (4235)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:i|au)\])(\[(?:ck|pp|pp@l|ck@l3|ck@l|pp@r6|ck@r)\])" => "$1[#d36]$2$3"; // R36|C18: LN#V2:D36#RNE (1694)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:les|hab|da|sind|durch|wo|sch|\^sch|ng|ns|st|xt|b|c|d|f|h|j|l|w|&e|&a|&u|d@r|d@#\/|d@r3\^|c@r|ng@r|ns@r|h@r|sch@r|st@r|l@l|b@l|f@l|w@l|ng@l3|ns@l3|d@l3|c@l3|st@l3|sch@l3|\^sch@l3|b@r6|f@r6|w@r6|da@r|l@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|ns@#\.|w@#\.|w@#\/)\])" => "$1[#d37]$2$3"; // R37|C19: LN#V1:D37#RP (34485)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:i|au)\])(\[(?:les|hab|da|sind|durch|wo|sch|\^sch|ng|ns|st|xt|b|c|d|f|h|j|l|w|&e|&a|&u|d@r|d@#\/|d@r3\^|c@r|ng@r|ns@r|h@r|sch@r|st@r|l@l|b@l|f@l|w@l|ng@l3|ns@l3|d@l3|c@l3|st@l3|sch@l3|\^sch@l3|b@r6|f@r6|w@r6|da@r|l@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|ns@#\.|w@#\.|w@#\/)\])" => "$1[#d38]$2$3"; // R38|C19: LN#V2:D38#RP (13794)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:schw|lt|nk|q|v|nk@r|v@l|nk@l3|v@r6|lt@r6)\])" => "$1[#d39]$2$3"; // R39|C20: LN#V1:D39#RPD (6050)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:i|au)\])(\[(?:in|sein|gegen|hat|vor|vorar|ant|ur|anti|ion|on|haft|schaft|auf|off|aus|\-aus|bei|bei\+ar|solch|selb|fort|schm|mpf|\^ch|\^z|ff|ll|mm|nn|ss|sobre|ch|nd|pf|g|m|n|auf\+ar|off\+ar|s|\-s|x|y|z|&o|&i|nd@r|g@r|ch@r|g@l3|m@l|mm@l|pf@l|ff@l|nd@l3|z@l3|ch@l3|m@r6|pf@r6|z@r|n@r6|n@l|n@#\/|nn@l|nn@r6|ff@r6|m@#_|s@#\.|s@#\/_|ss@#\.|ss@#\/_|mpf@#\/_|ion@#\/_)\])" => "$1[#d4]$2$3"; // R4|C2: LK#V2:D4#RN (3256)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:i|au)\])(\[(?:schw|lt|nk|q|v|nk@r|v@l|nk@l3|v@r6|lt@r6)\])" => "$1[#d40]$2$3"; // R40|C20: LN#V2:D40#RPD (2420)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:tt|tt@l3|tt@r)\])" => "$1[#d41]$2$3"; // R41|C21: LN#V1:D41#RPE (1815)
"(\[(?:werd|in|les|sein|hab|hat|ant|anti|ion|on|haft|schaft|auf|off|aus|bei|durch|solch|selb|wo|schm|schw|mpf|sch|\^sch|\^ch|\^z|ff|ll|lt|mm|nn|pp|ss|ch|sp|sp1|sp2|mp|perhaps|zw|b|c|h|l|m|n|n\=|p|s|\-s|s\=|t|v|w|x|y|z|&e|&a|&u|&o|&i|c@r|t@r|ch@r|h@r|sch@r|l@l|b@l|m@l|mm@l|p@l|v@l|sp@l|w@l|t@l3|pp@l|ff@l|c@l3|z@l3|sch@l3|\^sch@l3|ch@l3|b@r6|sp@r6|m@r6|p@r6|v@r6|w@r6|z@r|n@r6|n\=@r6|n@l|n@#\/|nn@l|nn@r6|l@r6|pp@r6|ff@r6|lt@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|m@#_|s\=@#\/|s@#\.|s@#\/_|s\=@#\.|ss@#\.|w@#\.|w@#\/|t@#\/\.|t@#\/|t@#\/_|ss@#\/_|mpf@#\/_|ion@#\/_)\])(\[(?:i|au)\])(\[(?:tt|tt@l3|tt@r)\])" => "$1[#d42]$2$3"; // R42|C21: LN#V2:D42#RPE (726)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:rück|rr|vr\+ar|vr|ar|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])" => "$1[#d43]$2$3"; // R43|C22: LP#V1:D43#RK (2750)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:i|au)\])(\[(?:rück|rr|vr\+ar|vr|ar|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])" => "$1[#d44]$2$3"; // R44|C22: LP#V2:D44#RK (1100)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:in|sein|gegen|hat|vor|vorar|ant|ur|anti|ion|on|haft|schaft|auf|off|aus|\-aus|bei|bei\+ar|solch|selb|fort|schm|mpf|\^ch|\^z|ff|ll|mm|nn|ss|sobre|ch|nd|pf|g|m|n|auf\+ar|off\+ar|s|\-s|x|y|z|&o|&i|nd@r|g@r|ch@r|g@l3|m@l|mm@l|pf@l|ff@l|nd@l3|z@l3|ch@l3|m@r6|pf@r6|z@r|n@r6|n@l|n@#\/|nn@l|nn@r6|ff@r6|m@#_|s@#\.|s@#\/_|ss@#\.|ss@#\/_|mpf@#\/_|ion@#\/_)\])" => "$1[#d45]$2$3"; // R45|C23: LP#V1:D45#RN (18500)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:i|au)\])(\[(?:in|sein|gegen|hat|vor|vorar|ant|ur|anti|ion|on|haft|schaft|auf|off|aus|\-aus|bei|bei\+ar|solch|selb|fort|schm|mpf|\^ch|\^z|ff|ll|mm|nn|ss|sobre|ch|nd|pf|g|m|n|auf\+ar|off\+ar|s|\-s|x|y|z|&o|&i|nd@r|g@r|ch@r|g@l3|m@l|mm@l|pf@l|ff@l|nd@l3|z@l3|ch@l3|m@r6|pf@r6|z@r|n@r6|n@l|n@#\/|nn@l|nn@r6|ff@r6|m@#_|s@#\.|s@#\/_|ss@#\.|ss@#\/_|mpf@#\/_|ion@#\/_)\])" => "$1[#d46]$2$3"; // R46|C23: LP#V2:D46#RN (7400)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:sp|sp1|sp2|mp|perhaps|zw|k|p|t|t@r|k@r|p@l|sp@l|t@l3|k@l3|sp@r6|p@r6|t@#\/\.|t@#\/|t@#\/_)\])" => "$1[#d47]$2$3"; // R47|C24: LP#V1:D47#RND (5000)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:i|au)\])(\[(?:sp|sp1|sp2|mp|perhaps|zw|k|p|t|t@r|k@r|p@l|sp@l|t@l3|k@l3|sp@r6|p@r6|t@#\/\.|t@#\/|t@#\/_)\])" => "$1[#d48]$2$3"; // R48|C24: LP#V2:D48#RND (2000)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:ck|pp|pp@l|ck@l3|ck@l|pp@r6|ck@r)\])" => "$1[#d49]$2$3"; // R49|C25: LP#V1:D49#RNE (1750)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:a|e1|o|u)\])?(\[(?:sp|sp1|sp2|mp|perhaps|zw|k|p|t|t@r|k@r|p@l|sp@l|t@l3|k@l3|sp@r6|p@r6|t@#\/\.|t@#\/|t@#\/_)\])" => "$1[#d5]$2$3"; // R5|C3: LK#V1:D5#RND (2200)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:i|au)\])(\[(?:ck|pp|pp@l|ck@l3|ck@l|pp@r6|ck@r)\])" => "$1[#d50]$2$3"; // R50|C25: LP#V2:D50#RNE (700)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:les|hab|da|sind|durch|wo|sch|\^sch|ng|ns|st|xt|b|c|d|f|h|j|l|w|&e|&a|&u|d@r|d@#\/|d@r3\^|c@r|ng@r|ns@r|h@r|sch@r|st@r|l@l|b@l|f@l|w@l|ng@l3|ns@l3|d@l3|c@l3|st@l3|sch@l3|\^sch@l3|b@r6|f@r6|w@r6|da@r|l@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|ns@#\.|w@#\.|w@#\/)\])" => "$1[#d51]$2$3"; // R51|C26: LP#V1:D51#RP (14250)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:i|au)\])(\[(?:les|hab|da|sind|durch|wo|sch|\^sch|ng|ns|st|xt|b|c|d|f|h|j|l|w|&e|&a|&u|d@r|d@#\/|d@r3\^|c@r|ng@r|ns@r|h@r|sch@r|st@r|l@l|b@l|f@l|w@l|ng@l3|ns@l3|d@l3|c@l3|st@l3|sch@l3|\^sch@l3|b@r6|f@r6|w@r6|da@r|l@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|ns@#\.|w@#\.|w@#\/)\])" => "$1[#d52]$2$3"; // R52|C26: LP#V2:D52#RP (5700)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:schw|lt|nk|q|v|nk@r|v@l|nk@l3|v@r6|lt@r6)\])" => "$1[#d53]$2$3"; // R53|C27: LP#V1:D53#RPD (2500)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:i|au)\])(\[(?:schw|lt|nk|q|v|nk@r|v@l|nk@l3|v@r6|lt@r6)\])" => "$1[#d54]$2$3"; // R54|C27: LP#V2:D54#RPD (1000)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:a|e1|o|u)\])?(\[(?:tt|tt@l3|tt@r)\])" => "$1[#d55]$2$3"; // R55|C28: LP#V1:D55#RPE (750)
"(\[(?:est|gegen|da|sind|fort|ck|tt|nd|ng|nk|ns|pf|st|xt|d|f|g|j|k|q|d@r|d@#\/|d@r3\^|nd@r|g@r|k@r|nk@r|ng@r|ns@r|st@r|g@l3|f@l|pf@l|tt@l3|ck@l3|ng@l3|ns@l3|nk@l3|d@l3|nd@l3|st@l3|k@l3|f@r6|pf@r6|da@r|ck@l|tt@r|ck@r|ns@#\.|est@#\/_)\])(\[(?:i|au)\])(\[(?:tt|tt@l3|tt@r)\])" => "$1[#d56]$2$3"; // R56|C28: LP#V2:D56#RPE (300)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:i|au)\])(\[(?:sp|sp1|sp2|mp|perhaps|zw|k|p|t|t@r|k@r|p@l|sp@l|t@l3|k@l3|sp@r6|p@r6|t@#\/\.|t@#\/|t@#\/_)\])" => "$1[#d6]$2$3"; // R6|C3: LK#V2:D6#RND (880)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:a|e1|o|u)\])?(\[(?:ck|pp|pp@l|ck@l3|ck@l|pp@r6|ck@r)\])" => "$1[#d7]$2$3"; // R7|C4: LK#V1:D7#RNE (770)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:i|au)\])(\[(?:ck|pp|pp@l|ck@l3|ck@l|pp@r6|ck@r)\])" => "$1[#d8]$2$3"; // R8|C4: LK#V2:D8#RNE (308)
"(\[(?:vor|vorar|rück|ur|zurück|inter|bei\+ar|rr|rr6|sobre|vr\+ar|vr|ar|auf\+ar|off\+ar|ser|vr@l|rr@l|ar@#\/|ar@#_|vr@#\/_|vr@#\/\.)\])(\[(?:a|e1|o|u)\])?(\[(?:les|hab|da|sind|durch|wo|sch|\^sch|ng|ns|st|xt|b|c|d|f|h|j|l|w|&e|&a|&u|d@r|d@#\/|d@r3\^|c@r|ng@r|ns@r|h@r|sch@r|st@r|l@l|b@l|f@l|w@l|ng@l3|ns@l3|d@l3|c@l3|st@l3|sch@l3|\^sch@l3|b@r6|f@r6|w@r6|da@r|l@r6|b@#\/|b@#_|b@l@#_|l@#\/|l@#\/_|l@#\/\.|ns@#\.|w@#\.|w@#\/)\])" => "$1[#d9]$2$3"; // R9|C5: LK#V1:D9#RP (6270)

	#EndSubSection(spacer)
	#BeginSubSection(postspacer)
		// begin postspacer
		// assign concrete values to distances
		"\[#d1\]" => "[#3]"; 
		"\[#d2\]" => "[#4]";
		"\[#d3\]" => "[#4]"; // corrected 2=>4 because of runde
		"\[#d4\]" => "[#3]";
		"\[#d5\]" => "[#4]";
		"\[#d6\]" => "[#4]";
		"\[#d7\]" => "[#5]";
		"\[#d8\]" => "[#5]";
		"\[#d9\]" => "[#4]"; // corrected: 3=>4 because of: Radar
		"\[#d10\]" => "[#2]";
		"\[#d11\]" => "[#5]";
		"\[#d12\]" => "[#5]";
		"\[#d13\]" => "[#6]";
		"\[#d14\]" => "[#7]";
		"\[#d15\]" => "[#5]"; 
		"\[#d16\]" => "[#0]"; 
		"\[#d17\]" => "[#3]"; 
		"\[#d18\]" => "[#0]"; 
		"\[#d19\]" => "[#4]"; 
		"\[#d20\]" => "[#4]"; 
		"\[#d21\]" => "[#4]"; 
		"\[#d22\]" => "[#4]";
		"\[#d23\]" => "[#3]";
		"\[#d24\]" => "[#1]";
		"\[#d25\]" => "[#2]";
		"\[#d26\]" => "[#3]";
		"\[#d27\]" => "[#5]";
		"\[#d28\]" => "[#6]";
		"\[#d29\]" => "[#5]"; // correction 3=>5 because of später
		"\[#d30\]" => "[#3]";
		"\[#d31\]" => "[#3]"; // 5?
		"\[#d32\]" => "[#3]";
		"\[#d33\]" => "[#6]";
		"\[#d34\]" => "[#4]";	
		"\[#d35\]" => "[#3]";	
		"\[#d36\]" => "[#4]";	
		"\[#d37\]" => "[#4]"; // corrected: 4=>6 because of Bruder, conflict: Katap[u]lt: recorrected 6=>4, correct br+d manually in postspacer
		"\[#d38\]" => "[#4]";
		"\[#d39\]" => "[#3]";
		"\[#d40\]" => "[#3]";
		"\[#d41\]" => "[#3]";
		"\[#d42\]" => "[#3]";
		"\[#d43\]" => "[#4]"; // corrected 3=>4 because of Radar
		"\[#d44\]" => "[#4]";
		"\[#d45\]" => "[#4]";
		"\[#d46\]" => "[#3]";
		"\[#d47\]" => "[#5]";
		"\[#d48\]" => "[#4]";
		"\[#d49\]" => "[#5]";
		"\[#d50\]" => "[#5]";
		"\[#d51\]" => "[#7]";
		"\[#d52\]" => "[#4]";
		"\[#d53\]" => "[#4]";
		"\[#d54\]" => "[#4]"; // this was missing (also in other models!)
		"\[#d55\]" => "[#5]";
		"\[#d56\]" => "[#6]";
	
		
		// special
		"(\[bei\])\[#n\](\[les\])" => "$1[#2-]$2"; // adjust for coexistencia
		"(\[rr\])(?:\[#.\])?(\[ar\])" => "$1[#9-]$2"; // adjust for rtr (artritis) => english: cartridge
		"(\[in\])\[#5\]\[a\](\[p@r6\])" => "$1[A]$2"; // test
		"\[t\]\[#0\]\[a\]\[ck\]" => "[T][#5][A][CK]";
		"\[rr\]\[#3\]\[vr\]" => "[rr][#0][vr]";

		// corrections
		"\[in\]\[#0\]\[a\]\[pp\]" => "[in][#5][a][pp]";

		// dangerous vs dangers
		"\[vr\]\[#2\]\[s\]" => "[VR][#3-][S]"; // not [#2][E1] means dangers 

		// assign 5 to the rest (standard value)
		//"\[#d..?\]" => "[#5]";

		// the following rules where first introduced in a separate section called "beautifier"
		// it's better to include them inside postpacer because they will be included automatically
		// when the font is included into other models
		"\[ar\]((?:\[#.\])?\[(?:i|au)\])" => "[AR^]$1"; 
		"\[ar\]((?:\[#.\])?(\[a\])?\[(?:st|t@r|k|t|f|zw|sp|sp@r6|pp|tt)\])" => "[AR^]$1";
		"\[ar\]((?:\[#.\])?\[(?:[uo])\]\[(?:ck|t|tt)\])" => "[AR^]$1"; // Rucksack
		"(\[(?:\^ch|\^z)\])(\[&t\])" => "$1[#3]$2"; // add a slight spacing
		"(\[pf\])(\[&t\])" => "$1[#3]$2"; // idem
		"\[den\]" => "[0N-][#1][den]"; // make den a little bit longer
		"(\[(?:i|au)\]\[)vr(\])" => "$1VR10$2";
		"\[[Vv][Rr](10)?\]\[#.\]\[aus\]" => "[VR$1][-AUS]";
		//"(\\)(\[\'\]\\\[s\])" => "$1$2"; // gestand's => correct spacing 
		"(\[\'\])" => "[#3-]$1"; // dangerous rule: test it with care!
		"(?<!\[b@l\])\[#[35]\](\[&i\])" => "[#3][&i]"; // nie, schrie; Bianca
		"\[werd\]\[en\]" => "[werd][#4-][en]"; // correction spacing
		"(\[&th\])(\[st\])" => "$1[#4]$2"; // zärtlichste

		// correct spacings manually
		"(\[b@r6\])(?:\[#.\])?(\[u\]\[d\])" => "$1[#6]$2"; // Bruder
		"(\[(?:k(?:@r)?|d)\])(?:\[#.\])?(\[[auo]\]\[(?:t|pp|ff)\])" => "$1[#7]$2"; // Katapult, Kuppel
		"(\[(?:t|t@r|k|g)\])(?:\[#.\])?(\[[auo]\]\[(?:p|pp|ck|pf|d|st|tt)\])" => "$1[#7]$2"; // Katapult, Truppen, Trockne, tapfer
		"(\[t@r\])\[#.\](\[au\]\[t\])" => "$1[#6]$2"; // vertrauten
		"(\[AR\^\])\[#.\](\[t@r\])" => "$1[#2]$2"; // vertrauten
		"\[&ts\]\[a\]\[m\]" => "[&TS][#5][A][M]"; // seltsam
		"(\[(?:n=|w|n|m|l|f)\])\[#.\](\[[uo]\]\[(?:vr|n|g|l)\])" => "$1[#1]$2"; // nur, wurde, nun
		"(\[(?:n=|w|n)\])\[#.\](\[a\]\[(?:vr|n|g)\])" => "$1[#2]$2"; // nur, wurde, nun
		"(\[(?:[VvUu][Rr](?:10)?|vor)\])\[#.\](\[a\])?(\[(?:[sn]|n@r6)\])" => "$1[#1-]$2$3"; // Vers, fern
		"(\[(?:vr|VR10)\])\[#.\](\[a\])?(\[(?:[gmkz]|sch|vor|g@r)\])" => "$1[#1]$2$3"; // Vers, fern, warm, stärker, kurzem
		"(\[s\])\[#.\](\[u\]\[ch\])" => "$1[#6]$2"; // aufsucht
		"(\[auf\])\[#.\](\[a\])?(\[(?:s)\])" => "[auf-][#1-]$2[&s]"; // aufsucht
		"(\[auf\])\[#.\](\[a\])?(\[(?:g|sch@l3|sch|z|w|n|vr)\])" => "$1[#1-]$2$3"; // aufgestossen
		"(\[auf\])\[#.\](\[a\])?(\[(?:sch@r)\])" => "$1[#7-]$2$3"; // Aufschrei
		"(\[auf\])\[#.\](\[(?:st|f@r6|t@r)\])" => "$1[#1]$2"; // aufstossen, Auftritt
		"(\[auf\])\[#.\](\[(?:b|b@r6|h|l)\])" => "$1[#0]$2"; // Aufbruch, auflauernd
		"(\[auf\])\[#.\](\[o\]\[(?:pf)\])" => "$1[#2-]$2"; // aufopfern
		"(\[m\])\[#.\](\[(?:s)\])" => "$1[#1]$2"; // umsonst
		"(\[da\])\[#.\](\[(?:h)\])" => "$1[#4]$2"; // dahin
		"(\[[bg]\])\[#.\](\[(?:sch|sch@l3|z|zw)\])" => "$1[#3]$2"; // dahin
		"(\[[bg]\])\[#.\](\[(?:sch@r)\])" => "$1[#1-]$2"; // beschrieben
		"(\[(?:vr|vor)\])\[#.\](\[(?:sch@l3|sch@r|z|zw)\])" => "$1[#1-]$2"; // dahin
		"(\[nd\])(\[et\])" => "$1[#4]$2"; // findet
		"(\[sch(?:@r|@l3)?\])\[#.\](\[(?:[iu]|au)\]\[(?:ck|f|\^ch|rr|k|sp)\])" => "$1[#2][sch.][#5]$2"; // geschickt, Schlucker, schlicht
		"(\[sch(?:@r|@l3)?\])\[#.\](\[(?:[ia]|au)\]\[(?:ff|ff@l|tt|ss|b|pp|mm|p|t)\])" => "$1[#2][sch.][#4]$2"; // schliff, schritt, Schlappen, schlimmer
		"(\[sch(?:@r|@l3)?\])\[#.\](\[[uo]\]\[(?:ff|ff@l|tt|pp|ck)\])" => "$1[#2][sch.][#4]$2"; // not for: Vorschuss, Vorschub etc.
		"(\[sch@r\])(\[[e]\]\[(?:ck)\])" => "$1[#3][sch.1]$2"; // schrecklich
		"\[rück\]\[#.\]\[k\]" => "[rück5][#0][k]"; // Rückkehr
		"(\[b\])(?:\[#.\])?(\[(?:ar|AR\^)\])" => "$1[#1]$2"; // Vorbereitung, Bericht
		"(\[[Vv][Rr](?:10)?\])\[#.\](\[[ou]\])\[n\]" => "$1[#1]$2[^n]"; // Baron, Kamerun, Ironie
		"(\[(?:vr|VR10|vr10)\])\[#.\](\[[ou]\])\[s\]" => "$1[#2]$2[-s]"; // Eros, Lazarus
		"(\[rr\])\[#.\]" => "$1[#0]"; // eliminate distance after rr in general
		"(\[k\])\[#.\](\[[ia]\])?(\[nd\])" => "$1[#6]$2$3";
		"(\[(?:t(?:@r)?|k(?:@l3)?)\])\[#.\](\[o\])?(\[pf\])" => "$1[#6]$2$3"; // Topf, Kopf, klopfte
		"(\[n\])\[#.\](\[z\])" => "$1[#1][z]"; // ganz
		"(\[(?:t@r|z|t)\])\[#.\]\[i\](\[(?:tt|pp|st)\])" => "$1[#6][I]$2"; // Fusstritten, zitterte, tippen
		"(\[b\])\[#.\]\[a\](\[nk@r\])" => "$1[#1-][A]$2"; // Bankrottiers - correction of probably wrong shifter values ...
		"(\[(?:l|m|n|b)\])\[#.\]\[i\](\[(?:tt(?:@l3)?|pp)\])" => "$1[#6][I]$2"; // erlitten, Lippen (spacing), Ermittler
		"(\[b@l\])(\[#.\])?(\[a\]\[tt\])" => "[B@L][#7]$3"; // Blatt 		
		"(\[t\])\[#.\]\[i\](\[t\])" => "$1[#6][I]$2"; // Appetit
		"(\[(?:z|t)\])\[#.\](\[&i\])" => "$1[#4][&I]"; // Grazie, Patientinnen
		"(\[auf\])\[#.\](\[ant\])" => "[AUF][#5-]$2"; // Aufenthalt
		"\[&e\]\[#.\](\[ar\])" => "[&E][#0]$1"; // Seeräuber
		"(\[(?:ck|d|ch|k|t|tt)\])\[#.\](\[&o\])" => "$1[#5][&O]"; // Marokko, Eldorado, Echo, Plato
		"(\[(?:s|t@r|n|b@r6)\])\[#.\](\[&i\])" => "$1[#4][&I]"; // Asien, Patriarchen
		"(\[&th\])(\[a\]\[l\])" => "$1[#4]$2"; // allenthalben
		"(\[nd\])(\[&t(?:&e)?\])" => "[ND1][#4]$2"; // entwandt, verwandten - use special form of nd with baseline point shifted slightly to the right
		"(\[nd\])(\[#.\])(\[i\]\[d\])" => "[ND2][#5]$3"; // Candide	- another variant nd, less shifted to the right, but additionally with corrected bow
		"(\[ng\])(\[&t(?:&e)?\])" => "$1[#4]$2"; // besprengt
		"(\[s\])\[#.\](\[[a]\]\[(?:nd|ND[12])])" => "[s][#4]$2"; // gesandt, gesotten
		"(\[s\])\[#.\](\[[ao]\]\[(?:tt)])" => "[s][#7]$2"; // gesotten, gesattelt
		"(\[d\])(\[&t\])" => "$1[#2]$2"; // Stadt
		"(\[b\])\[#.\](\[i\]\[nd\])" => "$1[#5]$2"; // Verbindlichkeiten
		"(\[pf\])\[#.\](\[i\]\[ff\])" => "$1[#7]$2"; // Pfifferling
		"(\[&tvr\])(\[h\])" => "$1[#2]$2"; // fürchterlichem
		"(\[da@r\])\[#.\](\[aus\])" => "$1[#3-]$2"; // daraus
		"(\[pf\])(\[&tes\])" => "$1[#4]$2"; // ausgestopftes
		"(\[s\])\[#.\](\[i\]\[\^z\])" => "$1[#7]$2"; // besitzt
		"(\[&tm\])(\[vr\])" => "$1[#3]$2"; // Reichtümer
		"(\[&tm\])(\[h\])" => "$1[#3]$2"; // altertümlich
		"(\[nk@l3\])(\[em\])" => "$1[#0][-EM2]"; // dunklem
		"(\[nk@l3\])(\[en\])" => "$1[#0][-EN2]"; // dunklen
		"(\[&tvr\])(\[(?:nd|b)\])" => "$1[#3]$2"; // marternder, kunterbunteste
		"(\[\^ch@l3\])(\[vr\])" => "$1[#6]$2"; // heuchlerisch
		"\[&u\]\[#.\](\[ar\])" => "[&U][#1]$1"; // Unreifheit
		"(\[[lb]\])(\[#.\])(\[i\])?\[q\]" => "$1[#5]$3[Q]"; // Reliquie
		//"(\[tt\])(\[haft\])" => "$1[#4]$2"; // unstatthaft => not necessary: haft => f in substituter
		"(\[&t\])\[#n\](\[&o\])" => "$1[#2-]$2"; // Konto
		"\[ant\]\[#.\]\[ar\]" => "[ANT][#7-][ar]"; // entrüstet, entronnen
		"(\[&th\])(\[vr\])" => "$1[#4]$2"; // öffentlicher
		"\[&u\]\[#.\](\[ar\]|\[AR\^\])" => "[&U][#1]$1"; // Unrat
		"(\[n=@r6\])\[#.\](\[AR\^?\])" => "$1[#2]$2"; // Unterricht
		"(\[[lbt]\])\[#.\]\[a\](\[nd\])" => "$1[#5][A]$2"; // Landschaft
		"\[s(=?)\]\[#.\](\[[oua]\])(\[(?:nd|ff|tt|&a|d)\])" => "[s$1][#6]$2$3"; // besonders, ersoffen, gesund
		"(\[n\])\[#.\](\[(?:ar|AR\^?)\])" => "[N][#1-]$2"; // hinreichen
		"\[aus\]\[#.\](\[(?:ar|AR\^)\])" => "[AUS][#2]$1"; // ausrasierte
		"(\[&ts\])(\[l\])" => "$1[#4]$2"; // rücksichtslos
		"(\[fort\])\[#.\](\[f\])" => "$1[#5]$2"; // fortfahren 		
		"(\[fort\])\[#7\]" => "$1[#2-]"; // Fortschritt
		"\[auf\](\[ei\]\[n\])" => "[auf-]$1"; // aufeinander - beautifying
		"(\[k\])(\[&t@r\])" => "$1[#4]$2"; // elektrischen
		"(\[@l\])(\[vr\])" => "$1[#4]$2"; // Drechslermeister
		"\[d\](\[#.\])(\[i\]\[ck\])" => "[d][#3][D.]$1$2";  // dick
		"\[n\]\[#.\](\[k@r\])" => "[N][#0]$1"; // ankreiden
		"\[\^ch\]\[#.\]\[f\]" => "[^CH][#7][f]"; // gleichfalls
		"\[s\]\[#.\](\[i\]\[(?:t|tt)\])" => "[s][#6]$1"; // versieht
		"\[w\]\[#.\](\[[au]\]\[sch\])" => "[W][#1]$1"; // wusch
		"(\[[lbp]\])\[#.\]\[a\](\[pp\])" => "$1[#6][A]$2"; // Waschlappen
		"(\[[lbp]\])\[#.\]\[o\](\[pp\])" => "$1[#6][O]$2"; // galoppieren
		"(\[[lbp]\])\[#.\]\[u\](\[(?:pp|tt)\])" => "$1[#6][U]$2"; // Butterbrötchen
		"\[ant\]\[#.\](\[l\])" => "[ANT][#0]$1"; // Antlitz
		"(\[&tion\])(\[s\])" => "$1[#3]$2"; // Konfektionsgeschäftsausläufer
		"\[ch\]\[#.\]\[selb\]" => "[ch][#7][SELB]"; // welchselbiges
		"\[nn\]\[#.\]\[AR\^\]" => "[NN][#2-][AR^]"; // Spinnrocken
		"\[n\]\[#.\](\[vr\+ar\])" => "[N][#6]$1"; // Schreckenerregende (obsolete [#n])
		"(\[nicht\])(\[s\])" => "$1[#2]$2"; // nichts
		"\[ant\]\[#.\](\[AR\^\])" => "[ANT][#6-]$1"; // entrissen
		"(\[mpf\])(\[@r\])" => "$1[#8]$2"; // Schimpfrede
		"\[ch\]\[#.]\[&i\]" => "[ch][#4][&i]"; // Petrarchio
		"(\[&eitg\])(\[vr\])" => "$1[#4]$2"; // gegenseitiger
		"\[d\]\[#.\](\[sch\])" => "[d][#3]$1"; // Goldschatz
		"\[h\]\[#.\](\[sch\])" => "[h][#1]$1"; // Drehscheibe
		"(\[sch\])\[#.\]\[a\](\[z\])" => "$1[#1][a]$2"; // Goldschatz
		"(\[j\])\[#.\]\[u\](\[ng\])" => "$1[#4][u]$2"; // Jungfrau
		"\[da@r\]\[#.\](\[in\])" => "[da@r][#2]$1"; // darin
		"(\[(?:VR10|vr)\])\[em\]" => "$1[#7-][em]"; // ihrem
		"(\[(?:vr|VR10)\])\[en\]" => "$1[#4-][en]"; // Ohren
		"\[w\]\[\/i\]" => "[w][#2-][/i]"; // wie
		"(\[[lb]\])\[#.\](\[(?:au|i)\]\[t\])" => "$1[#6]$2"; // lautet, baut, anzubieten
		"(\[b\])\[#.\]\[o\](\[vr\])" => "$1[#3][O]$2"; // Borges
		"(\[(?:vr|VR10)\])(\[-e\])" => "$1[#5-]$2"; // andere, bedaure
		"(\[w\])\[#.\]\[a\](\[l\])" => "$1[#2][A]$2"; // Walde
		"\[ant\]\[#.\]\[zw\]" => "[ANT][#0][zw]"; // entzwei
		"\[nd\]\[#.]\[h\]" => "[nd][#4][h]"; // kindlich
		"\[&u\]\[#.\]\[sch\]" => "[&u][#0][sch]"; // unschuldig
		"(\[ck\])(\[-e\])" => "$1[#2]$2"; // Mücke
		"(\[s\])(\[en\])" => "$1[#1]$2"; // bösen
		"\[b\]\[#.\]\[sch\]" => "[b][#2][sch]"; // beschossen
		"\[m\]\[#.\]\[vr\]" => "[m][#3][vr]"; // miterlebt
		"\[g\]\[#.\]\[st@r\]" => "[g][#3][st@r]"; // Gesträuch
		"(\[hab\])(\[-e\])" => "$1[#3-]$2"; // habe
		"(\[[flm]\])(\[-e\])" => "$1[#1-]$2"; // Höhle, Rufe, Baume
		"(\[0d-\])\[#.\]\[i\](\[n\])" => "$1[#2-][I]$2"; // ihn
		"(\[d\])\[#.\]\[i\](\[s\])" => "$1[#4][I]$2"; // diszipliniert
		"(\[st\])\[#.\]\[d\]" => "$1[#4][d]"; // bestdiszipliniert
		"(\[l\])\[#.\]\[i\](\[g\])" => "$1[#4][I]$2"; // liegt
		"\[g\]\[#.\](\[(?:ar|AR\^)\])" => "[g][#3]$1"; // gerade, Gericht
		"\[g\]\[#.\](\[w\])" => "[g][#5]$1"; // gewählt
		"(\[ck\])\[#3\]\[i\](\[g\])" => "$1[#5][I]$2"; // Hartnäckigkeit
		"\[vor\]\[#.\]\[g\]" => "[vor][#1-][g]"; // vorgesetzt
		"(\[nd\])\[#.\]\[s\]" => "$1[#2][s]"; // abends
		"(\[pf\])(\[&t&e\])" => "$1[#3]$2"; // klopfte
		"(\[vr\])\[#.\](\[ch\])" => "$1[#1]$2"; // Dachzimmerchens
		"(\[p\])\[#5]\[a\](\[vr\])" => "$1[#2][a]$2"; // Parfüm
		"(\[b(?:@l)?\])\[#.\]\[o\](\[nd\])" => "$1[#5][o]$2"; // blondgelockte
		"\[g\]\[#.\]\[l\]" => "[g][#5][l]"; // idem
		"\[&e\]\[#.\]\[k\]" => "[&e][#3][k]"; // Schlaukopf
		"(\[s\])\[#.\](\[k@r\])" => "$1[#1]$2"; // diskret
		"(\[w\])\[#.\]\[o\](\[vr\])" => "$1[#1-][o]$2"; // worauf (2nd time ...)
		"(\[vr\])\[#.\](\[auf\])" => "$1[#0]$2"; // worauf
		"(\[h\])\[#.\]\[i\](\[pp\])" => "$1[#6][i]$2"; // Hippenstiel
		"(\[&t&e\])(\[i\]\[nn\])" => "$1[#2]$2"; // Patientinnen
		"(\[&e\])(\[en\])" => "$1[#2-]$2"; // denen
		"(\[f\])\[#.\](\[z\])" => "$1[#0]$2"; // seufzte
		"(\[z\])(\[&t&e\])" => "$1[#3]$2"; // seufzte
		"(\[t\])\[#.\]\[i\](\[f\])" => "$1[#6][I]$2"; // tief
		"(\[b\])\[#.\](\[g@r\])" => "$1[#0]$2"; // begrüsste
		"(\[s=\])(\[\/i\])" => "$1[#1-]$2"; // sie
		"(\[l\])\[#.\]\[u\](\[d\])" => "$1[#6][U]$2"; // lud
		"(\[nk\])\[#.\](\[s\])" => "$1[#1-]$2"; // links
		"(\[rück\])\[#.\](\[s\])" => "$1[#1-]$2"; // rücksichtslos
		"(\[&t&e\])\[o\](\[ff\])" => "$1[#4][O]$2"; // Pantoffel
		"(\[m\])\[#.\]\[u\](\[ng\])" => "$1[#2][U]$2"; // Zähmung
		"(\[l\])\[#.\]\[au\](\[f\])" => "$1[#6][AU]$2"; // Laufe
		"(\[m\])\[#.\](\[p\])" => "$1[#4]$2"; // sympathisch
		"(\[ar\])\[#.\]\[u\](\[f\])" => "$1[#6][U]$2"; // Rufe
		"(\[ar\])\[#.\]\[o\](\[s\])" => "$1[#2][O]$2"; // rosige
		"(\[b\])\[#.\]\[au\](\[m\])" => "$1[#4][AU]$2"; // Baume
		"(\[m\])\[#.\](\[g\])" => "$1[#2]$2"; // umgebaut
		"(\[l\])\[#.\](\[z\])" => "$1[#0]$2"; // Holz
		"(\[z\])\[#.\](\[p\])" => "$1[#7]$2"; // Holzpuppen
		"(\[&e\])\[#.\](\[h\])" => "$1[#2]$2"; // freilich
		"(\[nk\])(\[&t\])" => "$1[#2]$2"; // geschenkt
		"(\[d\])\[#.\]\[i\](\[n\])" => "$1[#5][I]$2"; // bedienen
		"(\[b\])\[#.\](\[d\])" => "$1[#6]$2"; // idem
		"(\[g\])\[#.\](\[d\])" => "$1[#6]$2"; // gedient
		"(\[k\])\[#.\]\[au\](\[f\])" => "$1[#6][AU]$2"; // kauften
		"(\[\^ch\])(\[&t&e\])" => "$1[#3]$2"; // gebrauchte
		"(\[d@r\])\[#.\]\[au\](\[ss\])" => "$1[#1][DR.][#4][AU]$2"; // draussen
		"(\[d@r\])\[#.\]\[i\](\[tt\])" => "$1[#1][DR.][#7][I]$2"; // dritte
		"(\[in-\])(\[em\])" => "$1[#5-]$2"; // indem
		"(\[tt\])\[#.\]\[i\](\[n\])" => "$1[#5][I]$2"; // Gattin
		"(\[s=?\])\[#.\]\[u\](\[pp\])" => "$1[#6][U]$2"; // Suppe
		"(\[&u\])\[#.\](\[ant\])" => "$1[#2]$2"; // unentwegt
		"(\[ant\])\[#.\](\[w\])" => "$1[#0]$2"; // idem
		"(\[vr\])\[#.\](\[v\])" => "$1[#1]$2"; // Reserve
		"(\[h\])\[#.\]\[o\](\[b\])" => "$1[#6][O]$2"; // erhob
		"(\[vr\])\[#.\](\[h\])" => "$1[#2]$2"; // idem
		"(\[b\])\[#.\](\[k\])" => "$1[#4]$2"; // bekam
		"(\[&e\])(\[em\])" => "$1[#6-]$2"; // neuem
		"(\[n\])(\[em\])" => "$1[#6-]$2"; // jenem
		"(\[pf\])\[#.\]\[u\](\[ng\])" => "$1[#0][U]$2"; // Schöpfungsgeschichte
		"(\[vr\])\[#.\](\[sp\])" => "$1[#1]$2"; // Ersparnisse
		"(\[b\])\[#.\](\[t@r\])" => "$1[#5]$2"; // betrübt
		"(\[n\])\[#.\]\[u\](\[z\])" => "$1[#0][U]$2"; // benutzten
		"(\[m\])(\[em\])" => "$1[#6-]$2"; // genügsamem
		"(\[&e\])\[#.\](\[s\])" => "$1[#0]$2"; // grausamen
		"(\[AR\^\])\[#.\]\[i\](\[s\])" => "$1[#0][I]$2"; // riesigen
		"(\[sch\])\[#.\]\[a\](\[vr\])" => "$1[#2][A]$2"; // scharfen
		"(\[l\])\[#.\](\[sch@r\])" => "$1[#2-]$2"; // Spiegelschrank
		"(\[ck\])(\[&t&e\])" => "$1[#3]$2"; // steckte
		"(\[0n-\])\[#.\]\[a\](\[(?:nd|ff)\])" => "$1[#5][A]$2"; // anders, Affe
		"(\[vr\])\[#.\](\[t@r\])" => "$1[#3]$2"; // erträgliches
		"(\[m\])\[#.\]\[o\](\[k@r\])" => "$1[#1][O]$2"; // demokratischer
		"(\[&ts\])(\[v\])" => "$1[#2]$2"; // ehrfurchtsvoll
		"(\[ch\])(\[&t&e\])" => "$1[#2]$2"; // Nächten
		"(\[ch\])(\[&t\])" => "$1[#2]$2"; // Macht
		"(\[bei\])\[#.\](\[f\])" => "$1[#2]$2"; // Beifallsbezeugung
		"(\[f\])\[#.\]\[a\](\[l@l\])" => "$1[#4][A]$2"; // idem
		"(\[vr\])\[#.\](\[k@r\])" => "$1[#0]$2"; // Lorbeerkranz
		"(\[0n-\])\[#.\](\[vr\])" => "$1[#5]$2"; // Erfahrung
		"(\[h\])\[#.\]\[i\](\[ss\])" => "$1[#5][I]$2"; // hiess
		"(\[n\])\[#.\](\[auf\])" => "$1[#1-]$2"; // hinauf
		"(\[m\])\[#.\](\[s\])" => "$1[#3]$2"; // umsegelte
		"(\[0n-\])\[#.\]\[o\](\[[fb]\])" => "$1[#5][O]$2"; // oft, Oberrock
		"(\[h\])\[#.\]\[au\](\[p\])" => "$1[#6][AU]$2"; // Haupt
		"(\[\^ch\])\[#.\](\[t\])" => "$1[#8]$2"; // Bauchtanz
		"(\[ant\])\[#.\](\[g\])" => "$1[#1-]$2"; // entgegnete
		"(\[w\])\[#.\]\[i\](\[d@r\])" => "$1[#1][I]$2"; // naturwidrigen
		"(\[d@r\])\[#.\]\[i\](\[g\])" => "$1[#5][I]$2"; // idem
		//"(\[d@r\])(\[#.\]\[[Ii]\]\[g\])" => "$1[#2][DR.]$2"; // idem
		"(\[j\])\[#.\]\[a\](\[ck\])" => "[J^][#7][A]$2"; // Jacke
		"(\[nk\])\[#.\]\[u\](\[ng\])" => "$1[#3][U]$2"; // Schwankungen
		"(\[\^z\])\[#.\]\[i\](\[c\])" => "$1[#6][I]$2"; // Pizzicata
		"(\[t\])\[#.\]\[a\](\[&a\])" => "$1[#6][A]$2"; // idem
		"(\[s=\])\[#.\]\[o\](\[k@r\])" => "$1[#1][O]$2"; // Sokrates
		"(\[&eit&e\])(\[em\])" => "$1[#5-]$2"; // seitdem
		"(\[l\])(\[&tst\])" => "$1[#5]$2"; // hältst
		"(\[h\])\[#.\]\[a\](\[nd@l3\])" => "$1[#6][A]$2"; // Abhandlungen
		"(\[nd@l3\])\[#.\]\[u\](\[ng\])" => "$1[#4][U]$2"; // idem
		"(\[&i\])\[#.\]\[a\](\[g@r\])" => "$1[#2-][A]$2"; // Oiagros
		"(\[&o\])\[#.\](\[&i\])" => "$1[#3]$2"; // idem
		"(\[p\])\[#.\]\[a\](\[t@r\])" => "$1[#3][A]$2"; // Patroklos
		"(\[&tg\])(\[(?:st|vr)\])" => "$1[#5]$2"; // Tüchtigsten, züchtiger
		"(\[&u\])(\[all\])" => "$1[#2]$2"; // überallhin
		"(\[-aus\])(\[s\])" => "$1[#3]$2"; // Voraussetzungen
		"(\[b@r6\])\[#.\]\[a\](\[nd\])" => "$1[#7][A]$2"; // Brand
		"\[j\]\[#.\]\[a\](\[p\])" => "[J^][#5][A]$1"; // Japetos
		"(\[&ts\])(\[h\])" => "$1[#4]$2"; // rechtshin
		"(\[da\])\[#.\](\[durch\])" => "$1[#2]$2"; // dadurch
		"(\[sobre\])(\[#.\])?(\[en\])" => "$1[#9-][#5-]$3"; // soprattutto
		"(\[h\])\[#.\](\[[ua]\]\[nd\])" => "$1[#5]$2"; // hundert, misshandelt
		"(\[0n-\])\[#.\](\[a\]\[pf\])" => "$1[#6]$2"; // Apfel
		"(\[ch\])\[#.\](\[s\])" => "$1[#5]$2"; // wachsen
		"(\[l\])\[#.\](\[a\]\[d\])" => "$1[#6]$2"; // Ladenhüter
		"(\[b\])\[#.\](\[a\]\[ch\])" => "$1[#5]$2"; // Offenbach
		"(\[p\])\[#.\](\[a\]\[k\])" => "$1[#2]$2"; // Pakete
		"(\[p\])\[#.\](\[u\]\[l\])" => "$1[#3]$2"; // Pulte
		"(\[k(?:@l3)?\])\[#.\](\[i\]\[g\])" => "$1[#6]$2"; // ekligen
		"(\[\^z\])(\[-e\])" => "$1[#2]$2"; // Kreuze
		"(\[s\])\[#.\](\[a\]\[f\])" => "$1[#6]$2"; // boshaft
		"(\[0n-\])\[#.\](\[a\]\[d\])" => "$1[#4]$2"; // Adelsgeschlecht
		"(\[&t&e\])(\[i\]\[pp\])" => "$1[#3]$2"; // Xanthippe
		"\[ar\](\[e\]\[tt\])" => "[ar^]$1"; // rettungslos
		"(\[b(?:@l)?\])\[#.\](\[i\])\[nd\]" => "$1[#5]$2[ND1]"; // blind
		"(\[b@r6\])\[#.\](\[i\]\[f\])" => "$1[#6]$2"; // Brief
		"(\[l\])\[#.\](\[i\]\[t\])" => "$1[#7]$2"; // Litanei
		"(\[&t&e\])(\[i\]\[t\])" => "$1[#3]$2"; // Partitur
		"(\[f@r6\])\[#.\](\[i\]\[d\])" => "$1[#7]$2"; // Siegfried
		"(\[ur\])\[#.\](\[z\])" => "$1[#0]$2"; // Urzeit
		"(\[ch\])(\[en\])" => "$1[#3]$2"; // machen
		"(\[ur\])\[#.\](\[sp@r6\])" => "$1[#0]$2"; // ursprünglich
		"(\[s\])\[#.\](\[en\])" => "$1[#2]$2"; // Wesen
		"(\[l\])\[#.\](\[f\])" => "$1[#6]$2"; // Hälften
		"(\[s\])\[#3\](\[u\]\[ch\])" => "$1[#7]$2"; Sucht
		"(\[t\])\[#.\](\[i\]\[VR10\])" => "$1[#5]$2"; // Tierbildern
		"(\[b(?:@r6)?\])\[#.\](\[i\]\[l)" => "$1[#5]$2"; // Tierbildern
		"(\[l\])\[#4\](\[d\])" => "$1[#6]$2"; // Tierbildern
		"(\[&t&e\])(\[a\]\[t\])" => "$1[#3]$2"; // Resultate
		"(\[s\])\[#.\](\[u\]\[l\])" => "$1[#7]$2"; // Resultate
		"(\[l\])\[#.\](\[a\]\[ss\])" => "$1[#5]$2"; // lassen
		"(\[ant\])\[#.\](\[t@r\])" => "$1[#1]$2"; // entthrontesten
		"(\[z\])(\[&tvr\])" => "$1[#4]$2"; // abgehetzter
		"(\[t\])\[#.\](\[m\])" => "$1[#5]$2"; // Rhythmus
		"(\[n\])\[#.\](\[durch\])" => "$1[#2]$2"; // zwischendurch
		"(\[vr\])\[#.\](\[i\]\[n\])" => "$1[#1]$2"; // Schaffnerin
		"(\[l\])\[#.\](\[u\]\[st\])" => "$1[#6]$2"; // Lust
		"(\[aus\])\[#.\](\[sp@r6\])" => "$1[#2]$2"; // Aussprache
		"(\[d\])\[#.\](\[a\]\[m\])" => "$1[#5]$2"; // Adam
		"(\[n\])\[#.\](\[sch@r\])" => "$1[#2-]$2"; // Heidenschreck
		"(\[nn\])(\[-e\])" => "$1[#3-]$2"; // Sonne
		"(\[s\])\[#.\](\[m\])" => "$1[#5]$2"; // -ismen
		"(\[n\])\[#.\](\[sch\])" => "$1[#0]$2"; // Sonnenschirm
		"(\[[Zz]\])\[#.\](\[b\])" => "$1[#5]$2"; // Tanzboden
		"(\[ch\])\[#.\](\[i\]\[n\])" => "$1[#4]$2"; // Köchin
		"\[d\](\[&ts\])" => "[D1]$1"; // Schmidts (cheaton60degreeangle)
		"(\[ch\])\[#.\](\[st\])" => "$1[#5]$2"; // nächste
		"(\[z\])\[#.\](\[i\]\[h\])" => "$1[#5]$2"; // ziehen
		"(\[schw\])\[#.\](\[i\]\[rr\])" => "$1[#5]$2"; // schwirren
		"(\[z\])\[#.\](\[i\]\[VR10\])" => "$1[#5]$2"; // Spaziergänge
		"(\[ch\])\[#.\](\[d\])" => "$1[#6]$2"; // nachdenklich
		"(\[nk\])\[#.\](\[h\])" => "$1[#3]$2"; // idem
		"(\[ant\])\[#.\](\[[pf]\])" => "$1[#2]$2"; // entpuppte, entfernen
		"(\[s\])\[#.\](\[a\]\[m\])" => "$1[#6]$2"; // einsame
		"(\[g@r\])\[#3\](\[i\]\[ff\])" => "$1[#5]$2"; // griff
		"(\[ch\])\[#.\](\[o\]\[l\])" => "$1[#5]$2"; // melancholisch
		"(\[sch\])\[#6\](\[t\])" => "$1[#2][SCH.][#4]$2"; // Waschtisch
		"(\[\^sch\])\[#.\](\[sch\])" => "$1[#1-]$2"; // Waschtischschublade
		"(\[[hg]\])\[#.\](\[&i\])" => "$1[#2]$2"; // hie, Energie
		"(\[h\])\[#.\](\[o\]\[ff\])" => "$1[#5]$2"; // hoffte
		"(\[ant\])\[#.\](\[sch@l3\])" => "$1[#0]$2"; // entschliesst
		"\[nd\]\[#.\](\[k\])" => "[ND1][#5]$1"; // Handköfferchen
		"(\[t\])\[#.\](\[b\])" => "$1[#6]$2"; // vermietbar
		"(\[z\])\[#.\](\[i\]\[mm\])" => "$1[#5]$2"; // Dachzimmerchen
		"(\[b\])\[#.\](\[k@r\])" => "$1[#1]$2"; // bekräftigte
		"(\[n\])\[#.\](\[sp@r6\])" => "$1[#2]$2"; // Ansprüche
		"(\[w@r6\])\[#.\](\[sp@r6\])" => "$1[#2]$2"; // Widerspruch
		"(\[z\])\[#.\](\[i\]\[m\])" => "$1[#5]$2"; // ziemlich
		"(\[durch\])\[#.\](\[g\])" => "$1[#0]$2"; // durchgesessenen
		"(\[ch\])\[#.\](\[f\])" => "$1[#6]$2"; // Dachfenster
		"(\[d\])\[#.\](\[a\]\[ch\])" => "$1[#5]$2"; // idem
		"(\[z\])\[#.\](\[i\]\[t\])" => "$1[#7]$2"; // zieht
		"(\[m\])\[#.\](\[i\])\[nd\]" => "$1[#4]$2[nd1]"; // mindestens (cheat on angle)
		"(\[vr\+ar\])\[#.\](\[o\]\[vr\+ar\])" => "$1[#0]$2"; // Meerrohrröhrchen (just wanted to make that nice ... :)
		"(\[auf\])\[#.\](\[f\])" => "$1[#0]$2"; // aufführen
		"(\[b\])\[#.\](\[i\]\[s\])" => "$1[#4]$2"; // bis
		"(\[(?:[gk]|tt)\])\[#.\](\[h\])" => "$1[#4]$2"; // möglich, merklich, stattlich
		"(\[ck\])(\[&t\])" => "$1[#2]$2"; // gezückt
		"(\[h\])\[#.\](\[i\]\[g\])" => "$1[#4]$2"; // fähig
		"(\[l\])(\[&tes\])" => "$1[#2]$2"; // altes
		"(\[vor\])\[#.\](\[h\])" => "$1[#0]$2"; // vorhält
		"(\[s=\])\[#.\](\[k@l3\])" => "$1[#3]$2"; // Sklavenhändler
		"(\[vr\])\[#.\](\[a\]\[g@r\])" => "$1[#1-]$2"; // Paragrafen
		"(\[l\])\[#.\](\[i\])\[d\]" => "$1[#5]$2[D1]"; // Lied (cheat on angle)
		"(\[g\])\[#.\](\[i\]\[nn\])" => "$1[#5]$2"; // beginnen
		"(\[t\])\[#.\](\[a\]\[b(?:@l)?\])" => "$1[#6]$2"; // Tablett
		"(\[\^ch\])(\[&tb\])" => "$1[#3]$2"; // sichtbar
		"(\[&tb\])(\[a\]\[vr\])" => "$1[#4]$2"; // idem
		"(\[t\])\[#.\](\[b@r6\])" => "$1[#6]$2"; // Privatbriefe
		"(\[k\])\[#.\](\[au\]\[m\])" => "$1[#5]$2"; // kaum
		"(\[sch\])\[#.\](\[i\]\[mpf\])" => "$1[#5]$2"; // schimpfen
		"(\[w@r6\])\[#.\](\[k\])" => "$1[#2]$2"; // wiederkehrt
		"(\[k@l3\])\[#.\](\[a\]\[t\])" => "$1[#7]$2"; // herausklatschen
		"(\[t\])\[#.\](\[a\]\[l\])" => "$1[#6]$2"; // italienische
		"(\[0n-\])\[#.\](\[o\]\[pf\])" => "$1[#5]$2"; // Opfer
		"(\[f@r6\])\[#.\](\[i\]\[ss\])" => "$1[#5]$2"; // frisst
		"(\[nn\])\[#.\](\[h\])" => "$1[#3]$2"; // männlichen
		"(\[l\])\[#.\](\[i\]\[b@r6\])" => "$1[#5]$2"; // liebreich
		"(\[\^sch\])\[#.\](\[g\])" => "$1[#1]$2"; // frischgewaschene
		"(\[b\])\[#.\](\[sp@r6\])" => "$1[#3]$2"; // besprengt
		"(\[&u\])\[#.\](\[h\])" => "$1[#2]$2"; // unhöflich
		"(\[f\])\[#.\](\[h\])" => "$1[#3]$2"; // idem
		"(\[&t&e\])(\[a\]\[l\])" => "$1[#2]$2"; // Portal
		"(\[p\])\[#.\](\[o\]\[vr\])" => "$1[#0]$2"; // idem
		"(\[st\])\[#.\](\[o\]\[l\])" => "$1[#4]$2"; // stolz
		"(\[schm\])\[#.\](\[a\]\[ch\])" => "$1[#5]$2"; // schmachten
		"(\[p@l\])\[#.\](\[a\]\[tt\])" => "$1[#6]$2"; // Platte
		"(\[&e\])\[#.\](\[p@l\])" => "$1[#2]$2"; // Radauplatte
		"(\[d\])\[#.\](\[au\]\[&e\])" => "$1[#6]$2"; // idem
		"(\[0d-\])\[#.\](\[i\])\[nd\]" => "$1[#1]$2[nd1]"; // Inder (cheat on angle)
		"(\[d\])\[#.\](\[i\]\[st\])" => "$1[#6]$2"; // Distanz
		"(\[s\])\[#.\](\[o\]\[f\])" => "$1[#6]$2"; // philosophierte
		"(\[0n-\])\[#.\](\[a\]\[t\])" => "$1[#5]$2"; // Atem
		"(\[z\])\[#.\](\[i\]\[g\])" => "$1[#4]$2"; // geschwätzige
		"(\[zw\])\[#.\](\[i\]\[g\])" => "$1[#5]$2"; // Zwiegespräch
		"(\[d\])\[#.\](\[i\]\[\^ch\])" => "$1[#5]$2"; // dicht
		"(\[l\])\[#.\](\[o\]\[g\])" => "$1[#2]$2"; // zoologischen
		"(\[0n-\])\[#.\](\[a\]\[pp\])" => "$1[#5]$2"; // Appetit
		"(\[l\])\[#.\](\[a\]\[ch\])" => "$1[#5]$2"; // lachen
		"(\[k@r\])\[#.\](\[i\]\[b\])" => "$1[#6]$2"; // kribbelten
		"(\[sch\])(\[&t&e\])" => "$1[#3]$2"; // huschten 
		"(\[h\])\[#.\](\[u\]\[sch\])" => "$1[#2]$2"; // idem
		"(\[&tg\])(\[a\]\[l@l\])" => "$1[#5]$2"; // Nachtigallen
		"(\[ch\])(\[&tg\])" => "$1[#1]$2"; // idem
		"(\[all\])(\[t\])" => "$1[#4]$2"; // Alltagsungemach
		"(\[ant\])\[#.\](\[schw\])" => "$1[#3-]$2"; // entschwindet
		"\[nd\](\[#.\]\[et\])" => "[nd1]$1"; // idem (cheat on angle)
		"(\[g\])\[#.\](\[i\]\[ss\])" => "$1[#5]$2"; // vergisst
		"(\[l\])\[#.\](\[a\]\[st\])" => "$1[#6]$2"; // Palast
		"(\[ant\])\[#.\](\[z\])" => "$1[#3-]$2"; // Entzückens
		"(\[zw\])\[#.\](\[i\]\[t\])" => "$1[#7]$2"; // zwitscherte
		"(\[0n-\])\[#.\](\[a\]\[d@l3\])" => "$1[#6]$2"; // Adler
		"(\[p\])\[#.\](\[u\]\[z\])" => "$1[#0]$2"; // frischgeputzten
		"(\[&t&e\])(\[i\]\[ss\])" => "$1[#2]$2"; // fortissimo
		"(\[s\])\[#.\](\[o\]\[l\])" => "$1[#6]$2"; // Trompetensolo
		"(\[t\])\[#.\](\[l\])" => "$1[#6]$2"; //  ratlos
		"(\[t\])\[#.\](\[au\]\[m\])" => "$1[#5]$2"; // taumelt
		"(\[l\])\[#.\](\[nd\])" => "$1[#5]$2"; // funkelndes
		"(\[z\])\[#.\](\[m\])" => "$1[#5]$2"; // Schutzmann
		"(\[s\])\[#.\](\[i\])\[d\]" => "$1[#5]$2[d1]"; // residierte (cheat on angle)
		"(\[0n-\])\[#.\](\[u\]\[f\])" => "$1[#5]$2"; // Ufer
		"(\[\^z\])(\[&t&e\])" => "$1[#4]$2"; // verschmitzte
		"(\[schm\])\[#.\](\[i\]\[\^z\])" => "$1[#5]$2"; // idem
		"(\[t\])\[#.\](\[a\]\[nn\])" => "$1[#5]$2"; // Tanne
		"(\[ch\])\[#.\](\[b@r6\])" => "$1[#6]$2"; // Schachbrett
		"(\[m\])\[#.\](\[a\]\[tt\])" => "$1[#6]$2"; // matt
		"(\[\^ch\])(\[&tvr\])" => "$1[#2]$2"; // leichter
		"(\[l\])\[#.\](\[pf\])" => "$1[#6]$2"; // Nilpferd
		"(\[l\])\[#.\](\[i\])\[nd\]" => "$1[#5]$2[nd1]"; // Zylinder
		"(\[n\])\[#.\](\[g@r\])" => "$1[#0]$2"; // Angriff
		"(\[t@r\])\[#.\](\[i\]\[mm\])" => "$1[#5]$2"; // Trimmer
		"\[ar\]\[#.\](\[a\]\[ff\])" => "[ar^][#4]$1"; // raffte
		"(\[n=@r6\])\[#.\](\[b@r6\])" => "$1[#5]$2"; // unterbrach
		"(\[b@r6\])\[#.\](\[a\]\[ch\])" => "$1[#5]$2"; // idem
		"(\[k\])\[#.\](\[u\]\[nd\])" => "$1[#7]$2"; // Sekunden
		"\[j\]\[#.\](\[au\]\[\^ch\])" => "[j^][#2]$1"; // jauchzte
		"(\[s\])\[#.\]((?:\[a\])?\[l\])" => "$1[#6]$2"; // Universalwaffe, Glaslüster
		"(\[auf\])\[#..?\](\[n\])" => "[auf-][#1-]$2"; // aufnahmen
		"(\[l@l\])\[#.\](\[ur\])" => "$1[#7]$2"; // Unfallursache
		"(\[s\])\[#.\](\[q\])" => "$1[#7]$2"; // Bezugsquelle
		"(\[t@r\])\[#.\](\[o\]\[ff\])" => "$1[#7]$2"; // getroffen
		"(\[t@r\])\[#.\](\[au\]\[&e\])" => "$1[#7]$2"; // Trauung
		"(\[&e\])\[#.\](\[u\]\[ng\])" => "$1[#2]$2"; // idem
		"(\[h\])\[#.\](\[o\]\[f\])" => "$1[#6]$2"; // Bahnhof
		"(\[0n-\])\[#.\](\[o\]\[d\])" => "$1[#5]$2"; // Odenwald
		"(\[g\])\[#.\](\[i\]\[pf\])" => "$1[#6]$2"; // Gipfel
		"(\[t(?:@r)?\])\[#.\](\[a\]\[c\])" => "$1[#7]$2"; // contact tracing
		"(\[k\])(\[ü\]\[nd\])" => "$1[#3]$2"; // unheilkündend
		"(\[&tvr\])(\[vr\])" => "$1[#3]$2"; // älterer
		"(\[AR\^\])\[#.\](\[i\]\[tt\])" => "$1[#4]$2"; // recorrect this spacing rule ... ritterlich
		"(\[k\])\[#.\](\[i\])\[nd\]" => "$1[#6]$2[nd1]"; // Kinderaugen (cheat on angle)
		"(\[\^?z\])\[#.\](\[i\]\[g\])" => "$1[#6]$2"; // trotzig, geizig
		"(\[ck\])\[#.\](\[p@l\])" => "$1[#8]$2"; // Eckplatz
		"(\[st\])\[#.\](\[a\]\[tt\])" => "$1[#8]$2"; // Werkstatt
		"(\[l@l\])\[#.\](\[d\])" => "$1[#7]$2"; // Bulldogge
		"(\[schm\])\[#.\](\[a\]\[ck\])" => "$1[#6]$2"; // geschmackvolle
		"(\[k\])\[#.\](\[a\]\[nn\])" => "$1[#5]$2"; // kannte
		"(\[\^ch\])(\[&ts\])" => "$1[#2]$2"; // Ansichtssache
		"(\[k@r\])\[#.\](\[i\]\[t\])" => "$1[#7]$2"; // Kunstkritiker
		"(\[st\])\[#.\](\[k@r\])" => "$1[#0]$2"; // idem
		"(\[t\])\[#.\](\[i\]\[k\])" => "$1[#6]$2"; // idem
		"(\[m\])\[#.\](\[u\]\[tt\])" => "$1[#6]$2"; // Grossmutter
		"(\[n=\])\[#.\](\[u\]\[z\])" => "$1[#1]$2"; // nutzte
		"(\[z\])\[#.\](\[&t&e\])" => "$1[#5]$2"; // idem
		"(\[t\])\[#.\](\[i\]\[g\])" => "$1[#5]$2"; // demütige
		"(\[b@r6\])\[#.\](\[o\]\[ch\])" => "$1[#6]$2"; // abgebrochenen
		"(\[vor\])\[#.\](\[k\])" => "$1[#0]$2"; // hervorkichern
		"(\[g@l3\])\[#.\](\[a\]\[tt\])" => "$1[#8]$2"; // glatte
		"(\[b\])\[#.\](\[u\]\[st\])" => "$1[#6]$2"; // robusten
		"(\[k\])\[#.\](\[i\]\[st\])" => "$1[#7]$2"; // Kisten
		"(\[l\])\[#.\](\[i\]\[f\])" => "$1[#6]$2"; // lieferte
		"(\[d@r\])\[#.\](\[o\]\[t\])" => "$1[#7]$2"; // drohte
		"(\[t\])\[#.\](\[st\])" => "$1[#7]$2"; // Brautstand
		"(\[b@r6\])\[#.\](\[au\]\[t\])" => "$1[#7]$2"; // idem
		"(\[nd\])\[#.\](\[sch\])" => "$1[#2]$2"; // Mondschein
		"(\[vr\])\[#.\](\[vorar\])" => "$1[#0]$2"; // hervorragend
		"(\[st\])\[#.\](\[h\])" => "$1[#2]$2"; // festlich
		"(\[zw\])\[#.\](\[i\]\[sp@r6\])" => "$1[#7]$2"; // Zwiesprache
		"(\[vr\])\[#.\](\[&i\])" => "$1[#3]$2"; // Theorie (recorrection)
		"(\[d@r\])\[#.\](\[u\]\[ck\])" => "$1[#7]$2"; // Ausdruck
		"(\[st\])\[#.\](\[a\]\[l\])" => "$1[#5]$2"; // Gestalt
		"(\[sp\])\[#.\](\[o\]\[tt\])" => "$1[#6]$2"; // Spott
		"(\[f\])\[#.\](\[l\])" => "$1[#4]$2"; // hilflos
		"(\[z\])\[#.\](\[u\]\[ck\])" => "$1[#6]$2"; // zuckte
		"(\[s\])\[#.\](\[a\]\[b\])" => "$1[#7]$2"; // geistesabwesend
		"(\[t\])\[#.\](\[o\]\[(?:b|l@l)\])" => "$1[#8]$2"; // tobenden, tollem
		"(\[g@r\])\[#.\](\[u\]\[nd\])" => "$1[#6]$2"; // grundlos
		"(\[nd\])\[#.\](\[l\])" => "$1[#5]$2"; // idem
		"(\[b\])\[#.\](\[u\]\[ch\])" => "$1[#5]$2"; // Buch
		"(\[l\])\[#.\](\[i\]\[st\])" => "$1[#6]$2"; // List
		"(\[vor\])\[#.\](\[bei\])" => "$1[#2-]$2"; // vorbeisauste
		"(\[s\])\[#.\](\[au\]\[st\])" => "$1[#7]$2"; // idem
		"(\[bei\])\[#.\](\[s\])" => "$1[#1]$2"; // idem
		"(\[f\])\[#.\](\[i\])\[nd\](\[e\])" => "$1[#6]$2[nd1]$3"; // findend
		"(\[z@r\])\[#.\](\[(?:ar|AR\^)\])" => "$1[#2]$2"; // zerrissen
		"(\[b@r6\])\[#.\](\[u\]\[st\])" => "$1[#8]$2"; // Brust
		"(\[f\])\[#.\](\[au\]\[st\])" => "$1[#7]$2"; // Faust
		"\[nd\]\[#.\](\[p\])" => "[nd1][#7]$1"; // Sandpapier (cheat on angle)
		"(\[b\])\[#.\](\[f\])" => "$1[#6]$2"; // befand
		"(\[g\])\[#n\](\[&o\])" => "$1[#4]$2"; // Karthago (replace #n by real spacing)
		"(\[st\])\[#.\](\[sch@l3\])" => "$1[#2]$2"; // Faustschlag
		"(\[vor\])\[#.\](\[t@r\])" => "$1[#2]$2"; // Vortrag
		"(\[g\])\[#.\](\[k@r\])" => "$1[#2]$2"; // hervorgekrochen
		"(\[schw\])\[#.\](\[i\]\[p\])" => "$1[#8]$2"; // Schwips
		"(\[s\])\[#.\](\[f@l\])" => "$1[#7]$2"; // Schnapsflasche
		"(\[vor\])\[#.\](\[m\])" => "$1[#1]$2"; // Vormittag
		"(\[t@r\])\[#.\](\[a\]\[f\])" => "$1[#8]$2"; // traf
		"(\[z\])\[#.\](\[sch@r\])" => "$1[#0]$2"; // Vorplatzschrank
		"(\[t@r\])\[#.\](\[a\]\[ch\])" => "$1[#5]$2"; // betrachtete
		"(\[aus\])\[#.\](\[st\])" => "$1[#5]$2"; // Ausstand
		"(\[h\])\[#.\](\[st\])" => "$1[#6]$2"; // Frühstück
		"(\[\^ch\])\[#.\](\[b@l\])" => "$1[#8]$2"; // gleichbleibende
		"(\[tt\])\[#.\](\[i\]\[nn\])" => "$1[#5]$2"; // Gattinnen
		"(\[l@l\])\[#.\](\[u\]\[st\])" => "$1[#7]$2"; // Wollust
		"(\[ant\])\[#.\](\[sch\])" => "$1[#2-]$2"; // Entschuldigung
		"(\[d\])\[#.\](\[i\]\[g\])" => "$1[#5]$2"; // idem
		"(\[d\])(\[et\])" => "[d1][#1]$2"; // geduldet
		"(\[t\])\[#.\](\[g\])" => "$1[#4]$2"; // gutgelaunt
		"(\[auf\])\[#.\](\[t\])" => "[auf][#2]$2"; // auftauchen
		"(\[st\])\[#.\](\[sch\])" => "$1[#1]$2"; // selbstschöpferisch
		"(\[0n-\])\[#.\](\[u\]\[l)" => "$1[#6]$2"; // Ulm + Ulrich
		"(\[ck\])\[#.\](\[h\])" => "$1[#4]$2"; // unglücklicher
		"(\[&tg\])(\[u\]\[ng\])" => "$1[#3]$2"; // Beschäftigung
		"(\[sch\])\[#.\](\[i\]\[d\])" => "$1[#6]$2"; // Unterschied
		"(\[s\])\[#.\](\[n@r6\])" => "$1[#5]$2"; // Bildungsunterschiedes
		"(\[d\])\[#.\](\[h\])" => "$1[#4]$2"; // unvermeidlichen
		"(\[nd\])\[#.\](\[sp\])" => "[nd1][#5]$2"; // Wandspiegel
		"(\[b@l\])\[#.\](\[i\]\[ck\])" => "$1[#6]$2"; // erblickte (recorrection)
		"(\[vr\])\[#.\](\[sp@r6\])" => "$1[#0]$2"; // Muttersprache
		"(\[tt\])\[#.\](\[vr\])" => "$1[#6]$2"; // idem
		"(\[\^ch\])\[#.\](\[i\]\[ng\])" => "$1[#6]$2"; // Berlichingen
		"(\[b@r6\])\[#.\](\[i\]\[tt\])" => "$1[#7]$2"; // Raubritter
		"(\[nd\])\[#.\](\[st@r\])" => "$1[#4]$2"; // Landstrasse
		"(\[b\])\[#.\](\[[Ii]\]\[tt\])" => "$1[#7]$2"; // Bitterkeit (recorrection)
		"(\[t\])\[#.\](\[au\]\[s\])" => "$1[#4]$2"; // tausend
		"(\[b\])\[#.\](\[a\]\[f\])" => "$1[#6]$2"; // lebhaft
		"(\[\^z\])\[#.\](\[a\]\[b\])" => "$1[#6]$2"; // Blitzableiter
		"(\[b@l\])\[#.\](\[i\]\[\^z\])" => "$1[#4]$2"; // idem
		"(\[w\])\[#.\](\[i\]\[tt\])" => "$1[#5]$2"; // Gewitter
		"(\[0d-\])\[#.\](\[i\]\[nn\])" => "$1[#1]$2"; // inneren
		"(\[s=\])\[#.\](\[u\]\[ff@l\])" => "$1[#5]$2"; // sufflierte
		"(\[p@l\])\[#.\](\[a\]\[k\])" => "$1[#3]$2"; // Plakat
		"(\[&u\])\[#.\](\[k\])" => "$1[#3]$2"; // überkam
		"(\[ch\])\[#.\](\[b\])" => "$1[#6]$2"; // Nachbarschaft
		"(\[t\])(\[et\])" => "$1[#2]$2"; // vermutet
		"(\[z\])(\[&tes\])" => "$1[#3]$2"; // letztes
		"(\[schw\])\[#.\](\[i\]\[nd\])" => "$1[#6]$2"; // geschwind
		"(\[f@l\])\[#.\](\[a\]\[sch\])" => "$1[#3]$2"; // Flasche
		"(\[l\])\[#.\](\[a\]\[b\])" => "$1[#6]$2"; // labte
		"(\[\^ch\])(\[&th\])" => "$1[#2]$2"; // gerichtliche 
		"(\[n@r6\])\[#.\](\[a\]\[d\])" => "$1[#7]$2"; // Conrad
		"(\[rr\])\[#.\](\[sch\])" => "$1[#1]$2"; // herrschte
		"(\[sch\])\[#.\](\[&t)" => "$1[#5]$2"; // idem
		"(\[j\])\[#.\](\[u\]\[x\])" => "$1[#6]$2"; // Jux
		"(\[b\])\[#.\](\[[oa]\]\[b\])" => "$1[#6]$2"; // beobachtete, beabsichtigte
		"(\[ch\])\[#.\](\[o\]\[t\])" => "$1[#8]$2"; // echote
		"(\[t\])\[#.\](\[ch\])" => "$1[#5]$2"; // Käthchen
		"(\[\^ch\])(\[&tg\])" => "$1[#1]$2"; // beabsichtigt
		"(\[g\])(\[&t&e\])" => "$1[#2]$2"; // klagte
		"(\[ant\])\[#.\](\[s\])" => "$1[#1-][s]"; // Entsetzen
		"(\[f\])(\[&tm\])" => "$1[#1]$2"; // sanftmütige
		"(\[vr@l\])(\[&t&e\])" => "$1[#2]$2"; // perlte
		"(\[p@r6\])\[#.\](\[o\]\[g@r\])" => "$1[#0]$2"; // programmmässig
		"(\[s\])\[#.\](\[f@r6\])" => "$1[#6]$2"; // schnapsfröhlichen
		"(\[f\])\[#.\](\[(?:au|i)\]\[l\])" => "$1[#5]$2"; // Faulenzertum, fiel
		"(\[0n-\])\[#.\](\[o\]\[l\])" => "$1[#5]$2"; // Olweil
		"(\[s=\])\[#.\](\[a\]\[ck\])" => "$1[#5]$2"; // Sack
		"(\[bei\])\[#.\](\[t@r\])" => "$1[#2]$2"; // vorbeitrampelnden
		"(\[nd\])(\[en\])" => "$1[#1-]$2"; // idem
		"(\[sch@l3\])\[#.\](\[a\]\[f\])" => "$1[#5]$2"; // schlafend
		"(\[l\])\[#.\](\[ch\])" => "$1[#5]$2"; // Engelchen
		"\[nd\]\[#.\](\[i\]\[g\])" => "[nd1][#5]$1"; // offenkundiger
		"(\[0n-\])\[#.\](\[o\]\[ff\])" => "$1[#5]$2"; // idem
		"(\[d@r\])\[#.\](\[a\]\[ch\])" => "$1[#6]$2"; // Drachenwettbewerb
		"(\[g\])(\[&t\])" => "$1[#2]$2"; // genügt
		"(\[f\])\[#.\](\[i\])\[nd\]" => "$1[#5]$2[nd1]"; // Erfinder
		"\[ar\]\[#.\](\[f@r6\])" => "[ar^][#3]$1"; // verfrüht
		"(\[v\])\[#.\](\[i\]\[d\])" => "$1[#6]$2"; // David
		"(\[z\])\[#.\](\[ar\])" => "$1[#2]$2"; // zurechtfinden
		"(\[st\])\[#.\](\[o\]\[k@r\])" => "$1[#0]$2"; // Aristokrat
		"(\[l\])\[#.\](\[ss\])" => "$1[#5]$2"; // also
		"(\[0n-\])\[#.\](\[a\]\[l\])" => "$1[#5]$2"; // idem
		"(\[n\])\[#.\](\[i\]\[ck\])" => "$1[#6]$2"; // Kopfnicken
		"(\[s\])\[#.\](\[a\]\[ch\])" => "$1[#5]$2"; // Ursache
		"(\[b\])\[#.\](\[&i\])" => "$1[#5]$2"; // Bianca (recorrection)
		"(\[h\])\[#.\](\[au\]\[t\])" => "$1[#6]$2"; // haute
		"(\[b\])\[#.\](\[a\]\[ck\])" => "$1[#6]$2"; // Backpfeife
		"(\[ck\])\[#.\](\[pf\])" => "$1[#7]$2"; // idem
		"(\[l\])\[#.\](\[o\]\[g\])" => "$1[#4]$2"; // Logenbesucher
		"(\[k\])(\[&t)" => "$1[#2]$2"; // Akte
		"(\[d\])(\[&et)" => "[d1][#2]$2"; // hineinredete
		"(\[&e\])\[#.\](\[sp\])" => "$1[#2]$2"; // Schauspieler
		"(\[t@r\])\[#.\](\[u\]\[mpf\])" => "$1[#5]$2"; // trumpfte
		"(\[schm\])\[#.\](\[i\]\[ss\])" => "$1[#6]$2"; // schmiss
		"(\[z\])\[#.\](\[g\])" => "$1[#4]$2"; // zugesprochen
		"(\[ar\])\[#.\](\[ar\])" => "$1[#1]$2"; // verrücktes
		"(\[ar\])(\[ü\]\[ck\])" => "[ar^]$2"; // idem
		"(\[ck\])(\[&t)" => "$1[#2]$2"; // idem
		"(\[f\])\[#.\](\[i\]\[x\])" => "$1[#5]$2"; // fix
		"(\[z\])\[#.\](\[u\]\[ck\])" => "$1[#7]$2"; // Zuckerdose
		"\[nd\](\[&et)" => "[nd1][#2]$1"; // zündete
		"(\[schw\])\[#.\](\[a\]\[ch\])" => "$1[#5]$2"; // schwache
		"(\[h\])\[#.\](\[a\]\[l@l\])" => "$1[#5]$2"; // Halluzinationen
		"(\[z\])\[#.\](\[i\]\[n\])" => "$1[#5]$2"; // idem
		"(\[l\])\[#.\](\[au\]\[n\])" => "$1[#5]$2"; // Laune
		"(\[n\])(\[-e\])" => "$1[#2-]$2"; // idem
		"(\[b@r6\])\[#.\](\[o\]\[ck\])" => "$1[#6]$2"; // Brocken
		"(\[d\])\[#.\](\[u\]\[mpf\])" => "$1[#5]$2"; // dumpfe
		"(\[ch\])(\[&th\])" => "$1[#2]$2"; // nächtliche
		"(\[t@r\])\[#.\](\[a\]\[b\])" => "$1[#6]$2"; // trabte
		"(\[s\])\[#.\](\[i\]\[tt\])" => "$1[#8]$2"; // gesittet (recorrection)
		"(\[n\])\[#.\](\[pf\])" => "$1[#5]$2"; // Telegraphenpfosten
		"(\[durch\])\[#.\](\[n\])" => "$1[#0]$2"; // durchnässt
		"(\[g\])\[#.\](\[u\]\[t\])" => "$1[#6]$2"; // gute
		"(\[\^z\])\[#.\](\[b\])" => "$1[#6]$2"; // reizbarer
		"(\[b\])\[#.\](\[ur\])" => "$1[#6]$2"; // beurteilen
		"(\[z\])\[#.\](\[a\]\[pp\])" => "$1[#6]$2"; // zappeln
		"(\[b\])\[#.\](\[u\]\[b\])" => "$1[#5]$2"; // Bub
		"(\[b\])\[#.\](\[a\]\[d\])" => "$1[#6]$2"; // Badewanne
		"(\[n=\])\[#.\](\[a\]\[ch@r\])" => "$1[#1-]$2"; // Nachricht
		"(\[s\])\[#.\](\[o\]\[nn\])" => "$1[#5]$2"; // besonnenen
		"(\[t\])\[#.\](\[u\]\[l\])" => "$1[#6]$2"; // gratuliere
		"(\[sch\])\[#2\]\[sch\.\](\[#5\]\[u\]\[f\])" => "$1$2"; // Schuft (recorrection)
		"(\[durch\])\[#.\](\[(?:AR|ar)\^\])" => "$1[#3-]$2"; // durchrieselte
		"\[ar\]\[#.\](\[a\]\[ck\])" => "[ar^][#5]$1"; // abgerackert
		"(\[ch\])(\[&ts\])" => "$1[#2]$2"; // Zufluchtsstätte
		"(\[v\])\[#.\](\[ch\])" => "$1[#5]$2"; // Gustavchen
		"(\[st\])\[#.\](\[u\]\[l\])" => "$1[#5]$2"; // Stuhlgang
		"(\[g\])\[#.\](\[a\]\[ng\])" => "$1[#5]$2"; // idem
		"(\[k\])\[#.\](\[i\]\[nn\])" => "$1[#5]$2"; // Kinn
		"(\[z\])\[#.\](\[[Ii]\]\[tt\])" => "$1[#8]$2"; // zitterte (recorrection)
		"(\[vr\])\[#.\](\[bei\])" => "$1[#0]$2"; // herbeigeschafft
		"(\[bei\])\[#.\](\[g\])" => "$1[#0]$2"; // idem
		"(\[(?:AR|ar)\^\])\[#.\](\[sp@r6\])" => "$1[#0]$2"; // versprochen
		"(\[ar\])\[#.\](\[sch@r\])" => "$1[#2-]$2"; // verschreiben
		"(\[s=\])\[#.\](\[i\]\[nn\])" => "$1[#4]$2"; // sinnlos
		"(\[nn\])\[#.\](\[l\])" => "$1[#2]$2"; // idem
		"(\[t\])\[#.\](\[[Aa]\]\[nd\])" => "$1[#7]$2"; // Tand (recorrection)
		"(\[l\])\[#.\](\[o\]\[ck\])" => "$1[#7]$2"; // blondgelockte
		"(\[nd\])\[#.\](\[g\])" => "$1[#3]$2"; // idem
		"(\[f@r6\])\[#.\](\[o\]\[h\])" => "$1[#5]$2"; // froh
		"(\[f\])\[#.\](\[st\])" => "$1[#5]$2"; // Märchenhofstaates
		"(\[st\])\[#.\](\[a\]\[t\])" => "$1[#7]$2"; // idem
		"(\[p@l\])\[#.\](\[a\]\[pp\])" => "$1[#6]$2"; // plappern
		"(\[t@r\])\[#.\](\[i\]\[b\])" => "$1[#6]$2"; // trieb
		"(\[s\])\[#.\](\[d\])" => "$1[#6]$2"; // Gottesdienst
		"(\[z\])\[#.\](\[(?:AR|ar)\^\])" => "$1[#2]$2"; // herumzurutschen
		"(\[auf\])\[#.\](\[sp@r6\])" => "$1[#1]$2"; // hinaufsprang
		"(\[f@l\])\[#.\](\[i\]\[ck\])" => "$1[#8]$2"; // Flickmamsells
		"(\[ck\])\[#.\](\[ch\])" => "$1[#6]$2"; // Bäckchen
		"(\[l\])\[#.\](\[o\]\[d\])" => "$1[#6]$2"; // Melodie
		"(\[d\])\[#.\](\[&i\])" => "$1[#4]$2"; // idem
		"(\[s\])\[#.\](\[o\]\[m\])" => "$1[#6]$2"; // Gasometer
		"(\[ch\])\[#.\](\[m\])" => "$1[#5]$2"; // Sonntagnachmittagen
		"(\[sp\])\[#.\](\[a\]\[z\])" => "$1[#1]$2"; // Spaziergänge
		"(\[&e\])\[#.\](\[i\]\[g\])" => "$1[#1]$2"; // Neuigkeiten
		"(\[c\])\[#.\](\[i\]\[t\])" => "$1[#2][sch.][#4]$2"; // Tacitus
		"(\[d\])\[#.\](\[a\]\[&u\])" => "$1[#5]$2"; // du
		"(\[da\])\[#.\](\[v\])" => "$1[#2]$2"; // davon
		"(\[d\])(\[&t)" => "$1[#3]$2"; // Städte
		"(\[nk\])\[#.\](\[w\])" => "$1[#3]$2"; // denkwürdig
		"(\[vr\])\[#.\](\[d\])" => "$1[#5]$2"; // idem
		"(\[nk\])\[#.\](\[m\])" => "$1[#2]$2"; // Denkmäler
		"(\[sch@r\])\[#.\](\[sch\.\])\[#.\](\[i\]\[f\])" => "$1[#2]$2[#3]$3"; // Schriften (recorrection)
		"(\[t\])\[#.\](\[a\]\[t\])" => "$1[#8]$2"; // Taten
		"(\[sch@r\])\[#.\](\[sch\.\])\[#.\](\[i\]\[b\])" => "$1[#2]$2[#3]$3"; // beschrieben (recorrection)
		"(\[f@l\])\[#.\](\[o\]\[tt\])" => "$1[#7]$2"; // Flotte
		"(\[w\])\[#.\](\[a\]\[&a\])" => "$1[#3]$2"; // etwa
		"(\[t\])\[#.\](\[w\])" => "$1[#5]$2"; // idem
		"(\[l\])\[#.\](\[i\]\[ss\])" => "$1[#5]$2"; // liess
		"(\[nd\])\[#.\](\[a\]\[l\])" => "$1[#6]$2"; // Sandalen
		"(\[mm\])(\[-e\])" => "$1[#2-]$2"; // Stamme
		"(\[ar\])\[#.\](\[sch\])" => "[ar^][#1-]$2"; // verschiedene
		"(\[c\])(\[&t)" => "$1[#3]$2"; // Rectilina
		"(\[l\])\[#.\](\[i\]\[n\])" => "$1[#5]$2"; // idem
		"(\[&t&e\])(\[i\]\[l\])" => "$1[#2]$2"; // idem
		"(\[s\])\[#.\](\[c\])" => "$1[#7]$2"; // Cascus
		"(\[f\])\[#.\](\[a\]\[ng\])" => "$1[#5]$2"; // anfangs
		"(\[all\])(\[-e\])" => "$1[#3-]$2"; // alle
		"(\[d\])\[#.\](\[i\]\[k\])" => "$1[#7]$2"; // diktieren
		"(\[s\])\[#.\](\[st\])" => "$1[#6]$2"; // Bimssteine
		"(\[z@r\])\[#.\](\[sp@r6\])" => "$1[#4]$2"; // zersprengte
		"(\[w\])\[#.\](\[i\])\[nd\]" => "$1[#2]$2[nd1]"; // Wind
		"(\[&eitvr\])(\[vr\])" => "$1[#2]$2"; // heiterer
		"(\[k\])\[#.\](\[i\]\[ss\])" => "$1[#5]$2"; // Kissen
		"(\[t\])\[#.\](\[u\]\[ch\])" => "$1[#5]$2"; // Tuch
		"(\[VR10\])\[#.\](\[auf\])" => "$1[#0]$2"; // hierauf
		"(\[f@l\])\[#.\](\[o\]\[h\])" => "$1[#5]$2"; // floh
		"(\[st\])\[#.\](\[i\]\[ck\])" => "$1[#3][st.][#4]$2"; // erstickt
		"\[ar\]\[#.\](\[ur\])" => "[ar^][#2]$1"; // verursachte
		"(\[z\])\[#.\](\[u\]\[vr\])" => "$1[#3]$2"; // zur
		"(\[zw\])\[#.\](\[i\]\[ck\])" => "$1[#9]$2"; // Zwicker
		"(\[z\])\[#.\](\[au\]\[b\])" => "$1[#6]$2"; // zusammengezaubert
		"(\[&[Uu]\])\[#.\](\[ar\])" => "$1[#1-]$2"; // überraschte
		"(\[ar\])\[#.\](\[a\]\[sch\])" => "[ar^][#2-]$2"; // idem
		"(\[all\])(\[j\])" => "$1[#3]$2"; // alljährlich
		"(\[t\])\[#.\](\[[Ii]\]\[pp\])" => "$1[#8]$2"; // tippt (recorrection)
		"(\[\^ch\])\[#.\](\[m\])" => "$1[#5]$2"; // gleichmütig
		"(\[ch\])\[#.\](\[st\])" => "$1[#6]$2"; // Buchstaben
		"(\[st\])\[#.\](\[a\]\[b\])" => "$1[#5]$2"; // idem
		"(\[b@r6\])\[#.\](\[u\]\[ch\])" => "$1[#5]$2"; // bruchstückweise	
		"(\[h\])\[#.\](\[u\]\[st\])" => "$1[#6]$2"; // gehustet
		"(\[f\])\[#.\](\[o\]\[l\])" => "$1[#3]$2"; // verfolgte
		"(\[(?:AR|ar)\^\])\[#.\](\[zw\])" => "$1[#1]$2"; // verzweifelten
		"(\[h\])\[#.\](\[a\]\[l\])" => "$1[#5]$2"; // Haltung
		"(\[st\])\[#.\](\[w\])" => "$1[#5]$2"; // einstweilen
		"(\[h\])\[#.\](\[a\]\[st\])" => "$1[#5]$2"; // hastig
		"(\[w\])\[#.\](\[a\]\[tt\])" => "$1[#6]$2"; // Watte
		"(\[l\])\[#.\](\[i\]\[s\])" => "$1[#4]$2"; // Lysoform
		"\[ar\]\[#.\](\[g@r\])" => "[ar^][#3-]$1"; // vergrämt
		"(\[k@l3\])\[#.\](\[a\]\[vr\])" => "$1[#5]$2"; // Klarheit
		"(\[n@r6\])\[#.\](\[b@r6\])" => "$1[#6]$2"; // ununterbrochen
		"(\[&u\])\[#.\](\[n@r6\])" => "$1[#1]$2"; // idem
		"(\[m\])\[#.\](\[a\]\[t@r\])" => "$1[#4]$2"; // Matrosenanzug
		"(\[ch\])(\[&tvr\])" => "$1[#2]$2"; // nüchternen
		"(\[z\])\[#.\](\[k@r\])" => "$1[#2]$2"; // Holzkreuz
		"(\[ar\])\[#.\](\[(?:AR|ar)\^\])" => "$1[#1]$2"; // Verrichtung
		"(\[s\])\[#.\](\[i\]\[nk\])" => "$1[#6]$2"; // dahinsinkt
		"(\[(?:ND1|nd1?)\])\[#.\](\[u\]\[ng\])" => "$1[#4]$2"; // Verbindung
		"(\[rr\])\[#.\](\[n\])" => "$1[#1-]$2"; // Wirrnis
		"(\[vr\])\[#.\](\[i\]\[VR10\])" => "$1[#1-]$2"; // perforiert (only for vr10)
		"(\[z\])\[#.\](\[u\]\[pf\])" => "$1[#5]$2"; // zupfte
		"(\[j\])\[#.\](\[o\]\[pp\])" => "[j^][#6]$2"; // Joppe
		"(\[pp\])(\[-e\])" => "$1[#2-]$2"; // idem
		"(\[durch\])\[#.\](\[d@r\])" => "$1[#2-]$2"; // durchdringend
		"(\[auf\])\[#..?\](\[z\])" => "$1[#3-]$2"; // Aufzug (recorrection)
		"(\[g\])\[#.\](\[t\])" => "$1[#7]$2"; // herumgetobt
		"(\[p@r6\])\[#.\](\[o\]\[pp\])" => "$1[#7]$2"; // proppere
		"(\[d\])\[#.\](\[u\]\[ng\])" => "$1[#5]$2"; // Kleidung
		"(\[&t@l3\])(\[i\]\[ng\])" => "$1[#3]$2"; // Negerhäuptling
		"(\[w\])\[#.\](\[i\]\[VR10\])" => "$1[#1]$2"; // gewirkt (only v10)
		"(\[ant\])\[#.\](\[gegen\])" => "$1[#2-]$2"; // entgegen
		"(\[b\])\[#.\](\[(?:i|au)\]\[st\])" => "$1[#6]$2"; // bist, baust
		"(\[k@l3\])\[#.\](\[a\]\[pp\])" => "$1[#8]$2"; // Klapperstorch
		"(\[0d-\])\[#.\](\[au\]\[d\])" => "$1[#3]$2"; // Audienz
		"(\[l\])\[#.\](\[a\]\[f\])" => "$1[#5]$2"; // zweifelhafte
		"(\[s\])\[#.\](\[vr\])" => "$1[#7]$2"; // eiserner
		"(\[nd\])(\[&tvr\])" => "[nd1][#2]$2"; // mundgewandter
		"(\[vor\])\[#.\](\[sch\])" => "$1[#0]$2"; // Vorschuss
		"(\[sch\])(\[&t\])" => "$1[#2]$2"; // beherrscht	
		"(\[st\])\[#.\](\[g\])" => "$1[#2]$2"; // Postgebäude
		"(\[h\])\[#.\](\[u\]\[b\])" => "$1[#6]$2"; // hub
		"(\[nd\])\[#.\](\[t\])" => "[nd1][#6]$2"; // Abendtisch
		"(\[b@r6\])\[#.\](\[a\]\[nn\])" => "$1[#5]$2"; // brannte
		"(\[z@r\])\[#.\](\[b@r6\])" => "$1[#5]$2"; // zerbrochenen
		"(\[s\])\[#.\](\[(?:AR\^|ar\^?)])" => "$1[#3]$2"; // Schnapsrausch
		"(\[\^ch\])\[#.\](\[g\])" => "$1[#4]$2"; // Gleichgewicht
		"(\[\^ch\])(\[&t\-1\])" => "$1[#2]$2"; // sichtbares
		"(\[b@r6\])\[#.\](\[o\]\[d\])" => "$1[#8]$2"; // umbrodelte
		"(\[z@r\])\[#.\](\[k@r\])" => "$1[#1]$2"; // zerkrallten
		"(\[sch\])\[#.\](\[au\]\[t\])" => "$1[#2][sch.][#5]$2"; // zugeschaut
		"(\[bei\])\[#.\](\[l\])" => "$1[#1]$2"; // Beileid
		"(\[ant\])\[#.\](\[h\])" => "$1[#1]$2"; // Enthüllung
		"(\[vor\])\[#.\](\[w\])" => "$1[#3]$2"; // Vorwurf
		"(\[auf\+ar\])\[#.\](\[a\]\[ff\])" => "$1[#6]$2"; // aufraffen
		"(\[k\])\[#.\](\[i\]\[ck\])" => "$1[#7]$2"; // gekickt
		"(\[t@r\])\[#.\](\[[Ii]\]\[tt\])" => "$1[#9]$2"; // Fusstritte
		"(\[ch\])\[#.\](\[n\])" => "$1[#5]$2"; // Nachnamen
		"(\[sein\])(\[em\])" => "$1[#7-]$2"; // seinem
		"(\[zw\])\[#.\](\[&i\])" => "$1[#5]$2"; // Zwiegespräch
		"(\[sch\]\[#2\]\[sch\.\])\[#.\](\[i\]\[\^ch\])" => "$1[#1]$2"; // Geschichte (recorrection)
		"(\[b@l\])\[#.\](\[a\]\[nk@r\])" => "$1[#1-]$2"; // blankreiben
		"(\[&e\])\[#.\](\[o\]\[vr\])" => "$1[#1]$2"; // Georg
		"(\[b\])\[#.\](\[[ou]\]\[ck\])" => "$1[#6]$2"; // Bock, Buckel
		"(\[ns\])\[#.\](\[st@r\])" => "$1[#4]$2"; // Lebensstrasse
		"(\[&u\])\[#.\](\[t@r\])" => "$1[#4]$2"; // Übertreibungen
		"(\[da\])\[#.\](\[z\])" => "$1[#1]$2"; // dazu
		"(\[sch\])\[#.\](\[u\]\[h\])" => "$1[#2]$2"; // Schuhwarenlager
		"(\[schm\])\[#.\](\[u\]\[ck\])" => "$1[#7]$2"; // schmucker
		"(\[s\])\[#.\](\[i\]\[nn\])" => "$1[#6]$2"; // Unsinn
		"(\[rr\])(\[-e\])" => "$1[#4-]$2"; // schwirre
		"(\[nicht\])(\[i\]\[g\])" => "$1[#2]$2"; // Nichtigkeiten
		"(\[&t@r\])(\[-e\])" => "$1[#6-]$2"; // untre
		"(\[vor\])\[#.\](\[(?:hab|d)\])" => "$1[#2]$2"; // vorhabend, vorder
		"(\[vor\])(\[en\]\[ar\])" => "$1[#5-]$2"; // Vorversuch
		"(\[vor\])\[#.\](\[i\]\[g\])" => "$1[#0]$2"; // vorig
		"(\[&tschaft\])(\[ch\])" => "$1[#4]$2"; // Ortschäftchens
		"(\[&t@l3\])(\[i\]\[n\])" => "$1[#2]$2"; // Veltliner
		"(\[&eit@l3\])(\[i\]\[ng\])" => "$1[#6]$2"; // seitlings
		"(\[b\])(\[-e\])" => "$1[#1-]$2"; // Liebe
		"(\[&t&e\])(\[en\])" => "$1[#2-]$2"; // Verliebten
		"(\[b\])\[#.\](\[z\])" => "$1[#0]$2"; // abzustauben
		"(\[z\])\[#.\](\[st\])" => "$1[#5]$2"; // idem
		"(\[st\])\[#.\](\[au\]\[b\])" => "$1[#5]$2"; // idem
		"(\[z\])\[#.\](\[f@r6\])" => "$1[#6]$2"; // Putzfrauen
		"(\[l@l\])\[#.\](\[f\])" => "$1[#6]$2"; // Modellfigur
		"(\[\^ch\])(\[-e\])" => "$1[#2]$2"; // Bäuche
		"(\[nd\])(\[-e\])" => "$1[#1-]$2"; // glühende
		"(\[durch\])\[#.\](\[l\])" => "$1[#0]$2"; // Durchlaucht
		"(\[g@r\])\[#.\](\[i\]\[ns\])" => "$1[#2]$2"; // grinst
		"(\[ns\])(\[&t)" => "$1[ns.][#2]$2"; // grinst
		"(\[g\])\[#.\](\[a\]\[ns\])" => "$1[#5]$2"; // Gans
		"(\[dis\])(\[en\])" => "$1[#2-]$2"; // diesem
		"(\[dis\])(\[em\])" => "$1[#7-]$2"; // diesem
		"(\[t\])(\[&ai@#\/\.\])" => "$1[#7]$2[#7-]"; // Taille (special diacritics) => do it here, so that it will be integrated in all models
		"(\[g\])\[#.\](\[d@r\])" => "$1[#3]$2"; // gedreht
		"(\[n=\])\[#.\](\[a\]\[sch\])" => "$1[#0]$2"; // naschen
		"(\[l\])\[#.\](\[u\]\[f\])" => "$1[#6]$2"; // Luftstoss
		"(\[da@r\])\[#.\](\[st\])" => "$1[#5]$2"; // darstellten
		"(\[\^sch\])(\[-e\])" => "$1[#3-]$2"; // Tische
		"(\[st\])(\[-e\])" => "$1[#1-]$2"; // speiste
		"(\[st@r\])\[#.\](\[a\]\[l\])" => "$1[#5]$2"; // strahlende
		"(\[sch\])\[#.\](\[n\])" => "$1[#1]$2"; // schnarchte
		"(\[et3\/4\]\[&e\]|\[&t&e\])(\[-e\])" => "$1[#2-][-e2]"; // idem, arbeitete => length after &e different in german and french!
		"(\[f\])\[#.\](\[g\])" => "$1[#3]$2"; // Schlafgemach
		"(\[w\])\[#.\](\[a\]\[nk\])" => "$1[#1]$2"; // wankte
		"(\[nk\])(\[&t)" => "$1[#1]$2"; // idem
		"(\[wenn\])(\[g@l3\])" => "$1[#2]$2"; // wenngleich
		"(\[aus\])\[#.\](\[sch@r\])" => "$1[#1-]$2"; // ausschraubte
		"(\[sch@r\]\[#2\]\[sch\.\])\[#4\](\[au\]\[b\])" => "$1[#2]$2"; // idem (recorrection)
		"(\[all\])(\[em\])" => "$1[#8-]$2"; // allem
		"(\[t\])\[#.\](\[k@r\])" => "$1[#2]$2"; // Tatkraft
		"(\[b@l\])\[#.\](\[&i\])" => "$1[#5]$2"; // Bibliothek
		"(\[f\])\[#.\](\[a\]\[l\])" => "$1[#5]$2"; // falschen
		"(\[l\])\[#.\](\[sch\])" => "$1[#2]$2"; // idem
		"(\[&t&e\])(\[em\])" => "$1[#8-]$2"; // gesenktem
		"(\[durch\])\[#.\](\[s\])" => "$1[#1-]$2"; // durchs
		"(\[b@l\])\[#.\](\[i\]\[ck\])" => "$1[#9]$2"; // Blick
		"(\[c\])\[#.\](\[k@r\])" => "$1[#2][sch.][#1-]$2"; // konkret
		"(\[m\])\[#.\](\[a\]\[d@r\])" => "$1[#0]$2"; // Madrid
		"(\[d@r\])\[#.\](\[i\]\[d\])" => "$1[#2][d.][#5]$2"; // idem
		"(\[ar\])\[#.\](\[aus\])" => "$1[#0]$2"; // raus
		"(\[sch\.\])\[#.\](\[i\]\[\^ch\])" => "$1[#2]$2"; // schlich (recorrection)
		"(\[sch\])\[#.\](\[o\]\[n\])" => "$1[#2-]$2"; // schon
		"(\[h\])\[#.\](\[o\]\[ck\])" => "$1[#6]$2"; // hockte
		"(\[k\])\[#.\](\[(?:au|i)\]\[t\])" => "$1[#7]$2"; // kaute, Kit
		"((?:\[n=\]|\[p\]))\[#.\](\[a\]\[ck\])" => "$1[#6]$2"; // Nacken, Packesel
		"(\[sch\.\])\[#.\](\[i\]\[b\])" => "$1[#2]$2"; // geschrieben (recorrection)
		"(\[nd\])(\[em\])" => "$1[#7-]$2"; // zunehmendem
		"(\[s\])\[#.\](\[&[Ii]\])" => "$1[#5]$2"; // Poesie (re-recorrection)
		"(\[sp\])\[#.\](\[a\]\[vr\])" => "$1[#3]$2"; // Sparkasse
		"(\[nn\])\[#.\](\[vr\])" => "$1[#3]$2"; // Donnerwetter
		"(\[ant\])\[#.\](\[st\])" => "$1[#1]$2"; // entsteht
		"(\[(?:VR|vr)(?:10)?\])\[#.\](\[a\]\[nn\])" => "$1[#2]$2"; // Tyrannei
		"(\[sch\.\])\[#.\](\[(?:i|au)\]\[f\])" => "$1[#3]$2"; // schlief, Schaufel (recorrection)
		"(\[s\])\[#.\](\[a\]\[nn\])" => "$1[#4]$2"; // ersann
		"(\[t\])\[#.\](\[u\]\[t\])" => "$1[#8]$2"; // tut
		"(\[&t&e\])(\[et3\/4\])" => "$1[#4-]$2"; // erntete (careful with that rule ... not sure it produces good resultats for all cases)
		"(\[z\])\[#.\](\[a\]\[m\])" => "$1[#5]$2"; // nachzuahmen
		"(\[n\])\[#n\](\[-e\])" => "$1[#2-]$2"; // Schneeflocken
		"(\[f@l\])\[#.\](\[o\]\[ck\])" => "$1[#7]$2"; // idem
		"(\[(?:VR10|vr10)\])\[#.\](\[ch\])" => "$1[#0]$2"; // Kirchturmuhr
		"(\[st\])\[#.\](\[u\]\[z\])" => "$1[#2]$2"; // stutzte
		"(\[t@r\])\[#.\](\[[Ii]\]\[pp\])" => "$1[#7]$2"; // trippelte (recorrection)
		"(\[z\])\[#.\](\[a\]\[l)" => "$1[#5]$2"; // zahlreichen
		"(\[vr\])\[#.\](\[g@r\])" => "$1[#2-]$2"; // ergriff (recorrection)
		"(\[b@l\])\[#.\](\[u\]\[m\])" => "$1[#5]$2"; // Blumen
		"(\[da@r\])\[#.\](\[g\])" => "$1[#2]$2"; // dargestellt
		"(\[q\])\[#.\](\[i\]\[ck\])" => "$1[#8]$2"; // Erquickung
		"(\[vr@l\])(\[o\]\[-e\])" => "$1[#3-]$2"; // Kerle
		"(\[z\])\[#.\](\[u\]\[ck\])" => "$1[#8]$2"; // Zuckerzeug
		"(\[z\])\[#.](\[g@r\])" => "$1[#0]$2"; // zugreifen
		"(\[l\])\[#.\](\[a\]\[l@l\])" => "$1[#5]$2"; // lallen
		"(\[st\])\[#.\](\[l\])" => "$1[#4]$2"; // trostlos
		"(\[t@r\])\[#.\](\[au\]\[(?:VR|vr)10\])" => "$1[#5]$2"; // traurig
		"(\[d@r\])\[#.\](\[i\]\[nn\])" => "$1[#5]$2"; // drinnen
		"(\[st\])\[#.\](\[u\]\[b\])" => "$1[#5]$2"; // Dachstube
		"(\[&th\])(\[u\]\[ng\])" => "$1[#2]$2"; // Veröffentlichung
		"(\[&tschaft\])(\[s\])" => "$1[#3]$2"; // Präsidentschaftswahlen
		"(\[auf\])\[#.\](\[g@r\])" => "$1[#5-]$2"; // aufgrund
		"(\[&tns\])(\[w\])" => "$1[#4]$2"; // beachtenswert
		"(\[t\])\[#.\](\[i\]\[ck\])" => "$1[#8]$2"; // Parkticket
		"(\[k\])\[#.\](\[t\])" => "$1[#7]$2"; // idem
		"(\[bei\])\[#.\](\[sp\])" => "$1[#1]$2"; // beispielsweise
		"(\[ant\])\[#.\](\[sp)" => "$1[#1]$2"; // entsprechend
		"(\[st@r\])\[#.\](\[o\]\[m\])" => "$1[#2]$2"; // Stromkonzerne
		"(\[z\])\[#.\](\[a\]\[pf\])" => "$1[#6]$2"; Zapfsäule
		"(\[b\])\[#.\](\[u\]\[nd\])" => "$1[#5]$2"; // angebunden
		"(\[ch\])\[#.\](\[f@r6\])" => "$1[#6]$2"; // Nachfrage
		"(\[@l\])(\[o\]\[w\])" => "$1[#4]$2"; // Slowenien
		"(\[p\])\[#.\](\[u\]\[nk\])" => "$1[#1]$2"; // Punkband
		"(\[nk\])\[#.\](\[b\])" => "$1[#4]$2"; // idem
		"(\[rr\])\[#.\](\[u\]\[p\])" => "$1[#3]$2"; // Korruption (recorrection)
		"(\[\^ch\])\[#.\](\[b\])" => "$1[#7]$2"; // brauchbar
		"(\[0n-\])\[#.\](\[a\]\[l@l\])" => "$1[#5]$2"; // allergisch
		"(\[auf\])\[#.\](\[k@l3\])" => "$1[#1]$2"; // Aufklärung
		"(\[heit\]\[&e\])\[#.\](\[a\]\[g\])" => "$1[#1]$2"; // Freitag
		"(\[sch\])\[#.\](\[u\]\[z\])" => "$1[#2]$2"; // Schutzanzüge
		"(\[m\])\[#.\](\[a\]\[c@r\])" => "$1[#1]$2"; // Macron
		"(\[f@r6\])\[#.\](\[a\]\[nk@r\])" => "$1[#0]$2"; // Frankreichs
		"(\[s\])\[#n\](\[vr\+ar\])" => "$1[#6]$2"; // besorgniserregend (special)
		"(\[&eith\])(\[vr\])" => "$1[#4]$2"; // gesundheitlicher
		"(\[st\])\[#.\](\[a\]\[g@r\])" => "$1[#1-]$2"; // Instagram
		"(\[rr\])\[#.\](\[o\]\[vr\])" => "$1[#1]$2"; // Horror (recorrection)
		"(\[auf\])\[#.\](\[p\])" => "$1[#2]$2"; // aufpassen
		"(\[t\])\[#.\](\[i\]\[p\])" => "$1[#7]$2"; // typischen
		"(\[&t@l3\])(\[vr\])" => "$1[#3]$2"; // Sportler
		//"(\[z\])(\[i\]\[p@l\])" => "$1[#4]$2"; // Disziplinenwertung: Disziplin has correct spacing, but this combination doesn't ... No idea why => correct it here! => there is a special and INVISIBLE character bevor [p@l] => no idea where it comes from!?!?!?!
		// IMPOSSIBLE TO CORRECT THIS BUG HERE => PROBABLY AN UTF-8 / CONVERSION PROBLEM => MUST BE INVESTIGATED ...
		// Ok, problem is still not clear, but it is not a bug in VSTENO: word was copied from original HTML-document
		// When the word is entered with keyboard, the calculated result is correct
		// => the additional, invisible character (which looks similar to an - when copied to an Office document) must come from the original document
		// nothing visible there though ... most probable explanation is that it is a &shy; maybe dynamically copied in by some JS ...
		"(\[t\])\[#.\](\[q\])" => "$1[#7]$2"; // Limmatquai
		"(\[l\])\[#n\](\[&o\])" => "$1[#3]$2"; // Velo (correction, special)
		"(\[&tvr\])(\[u\]\[ng\])" => "$1[#3]$2"; // Steuererleichterungen
		"(\[\^ch\])\[#.\](\[st\])" => "$1[#7]$2"; // gleichstellen
		"(\[g\])\[#.\](\[a\]\[t\])" => "$1[#6]$2"; // negativer
		"(\[d\])\[#.\](\[i\]\[p@l\])" => "$1[#7]$2"; // Diplomat
		"(\[g\])\[#.\](\[a\]\[nd\])" => "$1[#6]$2"; // Propaganda
		"(\[nd\])\[#.\](\[a\]\[&a\])" => "$1[#6]$2"; // idem
		"(\[j\])\[#.\](\[o\]\[ng\])" => "$1[#5]$2"; // Jong
		"(\[rück\])\[#.\](\[sch\])" => "$1[#4-]$2"; // Rückschau
		"(\[t\])\[#.\](\[u\]\[b\])" => "$1[#8]$2"; // Tubel
		"(\[ar\])\[#.\](\[a\])\[nd@l3\]" => "[ar^][#4]$2[nd1@l3]"; // Randlingen
		"(\[nd.@l3\])\[#.\](\[i\]\[ng\])" => "$1[#2][nd.][#1]$2"; // idem
		"(\[nd.?\])\[-e\]" => "$1[#1-][-e1]"; // Spinnwinde
		"(\[nn\])\[#.\](\[w\])" => "$1[#3]$2"; // idem
		"(\[\^sch\])(\[em\])" => "$1[#7-]$2"; // frischem
		"(\[n\])\[#.\](\[u\]\[ng\])" => "$1[#2]$2"; // Wohnung
		"(\[zurück\])\[#.\](\[g\])" => "$1[#1]$2"; // zurückgestrichen
		"(\[g\])\[#.\](\[st@r\])" => "$1[#4]$2"; // idem
		"(\[n\])\[#.\](\[sp\])" => "$1[#4]$2"; // Kragenspitzen
		"(\[l\])\[#.\](\[a\]\[sch\])" => "$1[#3]$2"; // lasch
		"(\[n\])\[#.\](\[o\]\[t\])" => "$1[#5]$2"; // Knoten
		"(\[0n-\])\[#.\](\[o\]\[st\])" => "$1[#5]$2"; // ostschweizerisch
		"(\[st\])\[#.\](\[schw\])" => "$1[#3]$2"; // idem
		"(\[s\])\[#.\](\[i\]\[\^ch\])" => "$1[#4]$2"; // Gesichtes
		"(\[\^ch\])(\[&tes\])" => "$1[#2]$2"; // Gesichtes
		"(\[n\])\[#.\](\[k\])" => "$1[#5]$2"; // Wangenknochen
		"(\[g\])\[#.\](\[&i\])" => "$1[#4]$2"; // religiösen
		"(\[m\])\[#.\](\[a\]\[sch\])" => "$1[#0]$2"; // Schreibmaschine
		"(\[t\])\[#.\](\[(?:au|a)\]\[f\])" => "$1[#7]$2"; // getauft, Tafel
		"(\[d\])\[#.\](\[ch\])" => "$1[#5]$2"; // Mädchen
		"(\[k@r\])\[#.\](\[i\]\[n\])" => "$1[#4]$2"; // Krinoline
		"(\[t\])(\[em\])" => "$1[#4-]$2"; // adäquatem
		"(\[b@l\])\[#.\](\[u\]\[st\])" => "$1[#7]$2"; // Bohenblust
		"(\[s=\])\[#.\](\[o\]\[vr\])" => "$1[#3]$2"; // Sorgen
		"(\[s\])\[#.\](\[o\]\[b\])" => "$1[#6]$2"; // Demonstrationsobjekt
		"(\[&tvr\])(\[em\])" => "$1[#9-]$2"; // letzterem
		"(\[&tvr\])(\[en\])" => "$1[#4-]$2"; // letzteren
		"(\[g\])\[#.\](\[schw\])" => "$1[#3]$2"; Geschwister
		"(\[schw\])\[#.\](\[i\]\[st\])" => "$1[#5]$2"; // idem
		"(\[m\])\[#.\](\[k@r\])" => "$1[#0]$2"; // umkreisen
		"(\[sp\])\[#.\](\[u\]\[vr\])" => "$1[#2]$2"; // Spur
		"(\[n=@r6\])\[#.\](\[sch@r\])" => "$1[#2-]$2"; // Unterschrift
		"(\[ant\])\[#.\](\[d\])" => "$1[#0]$2"; // entdeckte
		"(\[ck\])\[#.\](\[sch@r\])" => "$1[#1]$2"; // Druckschrift
		"(\[d@r\])\[#.\](\[u\]\[ck\])" => "$1[#3][d.][#5]$2"; // idem
		"(\[schm\])\[#.\](\[o\]\[ck\])" => "$1[#3][d.][#4]$2"; // Schmocker
		"(\[l\])(\\\\)(\[p\])" => "$1$2[#4]$3"; // Lumbalpunktionsgerät => this rule needs "double escaping" for \\ !!!
		"(\[y\])\[#5\](\[(?:AR\^|ar)\])" => "$1[#0]$2"; // Weyrauch
		"(\[d\])\[#.\](\[k@r\])" => "$1[#2]$2"; // Hemdkragen
		"(\[auf\])\[#.\](\[m\])" => "$1[#0]$2"; // aufmunternd
		"(\[g\])\[#.\](\[i\]\[m\])" => "$1[#5]$2"; // Regime
		"(\[nd\])(\[&tn\])" => "[nd1][#2]$2"; // Bewandtnis
		"(\[ss\])(\[em\])" => "$1[#5-]$2"; // weissem
		"(\[pp?\])\[#.\](\[sch@r\])" => "$1[#3-]$2"; // Stepschritte
		"(\[j\])\[#.\](\[a\]\[h\])" => "$1[#4]$2"; // bejahende
		"(\[d@r\])\[#.\](\[o\]\[h\])" => "$1[#4]$2"; // Bedroher
		"(\[g@l3\])\[#.\](\[o\]\[ck\])" => "$1[#7]$2"; // Alarmglocke
		"(\[vor\])\[#.\](\[sp@r6\])" => "$1[#1-]$2"; // Mauervorsprung
		"(\[f@r6\])\[#.\](\[o\]\[sch\])" => "$1[#2]$2"; // froschhaft
		"(\[t\])\[#.\](\[a\]\[ng\])" => "$1[#5]$2"; // Tangoschritt
		"(\[ng\])\[#.\](\[&o\])" => "$1[#4]$2"; // idem
		"(\[&o\])\[#.\](\[sch@r\])" => "$1[#2-]$2"; // idem
		"(\[&eitg\])(\[em\])" => "$1[#5-]$2"; // gleichzeitigem
		"(\[st\])\[#.\](\[z\])" => "$1[#1]$2"; // festzustellen
		"(\[i\])\[nk@l3\]" => "$1[nk1@l3]"; // rechtwinklig => very general rule
		"(\[w\])\[#.\](\[i\]\[nk1@l3\])" => "$1[#1][d.][#2-]$2"; // rechtwinkling
		"(\[l@l\])\[#.\](\[&o\])" => "$1[#4]$2"; // hallo
		"(\[durch\])\[#3\](\[aus\])" => "$1[#1-]$2"; // durchaus
		"(\[t\])\[#.\](\[au\]\[b\])" => "$1[#7]$2"; // Taubenschlucht
		"(\[m\])\[#.\](\[z\])" => "$1[#0]$2"; // mitzukommen
		"(\[&u\])\[#.\](\[sch@r\])" => "$1[#4-]$2"; // überschritten
		"(\[n=\])\[#.\](\[i\])\[d@r\]" => "$1[#0]$2[d1@r]"; // niedrig
		"(\[l@l\])\[#.\](\[a\]\[&a\])" => "$1[#7]$2"; // Kölla
		"(\[h\])\[#.\](\[u\]\[ng@r\])" => "$1[#2]$2"; // hungrig
		"(\[ng@r\])\[#.\](\[i\]\[g\])" => "$1[#3][d.][#2]$2"; // idem
		"(\[v\])\[#.\](\[a\]\[tt\])" => "$1[#8]$2"; // Vatti
		"(\[tt\])\[#.\](\[&i\])" => "$1[#5]$2"; // idem
		"(\[m\])\[#.\](\[a\]\[pp\])" => "$1[#7]$2"; // Mappe
		"(\[d\])\[#.\](\[au\]\[m\])" => "$1[#6]$2"; // Daumen
		"(\[auf\])\[#.\](\[sp\])" => "$1[#0]$2"; // aufspannt
		"(\[m\])\[#.\](\[a\]\[vr\])" => "$1[#3]$2"; // Marmor
		"(\[z\])\[#.\](\[i\]\[s\])" => "$1[#5]$2"; präzis
		"(\[rück\])\[#.\](\[l\])" => "$1[#1]$2"; // rücklings
		"(\[s\])\[#.\](\[o\]\[ck\])" => "$1[#6]$2"; // Wollsocke
		"(\[durch\])\[#.\](\[z\])" => "$1[#2-]$2"; // durchzudringen
		"(\[t@r\])\[#.\](\[au\]\[m\])" => "$1[#5]$2"; // Traumungetümen
		"(\[s\])\[#.\](\[ur\])" => "$1[#7]$2"; // Todesursache
		"(\[nd\])\[#.\](\[sch@r\])" => "$1[#1-]$2"; // Wandschrank
		"(\[vor\])\[#.\](\[sp\])" => "$1[#0]$2"; // Vorspiel
		"(\[t\])\[#.\](\[o\]\[m\])" => "$1[#5]$2"; // Automaten
		"(\[k\])\[#.\](\[i\]\[VR10\])" => "$1[#6]$2"; // Kirsch (recorrection)
		"(\[st\])\[#.\](\[u\]\[nk\])" => "$1[#2]$2"; // gestunken
		"(\[s\])\[#.\](\[a\]\[ck\])" => "$1[#7]$2"; // Sandsack
		"(\[&u\])\[#.\](\[o\])" => "$1[#2]$2"; // unordentlich
		"(\[f@l\])\[#.\](\[i\]\[t\])" => "$1[#8]$2"; // flieht
		"(\[auf\])\[#.\](\[a\]\[t\])" => "$1[#2]$2"; // aufatmen
		"(\[t\])\[#.\](\[m\])" => "$1[#6]$2"; // idem
		"(\[s\])\[#.\](\[i\]\[ck\])" => "$1[#7]$2"; // herabzusickern
		"(\[tt\])(\[em\])" => "$1[#4-]$2"; // mattem
		"\[ar\](\[#4\]\[k@l3\])" => "[ar^]$1"; // verklagt
		"(\[g\])\[#.\](\[pf(?:@l|@r6)?\])" => "$1[#7]$2"; // gepfändet
		"(\[d\])\[#.\](\[o\]\[pp\])" => "$1[#9]$2"; // Doppelverdientertum
		"(\[ar\])\[#.\](\[d\])" => "[ar^][#3]$2"; // idem
		"(\[p\])(\[-e\])" => "$1[#2-]$2"; // Lampe
		"(\[l\])\[#.\](\[a\]\[m\])" => "$1[#5]$2"; // idem
		"(\[p\])\[#.\](\[&o\])" => "$1[#1]$2"; // poetisch
		"(\[s\])\[#.\](\[a\]\[n\])" => "$1[#5]$2"; // Bezirksanwaltschaft
		"(\[st\])\[#.\](\[b\])" => "$1[#4]$2"; // Selbstbestimmung
		"(\[b\])\[#.\](\[st\])" => "$1[#6]$2"; // idem
		"(\[auf\])\[#.\](\[d\])" => "$1[#2]$2"; // aufdecken
		"(\[n\])\[#.\](\[a\]\[nd\])" => "$1[#5]$2"; // aneinanderreihen
		"(\[d\])\[#.\](\[u\]\[st@r\])" => "$1[#5]$2"; // Industriestadt
		"(\[st@r\])\[#.\](\[&i\])" => "$1[#3]$2"; // idem
		"(\[in\])\[#.\](\[d\])" => "$1[#5]$2"; // idem
		"(\[d\])(\[em\])" => "$1[#4-]$2"; // jedem
		"(\[ch\])\[#.\](\[o\]\[l\])" => "$1[#7]$2"; // psychologischem
		"(\[&i\])\[#.\](\[a\]\[t@r\])" => "$1[#4]$2"; psychiatrische
		"(\[l\])(\[&t\^sch\])" => "$1[#2]$2"; // Kaltschnäuzigkeit
		"(\[st\])(\[em\])" => "$1[#5-]$2"; // bestem
		"(\[s\])(\\\\)(\[st@r\])" => "$1[#4]$2$3"; // Zuchthausstrafe
		"(\[st@r\])\[#.\](\[i\]\[VR10\])" => "$1[#2]$2"; // illustrierte
		"(\[l@l\])\[#.\](\[u\]\[st@r\])" => "$1[#5]$2"; // idem
		"(\[(?:vr|VR10)\])\[#.\](\[durch\])" => "$1[#0]$2"; // hierdurch
		"(\[s=\])\[#.\](\[i\]\[tt\])" => "$1[#7]$2"; // Sitten
		"\[ei\]\[&e\](\\\\)" => "[e][-ei][#5]$1"; // neunzehnhundertdreiundzwanzig (reseparation)
		"(\[tt@l3\])\[#.\](\[&i\])" => "$1[#4]$2"; // Blättli
		"(\[k@l3\])\[#.\](\[a\]\[ff\])" => "$1[#8]$2"; // klafft
		"(\[s\])\[#.\](\[a\]\[l@l\])" => "$1[#6]$2"; // Sprachenmésalliancen
		"(\[&ts\])(\\\\)(\[h\])" => "$1[#4]$2$3"; // Geburtshelfer
		"(\[bei\])\[#.\](\[z\])" => "$1[#4-]$2"; // beizuziehen
		"(\[ar\])\[#.\](\[p\])" => "[ar^][#4]$2"; // Kalkverputz
		"(\[l@r6\])\[#.\](\[au\]\[n\])" => "$1[#6]$2"; // Alraune
		"(\[0n-\])\[#.\](\[a\]\[l@r6\])" => "$1[#5]$2"; // idem
		"(\[m\])\[#.\](\[u\]\[l\])" => "$1[#4]$2"; // kumulieren
		"(\[k\])\[#.\](\[u\]\[m\])" => "$1[#5]$2"; // idem
		"(\[l\])\[#.\](\[i\]\[VR10\])" => "$1[#4]$2"; // idem
		"^\[ch@r\]" => "[welch@r]"; // chronischem 
		"(\[wo\])\[#.\](\[f\])" => "$1[#6]$2"; // wofür
		"\[ar\](\[#.\]\[p@r6\])" => "[ar^]$1"; // verprügelt
		"(\[g\])(\[&tvr\])" => "$1[#2]$2"; // aufgereter
		"(\[g\])(\[em\])" => "$1[#4-]$2"; // traurigem
		"(\[pf\])\[#.\](\[o\]\[vr\])" => "$1[#0]$2"; // Pforten
		"(\[l\])(\\\\)(\[b\])" => "$1[#4]$2$3"; // Rübezahlbart
		"(\[ch\])\[#.\](\[a\]\[&a\])" => "$1[#6]$2"; // Chaos
		"(\[ss\])\[#.\](\[AR\^\])" => "$1[#1]$2"; // missratenes
		"(\[&t\])(\[&o\])" => "$1[#1-]$2"; // Repertoire
		"(\[-e\])(\\\\)(\[z\])" => "$1[#5-]$2$3"; // geradezubiegen
		"(\[z\])(\\\\)(\[b\])" => "$1$2[#2]$3"; // idem
		"(\[0d-\])\[#.\](\[i\]\[d\])" => "$1[#3]$2"; // Idylle
		"(\[d\])\[#.\](\[i\]\[l@l\])" => "[d1][#5]$2"; // idem
		"(\[0n-\])\[#.\](\[a\]\[st\])" => "$1[#5]$2"; // asthmatische
		"(\[l\])(\[&ai@#\/.\])(\[ai\])" => "$1[#5]$2[#5-]$3"; // Laie
		"(\[l\])\[#.\](\[a\]\[tt\])" => "$1[#8]$2"; // Latte
		"(\[st\])\[#.\](\[o\]\[pp\])" => "$1[#8]$2"; // stoppeligen
		"(\[auf\])\[#.\](\[b@l\])" => "$1[#0]$2"; // aufblitzen
		"(\[\^ch@l3\])(\[i\]\[ng\])" => "$1[#6]$2"; // bäuchlings
		"(\[&tvr\])(\[st\])" => "$1[#4]$2"; // hinterste
		"(\[\^z\])\[#.\](\[o\]\[f@r6\])" => "$1[#6]$2"; // schizophren
		"(\[0n-\])\[#.\](\[a\]\[ng\])" => "$1[#4]$2"; // Angina
		"(\[ng\])\[#.\](\[i\]\[n\])" => "$1[#5]$2"; // idem
		"(\[VR10\])\[#.\](\[i\]\[n\])" => "$1[#0]$2"; // Aspirin
		"(\\\\)(\[#.\])\[n\]" => "$1$2[n=]"; // Zeitungsnotiz
		"(\[d\])\[#.\](\[i\]\[ss\])" => "$1[#8]$2"; // Dissoziationen
		"(\[vr\])\[#.\](\[o\]\[k@r\])" => "$1[#1-]$2"; // bürokratisch
		"(\[sch@r\])\[#.\](\[a\]\[k\])" => "$1[#2][sch.][#4]$2"; // erschrak
		"(\[auf\])\[#..?\](\[o\]\[pf\])" => "[auf-][#2]$2"; // Aufopferung
		"(\[&e\])\[#.\](\[k@r\])" => "$1[#1-]$2"; // Polizeikreise
		"(\[pf\])\[#.\](\[u\]\[sch\])" => "$1[#1-]$2"; // verpfuschten
		"(\[vr\])\[#.\](\[in\])" => "$1[#2][in1]"; // worin => hm ... what is better ... [in], [-in] or [in1] ?
		"(\[VR10\])\[#.\](\[i\]\[s\])" => "$1[#0]$2"; // Iris
		"(\[b@r6\])\[#.\](\[u\]\[nn\])" => "$1[#5]$2"; // Brunnentrog
		"(\[d\])\[#.\](\[i\]\[t\])" => "[d1][#8]$2"; // Kredit
		"(\[c\])\[#.\](\[k\])" => "$1[#2][d.][#3]$2"; // Konkurs
		"(\[n=@r6\])\[#.\](\[ar\])" => "$1[#2]$2"; // Unterredung
		"(\[b@r6\])\[#.\](\[o\]\[l@l\])" => "$1[#7]$2"; // abrollte
		"(\[0n-\])\[#.\](\[a\]\[b@r6\])" => "$1[#5]$2"; // idem
		"(\[sch@l3\])\[#.\](\[u\]\[ch\])" => "$1[#2]$2"; // schluchzendes
		"(\[ch\])\[#.\](\[z\])" => "$1[#4]$2"; // idem
		"\[ar\](\[ö\]\[ck\]\[en\])" => "[ar^]$1"; // Gehröcken
		"(\[rück\])\[#.\](\[z\])" => "$1[#1-]$2"; // Rückzug
		"(\[s\])\[#.\](\[o\]\[ck\])" => "$1[#9]$2"; // Männersockens
		"(\[st\])\[#.\](\[o\]\[pf\])" => "$1[#7]$2"; // stopfen
		"(\[&ts\])(\\\\)(\[pf\])" => "$1$2[#4]$3"; // Anstaltspfarrer
		"(\[ck@l3\])\[#.\](\[&i\])" => "$1[#5]$2"; // Päckli
		"(\[n@r6\])\[#.\](\[u\]\[nd\])" => "$1[#6]$2"; // Rasenrunds	
		"(\[&tw\])(\[i\]\[l@l\])" => "$1[#3]$2"; // dessentwillen
		"(\[\^sch@l3\])\[#3\](\[&i\])" => "[^sch_@l3][#0]$2"; // Nachttischli	
		"(\[s\])\[#.\](\[a\]\[pp\])" => "$1[#7]$2"; // Empfansapparat
		"(\[ion\])(\[-e\])" => "$1[#2-]$2"; // Spione
		"(\[sp\])\[#.\](\[ion\])" => "$1[#0]$2"; // idem
		"(\[ar\])\[#.\](\[k@r\])" => "[ar^][#2-]$2"; // verkriechen
		"(\[sch@l3\])\[#2\]\[sch\.\]\[#4\](\[a\]\[mm\])" => "$1[#3]$2"; // Schlamm - important recorrection!
		"(\[z\])\[#.\](\[b@r6\])" => "$1[#5]$2"; // beizubringen
		"(\[0n-\])\[#.\](\[o\]\[x\])" => "$1[#5]$2"; // Oxfordbewegung
		"(\[fort\])\[#2-\](\[w\])" => "$1[#2]$2"; // fortwährend
		"(\[AR\^\])\[#.\](\[sp\])" => "$1[#2]$2"; // verspüren
		"(\[&t\^sch\])(\[a\]\[ff\])" => "$1[#6]$2"; // Rechtschaffenheit
		"(\[0n-\])\[#.\](\[a\]\[b@l\])" => "$1[#5]$2"; // Ablenkungsmanöver
		"(\[f\])\[#.\](\[sch@r\])" => "$1[#2-]$2"; // Laufschritt
		"(\[b\])\[#.\](\[i\])\[d\]" => "$1[#5]$2[d1]"; // angebiedert
		"(\[nn\])\[#.\](\[u\]\[ng\])" => "$1[#2]$2"; // Benennung
		"(\[k@r\])\[#.\](\[au\]\[t\])" => "$1[#8]$2"; // Unkraut
		"(\[&u\])\[#.\](\[k@r\])" => "$1[#1-]$2"; // idem
		"(\[l\])\[#.\](\[u\]\[g\])" => "$1[#4]$2"; // lugte (helv.)
		"(\[durch\])\[#.\](\[sch@l3\])" => "$1[#1-]$2"; // durchschlüpfen
		"(\[&t&e\]\[a\]\[g\])(\\\\)(\[m\])" => "$1$2[#4]$3"; // Montagmorgen
		"(\[&t&e\])(\[i\]\[f\])" => "$1[#3]$2"; // identifizieren
		"(\[b@l\])\[#.\](\[a\]\[d\])" => "$1[#6]$2"; // Nachttischlischublade
		"(\[&o\])\[#.\](\[ar\])" => "$1[#0]$2"; // Büroräume
		"(\[vr\])\[#.\](\[&o\])" => "$1[#1]$2"; // idem
		"(\[&a\])\[#.\](\[AR\^\])" => "$1[#1]$2"; // rosarote
		"(\[t@r\])\[#.\](\[i\]\[ff\])" => "$1[#7]$2"; // trifft
		"(\[s\])\[#.\](\[in\])" => "$1[#4]$2"; // Typhusinfektion
		"(\[f\])\[#.\](\[u\]\[s\])" => "$1[#2]$2"; // idem
		"(\[vor\])\[#.\](\[t@r\])" => "$1[#1]$2"; // hervortreten
		"(\[b@r6\])(\[au\])(\[\^ch@l3\])" => "$1[#4]$2[^ch@l3]"; // Brauchli
		"(\[\^ch@l3\])\[#.\](\[&i\])" => "$1[#5]$2"; // idem
		"(\[\^ch@l3\])(\[i\]\[s\])" => "$1[#5]$2"; // idem
		"(\[g\])\[#.\](\[i\]\[t\])" => "$1[#7]$2"; // legitimiert
		"(\[t\])\[#.\](\[i\]\[m\])" => "$1[#5]$2"; // idem
		"(\[sch@l3\])\[#.\]\[sch\.\]\[#.\](\[u\]\[f\])" => "$1[#6]$2"; // Schlufi
		"(\[sch@l3\])(\[#.\]\[sch\.\])\[#.\](\[i\]\[mm\])" => "$1$2[#2]$3"; // schlimmer
		"(\[j\])\[#.\](\[a\]\[k\])" => "[j^][#5]$2"; // Jakob
		"(\[st\])\[#.\](\[u\]\[d\])" => "$1[#5]$2"; // Studer
		"(\[d\])\[#.\](\[vr\])" => "$1[#5]$2"; // idem
		"(\[n\])\[#.\](\[a\]\[pp\])" => "$1[#6]$2"; // knapp
		"(\[st\])\[#.\](\[a\]\[l@l\])" => "$1[#5]$2"; // wohlbestallter
		"(\[n\])\[#.\](\[t@r\])" => "$1[#4]$2"; // Antrag
		"(\[st\])\[#.\](\[i\]\[k\])" => "$1[#2][d.][#4]$2"; // Kriminalistik
		"(\[k@r\])\[#.\](\[i\]\[m\])" => "$1[#4]$2"; // idem
		"(\[st\])\[#.\](\[au\]\[t\])" => "$1[#6]$2"; // Lastauto
		"(\[sp@l\])\[#.\](\[i\]\[tt\])" => "$1[#7]$2"; // zersplittert
		"(\[pf\])(\[-e\])" => "$1[#4-]$2"; // Kopfe
		"(\[dis\])(\[-e\])" => "$1[#3-]$2"; // diese
		"(\[m\])\[#.\](\[o\]\[l\])" => "$1[#3]$2"; // demolierten
		"(\[st\])\[#.\](\[g@r\])" => "$1[#1-]$2"; // faustgrosses
		"(\[k\])\[#.\](\[i\]\[f\])" => "$1[#6]$2"; // Oberkiefers
		"(\[st\])\[#.\](\[o\]\[ck\])" => "$1[#2][d.][#5]$2"; // Stock
		"(\[\^ch@l3\])(\[&et&e\])" => "$1[#4][sch.][#0]$2"; // Sichlete (if written in shorthand)
		"(\[s=\])(\[i\]\[\^ch@l3\])" => "$1[#4]$2"; // idem
		"(\[s\])\[#.\](\[a\]\[tt\])" => "$1[#7]$2"; // Nasensattel
		"(\[sch@r\])\[#.\](\[o\]\[t\])" => "$1[#2][sch.][#3]$2"; // Schroter
		"(\[&tm\])(\[a\]\[l\])" => "$1[#3]$2"; // achtmal
		"(\[n\])\[#.\](\[st@l3\])" => "$1[#6]$2"; // Künstlerhut
		"(\[t\])\[#.\](\[a\]\[ch\])" => "$1[#5]$2"; // Gutachten
		"(\[g\])\[#.\](\[vr\])" => "$1[#6]$2"; // Pfleger
		"(\[s\])\[#.\](\[pf@l\])" => "$1[#7]$2"; // Abteilungspfleger
		"(\[b\])\[#.\](\[o\]\[d\])" => "$1[#6]$2"; // Boden
		"(\[l@l\])\[#.\](\[a\]\[b@r6\])" => "$1[#6]$2"; // Oberhollbrunn
		"(\[ch\])\[#.\](\[a\]\[b\])" => "$1[#6]$2"; // chabis
		"(\[d\])\[#.\](\[p@l\])" => "[d1][#5]$2"; // Goldplomben
		"(\[z\])\[#.\](\[i\]\[pf\])" => "$1[#6]$2"; // Zipfel
		"(\[z\])\[#.\](\[i\]\[ff\])" => "$1[#6]$2"; // Ziffern
		"(\[st\])\[#.\](\[a\]\[ng\])" => "$1[#4]$2"; // Stangen
		"(\[z\])\[#.\](\[t@r\])" => "$1[#4]$2"; // zutraulich
		"(\[pf\])\[#.\](\[sch\])" => "$1[#1]$2"; // Kopfschütteln
		"(\[g@r\])\[#.\](\[u\]\[pp\])" => "$1[#7]$2"; // Gruppe
		"(\[ar\])\[#.\](\[a\]\[d\])" => "$1[#5]$2"; // Rad
		"(\[t@r\])\[#.\](\[a\]\[l\])" => "$1[#6]$2"; // neutral
		"(\[&u\])(\[i\])\[inter\]" => "$1[#3-]$2[_inter]"; // uninteressant
		"(\[durch\])\[#.\](\[m\])" => "$1[#0]$2"; // durchmass
		"(\[sch\])\[#.\]\[sch\.\]\[#.\](\[a\]\[b\])" => "$1[#5]$2"; // Schabernack
		"(\[b\])\[#.\](\[u\]\[sch\])" => "$1[#2]$2"; // buschigen
		"(\[sch\])\[#.\](\[i\]\[g\])" => "$1[#2][sch.][#2]$2"; // idem
		"(\[sch\])\[#.\](\[u\]\[vr\])" => "$1[#1]$2"; // Schurz
		"(\[sch\])\[#.\](\[sch\.\])\[#.\](\[i\]\[mm\])" => "$1[#2]$2[#2]]$3"; // Schimmer
		"(\[&a\])\[#.\](\[sch\])" => "$1[#1]$2"; // Aschtalt (dialect)
		"(\[0n-\])\[#.\](\[a\]\[&a\])" => "$1[#5]$2"; // idem
		"(\[\^sch\])\[#.\](\[ch\])" => "$1[#0]$2"; // Tischchen
		"(\[t\])\[#.\](\[i\]\[\^sch\])" => "$1[#5]$2"; // idem
		"(\[nd\])\[#.\](\[g@r\])" => "$1[#0]$2"; // Handgranate
		"(\[l\])\[#.\](\[i\]\[\^z\])" => "$1[#6]$2"; // litzte (helv.)
		"(\[werd\])(\[-e\])" => "$1[#3-]$2"; // werde
		"(\[&tion\])(\[i\]\[VR10\])" => "$1[#2]$2"; // funktionieren
		"(\[f\])\[#.\](\[u\]\[nk\])" => "$1[#2]$2"; // idem
		"(\[st\])\[#.\](\[u\]\[ng\])" => "$1[#4]$2"; // Fensterbrüstung
		"(\[l\])\[#.\](\[m\])" => "$1[#5]$2"; // Ziegelmauern
		"(\[\^ch\])\[#.\](\[w\])" => "$1[#7]$2"; // gleichwohl
		"(\[ng\])\[#.\](\[k@r\])" => "$1[#4][d.][#2-]$2"; // Jungkrähe
		"(\[st\])\[#.\](\[i\]\[nn\])" => "$1[#5]$2"; // Journalistinnen
		"(\[d\])\[#.\](\[i\]\[ff\])" => "$1[#7]$2"; // differenziert
		"(\[durch\])\[#.\](\[b@l\])" => "$1[#0]$2"; // durchblicken
		"(\[pf@l\])\[#.\](\[i\]\[\^ch\])" => "$1[#2][sch.][#2]$2"; // Pflicht
		"(\[ch\])\[#.\](\[l\])" => "$1[#5]$2"; // nachlassenden
		"(\[st@r\])\[#.\](\[i\]\[k\])" => "$1[#1][sch.][#4]$2"; // strikt
		"(\[sp\])\[#.\](\[o\]\[vr\])" => "$1[#2]$2"; // Sport
		"(\[s=\])\[#.\](\[a\]\[ND1\])" => "$1[#4]$2"; // Sandkörner
		"(\[ND1\])\[#.\](\[k\])" => "$1[#3][d.][#3]$2"; // idem
		"(\[ar\])\[#.\](\[pf\])" => "$1[#5]$2"; // verpfuscht
		"(\[c@r\])\[#.\](\[o\]\[q\])" => "$1[#6]$2"; // Croquet
		"(\[l\])\[#.\](\[o\]\[f\])" => "$1[#6]$2"; // Xylophon
		"(\[vr\+ar\])\[#.\](\[o\]\[vr\])" => "$1[#0]$2"; // Hörrohr (like Meerrohrröhrchen:)
		"(\[k@l3\])\[#.\](\[i\]\[m\])" => "$1[#5]$2"; // klimpern
		"(\[vr\])\[#.\](\[i\]\[s\])" => "$1[#0]$2"; // Paris
		"(\[\^z\])\[#.\](\[i\]\[st\])" => "$1[#6]$2"; // Polizisten
		"(\[ch\])(\[&tz\])" => "$1[#4][i][d.][#4-][o]$2"; // achtzig
		"(\[&tz\])(\[i\]\[g\])" => "$1[#6]$2"; // idem
		"(\[nd\])\[#.\](\[&o\])" => "$1[#2]$2"; // Kommando (old #n spacing)
		"(\[\^sch\])(\[en\])" => "$1[#4-]$2"; // zwischen		
		"(\[ch\])\[#.\](\[o\]\[p\])" => "$1[#8]$2"; // Psychopathie
		"(\[l@l\])\[#.\](\[f@r6\])" => "$1[#6]$2"; // zollfrei
		"(\[g\])\[#.\](\[g@r\])" => "$1[#0]$2"; // nachgegrübelt
		"(\[ch\])\[#.\](\[g\])" => "$1[#4]$2"; // idem
		"(\[(?:b@l|B@L)\])\[#.\](\[a\]\[tt\])" => "$1[#9]$2"; // Blatt
		"(\[h\])\[#.\](\[a\]\[f\])" => "$1[#6]$2"; // verhaftet
		"(\[fort\])\[#.\](\[g\])" => "$1[#2]$2"; // fortging
		"(\[st\])\[#.\](\[o\]\[ff\])" => "$1[#7]$2"; // Stoffe
		"(\[t\])\[#.\](\[au\]\[g\])" => "$1[#5]$2"; // taugte
		"(\[l@l\])\[#.\](\[&i\])" => "$1[#4]$2"; // Brilliantine
		"(\[&u\])\[#.\](\[z\])" => "$1[#1]$2"; // unzusammenhängend
		"(\[b@r6\])\[#.\](\[i\]\[g\])" => "$1[#4]$2"; // übrigens
		"(\[0n-\])\[#.\](\[a\]\[tt\])" => "$1[#7]$2"; // Attacke
		"(\[tt\])\[#.\](\[a\]\[ck\])" => "$1[#6]$2"; // idem
		"(\[l\])\[#.\](\[au\]\[t\])" => "$1[#7]$2"; // lautete
		"(\[t\])\[#.\](\[au\]\[\^ch\])" => "$1[#4]$2"; // tauchte
		"(\[schm\])\[#.\](\[a\]\[l\])" => "$1[#5]$2"; // schmal
		"(\[t\])\[#.\](\[a\]\[l@l\])" => "$1[#6]$2"; // metallenen
		"(\[l\])\[#.\](\[o\]\[ch\])" => "$1[#4]$2"; // Loch
		"(\[p\])\[#.\](\[o\]\[sch\])" => "$1[#0]$2"; // poschte (schweizerisch)
		"(\[\^sch\])\[#.\](\[k\])" => "$1[#3]$2"; // dischkuriert
		"(\[pf\])\[#.\](\[h\])" => "$1[#3]$2"; // Kopfhaut
		"(\[tt@r\])\[#.\](\[a\]\[nd\])" => "$1[#6]$2"; // Bettrand
		"(\[-AUS\])\[#.\](\[ar\])" => "$1[#1]$2"; // herausragten
		"(\[k@r\])\[#.\](\[i\]\[g\])" => "$1[#4]$2"; // Kriegstanz
		"(\[s\])\[#.\](\[f\])" => "$1[#7]$2"; // Todesfälle
		"(\[p@r6\])\[#.\](\[o\]\[b\])" => "$1[#5]$2"; // ausprobieren
		"(\[st@r\])\[#.\](\[i\]\[tt\])" => "$1[#1][sch.][#5]$2"; // gestritten
		"(\[g\])\[#.\](\[q\])" => "$1[#7]$2"; // gequetscht
		"(\[n\])\[#.\](\[d@r\])" => "$1[#2]$2"; // eindringliches
		"(\[ng\])\[#.\](\[h\])" => "$1[#3]$2"; // idem
		"(\[ch\])\[#.\](\[i\]\[t\])" => "$1[#6]$2"; // Bronchitis
		"(\[t\])\[#.\](\[i\]\[s\])" => "$1[#4]$2"; // idem
		"(\[t\])\[#.\](\[a\]\[ss\])" => "$1[#5]$2"; // Tasse
		"(\[g\])\[#.\](\[a\]\[ff\])" => "$1[#7]$2"; // Gaffee (Kaffee)
		"(\[VR10\])\[#.\](\[[Ii]\]\[VR10\])" => "$1[#1-]$2"; // inspirierte
		"(\[in\])\[#.\](\[sp\])" => "$1[#4]$2"; // idem
		"(\[n\])\[#.\](\[o\]\[l\])" => "$1[#2]$2"; // Kriminologie
		"(\[g\])\[#.\](\[hab\])" => "$1[#5]$2"; // Gehaben
		"(\[hab\])(\[en\])" => "$1[#2-]$2"; // idem
		"(\[b\])(\[em\])" => "$1[#6-]$2"; // halbem
		"(\[j\])\[#.\](\[u\]\[z\])" => "$1[#2]$2"; // Jutzeler
		"(\[z\])\[#.\](\[t\])" => "$1[#7]$2"; // z.T.
		"(\[s=\])\[#.\](\[i\]\[g@r\])" => "$1[#2-]$2"; // siegreich
		"(\[schw\])\[#.\](\[u\]\[nd\])" => "$1[#5]$2"; // verschwunden
		"(\[\^z\])\[#.\](\[f@r6\])" => "$1[#7]$2"; // Kreuzfragen
		"(\[&u\])\[#.\](\[g@r\])" => "$1[#2-]$2"; // Übergriffe
		"(\[f\])(\[&ai@#\/\.\])(\[ai\]\[vr\])" => "$1[#5]$2[#5-]$3"; // faire
		"(\[auf\])\[#.\](\[d@r\])" => "$1[#3-]$2"; // aufdringlich
		"(\[ck\])\[#.\](\[g@r\])" => "$1[#1]$2"; // sackgrob
		"(\[l@l\])(\[em\])" => "$1[#6-]$2"; // hellem
		"(\[b@r6\])\[#.\](\[au\]\[st\])" => "$1[#7]$2"; // brauste
		"(\[mm\])(\[em\])" => "$1[#7-]$2"; // frommem
		"(\[schw\])\[#.\](\[a\]\[nd\])" => "$1[#5]$2"; // verschwand
		"(\[f\])\[#.\](\[a\]\[c\])" => "$1[#6]$2"; // Facettenaugen
		"(\[h\])(\[em\])" => "$1[#5-]$2"; // selbstverständlichem
		"(\[k\])\[#.\](\[i\]\[s\])" => "$1[#4]$2"; // Kies
		"(\[ar\])\[#.\](\[o\]\[b\])" => "$1[#5]$2"; // robust
		"(\[sch\])\[#.\](\[o\]\[k\])" => "$1[#2][sch.][#2]$2"; // Schokolade
		"(\[fort\])\[#.\](\[z\])" => "$1[#1]$2"; // fortzulaufen
		"(\[d\])\[#.\](\[schaft\])" => "$1[#6]$2"; // Kameradschaft
		"(\[vr\])\[#.\](\[a\]\[t\])" => "$1[#6]$2"; // Referat
		"(\[k\])\[#.\](\[u\]\[sch\])" => "$1[#5]$2"; // kuschten
		"(\[p@r6\])\[#.\](\[o\]\[l\])" => "$1[#6]$2"; // Prolet
		"(\[&t&e\])(\[i\]\[st\])" => "$1[#4]$2"; // Anabaptist
		"(\[t\])\[#.\](\[p@r6\])" => "$1[#8]$2"; // Blutproben
		"(\[b@l\])\[#.\](\[u\]\[t\])" => "$1[#7]$2"; // idem
		"(\[k@l3\])\[#.\](\[i\]\[rr\])" => "$1[#6]$2"; // klirrte
		"(\[ck\])\[#.\](\[a\]\[vr\])" => "$1[#7]$2"; // Makkaroni
		"(\[j\])\[#.\](\[a\]\[t\])" => "$1[#2][sch.][#6]$2"; // bejaht
		"(\[st\])\[#.\](\[i\]\[t\])" => "$1[#7]$2"; // prostituiert
		"(\[&e\])\[#.\](\[vr\])" => "$1[#3]$2"; // lauert
		"(\[l\])\[#.\](\[au\]\[&e\])" => "$1[#5]$2"; // idem
		"(\[d\])\[#.\](\[i\]\[c\])" => "$1[#7]$2"; // Bénédictine
		"(\[z\])\[#.\](\[l\])" => "$1[#5]$2"; // nutzlos
		"(\[z\])\[#.\](\[o\]\[b\])" => "$1[#5]$2"; // zuoberst
		"(\[rück\])\[#.\](\[w\])" => "$1[#1]$2"; // Rückweg
		"(\[n\])\[#..?\](\[auf\])" => "$1[#0]$2"; // hinauf
		"(\[ch\])\[#.\](\[b@l\])" => "$1[#6]$2"; // nachblickte
		"(\[f\])\[#.\](\[a\]\[d\])" => "$1[#6]$2"; // Fadenende
		"(\[m\])\[#.\](\[i\]\[g@r\])" => "$1[#2-]$2"; // Migräne
		"(\[s\])(\[em\])" => "$1[#4-]$2"; // zahnlosem
		"(\[0n-\])\[#.\](\[i\]\[\^sch\])" => "$1[#3]$2"; // ischt
		"(\[m\])\[#.\](\[sch\])" => "$1[#1]$2"; // mitschuldig
		"(\[m\])\[#.\](\[t@r\])" => "$1[#3]$2"; // Umtriebe
		"(\[sch\])\[#.\](\[o\]\[vr\])" => "$1[#0]$2"; // Schornstein
		"(\[g\])\[#.\](\[i\]\[rr\])" => "$1[#6]$2"; // geirrt
		"(\[t\])\[#.\](\[o\]\[t\])" => "$1[#7]$2"; // Totsch
		"(\[t\])\[#.\](\[sch\])" => "$1[#3]$2"; // idem
		"(\[0n-\])\[#.\](\[i\]\[\^ch\])" => "$1[#3]$2"; // ich's
		"(\[sch\])\[#.\](\[k\])" => "$1[#2][sch.][#4]$2"; // Glückwunschkarte
		"(\[ant\])\[#.\](\[f@l\])" => "$1[#0]$2"; // entflohen
		"(\[b@r6\])\[#.\](\[o\]\[w\])" => "$1[#7]$2"; // Browning-Pistole
		"(\[w\])\[#.\](\[n\])" => "$1[#2]$2"; // idem
		"(\[m\])\[#.\](\[u\]\[sch\])" => "$1[#0]$2"; // Muschel
		"(\[nd\])\[#.\](\[j\])" => "$1[#4]$2"; // Landjäger
		"(\[f@r6\])\[#.\](\[o\]\[ck\])" => "$1[#7]$2"; // Schlafrockes
		"(\[sch@l3\])\[#.\](\[a\]\[f@r6\])" => "$1[#5]$2"; // idem
		"(\[f@r6\])\[#.\](\[&o\])" => "$1[#4]$2"; //  Frou
		"(\[t\])\[#.\](\[o\]\[l\])" => "$1[#6]$2"; // katholischer
		"(\[\^sch\])\[#.\](\[vr\])" => "$1[#2]$2"; // idem
		"(\[bei\])\[#.\](\[b@r6\])" => "$1[#1]$2"; // beibringen
		"(\[st\])\[#.\](\[o\]\[tt\])" => "$1[#7]$2"; // stotternd
		"(\[d\])\[#.\](\[a\]\[ch@r\])" => "$1[#1]$2"; // Dachraum
		"(\[AR\^\])\[#.\](\[i\]\[ss\])" => "$1[#0]$2"; // riss
		"(\[&e\])\[#.\](\[i\]\[\^sch\])" => "$1[#1]$2"; // misstrauisch
		"(\[&eitvr\])(\[-e\])" => "$1[#4-]$2"; // weitere
		"(\[\^z\])\[#.\](\[z\])" => "$1[#1]$2"; // Nizza
		"(\[z\])\[#.\](\[a\]\[&a\])" => "$1[#5]$2"; // idem
		"(\[h\])\[#.\](\[n\])" => "$1[#1]$2"; // sehn, gehn, gesehn

		//"(\[&t\])" => "[&T][T]"; // Weltteil - add spacing between separated words
		// Anhaltspunkt
		"(\[&t(?:&e|e?s)?\])(.)(\[[tp]\])" => "$1$2[#7]$3"; // impossible to place \\ inside regex condition !?!?!? (bug?!) => use (.) instead
		
		// special rule: shorten distance -en/es
		"\](\[e\])(\[[ns]\])" => "][#2-]$1$2"; // Warenbehälter, Heereskommandant
		"\[#2-\]\[#2-\](\[e\]\[n\])" => "[#3-]$1"; // make -en- a bit larger
		"(\[s\])\[#..?\](\[e\]\[n\])" => "$1[#1-]$2"; // idem
		"(\[nicht\])(\[b\])" => "$1[#4]$2"; // Nichtbesitz
		"(\[AR\^\])\[#.\](\[i\]\[\^ch\])" => "$1[#1]$2"; // rieche
		"(\[d\])\[#.\](\[i\]\[b\])" => "[d1][#5]$2"; // Ladendiebin
		"(\[s\])\[#.\](\[s\])" => "$1[#4]$2"; // Gefühlssache
		"(\[f\])\[#.\](\[b\])" => "$1[#5]$2"; // Bahnhofbuffet
		"(\[durch\])\[#.\](\[k@r\])" => "$1[#3-]$2"; // durchkreuzt
		"(\[ant\])\[#.\](\[k\])" => "$1[#0]$2"; // entkam
		"(\[s\])\[#.\](\[u\]\[m\])" => "$1[#5]$2"; // ringsum
		"(\[d\])\[#.\](\[a\]\[mpf\])" => "$1[#6]$2"; // Dampf
		"(\[w\])\[#.\](\[i\]\[ns\])" => "$1[#2][sch.][#1-]$2"; // Gewinsel
		"(\[j\])\[#.\](\[a\]\[mm\])" => "$1[#5]$2"; // bejammerten
		"(\[VR10\])\[#.\](\[i\]\[g\])" => "$1[#1]$2"; // ihrigen
		"(\[z\])(\[&t\])" => "$1[#3]$2"; // eingestürzt
		"(\[all\])(\[en\])" => "$1[#3-]$2"; // allen
		"(\[vr\])\[#.\](\[d@r\])" => "$1[#2]$2"; // erdrückt
		"(\[-aus\])(\[f\])" => "$1[#4]$2"; // vorausfahren
		"(\[vor\])\[#.\](\[-aus\])" => "$1[#1-]$2"; // idem
		"(\[vr\])\[#..?\](\[em\])" => "$1[#9-][#3-]$2"; // unserem
		"(\[rr\])(\[en\])" => "$1[#4-]$2"; // Herren
		"(\[rr\])(\[em\])" => "$1[#9-]$2"; // dürrem
		"(\[durch\])\[#.\](\[sch\])" => "$1[#2-]$2"; // durchscheinenden
		"(\[f\])\[#.\](\[u\]\[ng\])" => "$1[#3]$2"; // Prüfung
		"(\[nn\])\[#.\](\[v\])" => "$1[#1]$2"; // sinnvoll
		"(\[m\])\[#.\](\[i\]\[k@r\])" => "$1[#0]$2"; // mikroskopieren
		"(\[m\])\[#.\](\[sch@r\])" => "$1[#4-]$2"; // umschreiben
		"(\[pf@l\])\[#.\](\[au\]\[m\])" => "$1[#5]$2"; // Pflaumenkuchen
		"\[ar\](\[e\]\[ck\])" => "[ar^]$1"; // reckte
		"(\[\^ch\])\[#.\](\[sch@r\])" => "$1[#1]$2"; // Gleichschritt
		"(\[&u\])\[#.\](\[t@r\])" => "$1[#3]$2"; // übertragen
		"(\[ist\])(\[s\])" => "$1[#1-]$2"; // ists
		"(\[ant\])\[#.\](\[b\])" => "$1[#0]$2"; // entbehrt
		"(\[sch\])\[#.\](\[&i\])" => "$1[#1]$2"; // Meitschi
		"(\[ns\])\[#.\](\[g@r\])" => "$1[#0]$2"; // Herzensgrund
		"(\[0n\-\])\[#.\](\[a\]\[d\])" => "$1[#5]$2"; // Adernverkalkung
		"(\[d\])\[#.\](\[vr\])" => "$1[#6]$2"; // idem
		"(\[n@r6\])\[#.\](\[st\])" => "$1[#6]$2"; // hinunterstürzen
		"(\[l\])\[#.\](\[o\]\[st\])" => "$1[#6]$2"; // verwahrloste
		"(\[w\])\[#.\](\[a\]\[vr@l\])" => "$1[#4]$2"; // idem
		"(\[t@r\])\[#.\](\[u\]\[b\])" => "$1[#6]$2"; // Weihnachtstrubel
		"(\[&i\])\[#.\](\[o\]\[g@r\])" => "$1[#0]$2"; // Biografie
		"(\[f\])\[#.\](\[g@r\])" => "$1[#0]$2"; // tiefgreifenden
		"(\[d\])\[#.\](\[o\]\[y\])" => "$1[#6]$2"; // Plädoyer
		"(\[m\])\[#.\](\[a\]\[k@r\])" => "$1[#0]$2"; // Makrokosmos
		"(\[all\])(\[f\])" => "$1[#3]$2"; // allfällige
		"(\[t\])\[#.\](\[a\]\[x\])" => "$1[#6]$2"; // taxe
		"(\[s\])\[#.\](\[a\]\[d\])" => "$1[#7]$2"; // l'embassade
		"(\[t\])\[#.\](\[n\])" => "$1[#4]$2"; // centenaire
		"(\[d\])\[#.\](\[m\])" => "$1[#5]$2"; // redemande
		"(\[0u\-\])(\[\-e\])" => "$1[#4-]$2"; // il
		"(\[0n\-\])(\[\-e\])" => "$1[#2-]$2"; // est
		"(\[w\])(\[\-e\])" => "$1[#4-]$2"; // enlevé
		"(\[m\])\[#..\](\[\-e\])" => "$1[#3-]$2"; // mais
		"(\[c\])\[#.\](\[a\]\[vr\])" => "$1[#2]$2"; // scarabé
		"(\[b\])\[#.\](\[a\]\[c\])" => "$1[#6]$2"; // basque
		"(\[vr\])\[#.\](\[nn\])" => "$1[#1]$2"; // épargne
		"(\[g\])\[#.\](\[a\]\[h\])" => "$1[#5]$2"; // gaillard
		"(\[k\])\[#.\](\[a\]\[h\])" => "$1[#5]$2"; // cahier
		"(\[ng\])\[#.\](\[n\])" => "$1[#2]$2"; // Genève
		"(\[ng\])\[#.\](\[a\]\[k\])" => "$1[#3][d.][#3]$2"; // jaquette
		"(\[ng\])\[#.\](\[a\]\[t\])" => "$1[#3][d.][#3]$2"; // j'attends
		"(\[sch\])\[#.\](\[a\]\[k\])" => "$1[#1][sch.][#3]$2"; // chaque
		"(\[k\])\[#.\](\[a\]\[sch\])" => "$1[#5]$2"; // caché
		"(\[f\])\[#.\](\[a\]\[sch\])" => "$1[#2]$2"; // fâcha
		"(\[b\])\[#.\](\[o\]\[c\])" => "$1[#5]$2"; // bosquet
		"(\[c\])(\[\-e\])" => "$1[#2-]$2"; // idem
		"(\[m\])\[#.\](\[o\]\[k\])" => "$1[#4]$2"; // moquer
		"(\[m\])\[#.\](\[o\]\[w\])" => "$1[#3]$2"; // mauve
		"(\[x\])(\[\-e\])" => "$1[#2-]$2"; // boxer
		"(\[b\])\[#.\](\[o\]\[x\])" => "$1[#4]$2"; // idem
		"(\[t\])\[#.\](\[o\]\[f\])" => "$1[#6]$2"; // étoffe
		"(\[m\])\[#.\](\[a\]\[ng\])" => "$1[#2]$2"; // dommage
		"(\[k\])\[#.\](\[o\]\[m\])" => "$1[#5]$2"; // commerce
		"(\[nn\])\[#.\](\[a\]\[vr\])" => "$1[#2]$2"; // montagnard
		"(\[f\])\[#.\](\[u\]\[l\])" => "$1[#4]$2"; // foule
		"(\[m\])\[#.\](\[u\]\[h\])" => "$1[#3]$2"; // mouillé
		"(\[n\=\])\[#.\](\[u\]\[w\])" => "$1[#3]$2"; // nouvelle
		"(\[0n\-\])\[#.\](\[u\]\[w\])" => "$1[#5]$2"; // ouvert
		"(\[t\])\[#.\](\[u\]\[f\])" => "$1[#6]$2"; // étouffer
		"(\[ar\])\[#.\](\[o\]\[sch\])" => "$1[#2]$2"; // rocher
		"(\[g\])\[#.\](\[o\]\[sch\])" => "$1[#4]$2"; // gauche
		"(\[d\])\[#.\](\[u\]\[sch\])" => "$1[#4]$2"; // douche
		"(\[k\])\[#.\](\[o\]\[sch\])" => "$1[#4]$2"; // cocher
		"(\[l\])\[#.\](\[u\]\[sch\])" => "$1[#2]$2"; // louche
		"(\[vr\])\[#.\](\[on\])" => "$1[#1-][_on]"; // courons
		"(\[VR10\])\[#.\](\[on\])" => "$1[#1-][_on]"; // atterrirons
		"(\[p\])\[#.\](\[u\]\[vr\])" => "$1[#1]$2"; // pourrir
		"(\[d\])(\[\-i\])" => "$1[#1]$2"; // répondit
		"(\[t\])(\[\-i\])" => "$1[#2]$2"; // ralenti
		"(\[w\])(\[\-i\])" => "$1[#3-]$2"; // vie
		"(\[t\])\[#.\](\[au\]\[VR10\])" => "$1[#5]$2"; // courbatures
		"(\[k\])\[#.\](\[i\]\[p\])" => "$1[#7]$2"; // l'équipage
		"(\[p\])\[#.\](\[a\]\[ng\])" => "$1[#2]$2"; // idem
		"(\[t\])\[#.\](\[i\]\[&e\])" => "$1[#5]$2"; // amitié
		"(\[m\])\[#.\](\[i\]\[t\])" => "$1[#5]$2"; // idem
		"(\[t\])\[#.\](\[mpf\])" => "$1[#6]$2"; // lentement
		"(\[f\])\[#.\](\[a\]\[b\])" => "$1[#5]$2"; // fabuleux
		"(\[m\])(\[\-i\])" => "$1[#2-]$2"; // parmi
		"(\[k\])\[#.\](\[au\]\[n\])" => "$1[#5]$2"; // qu'une
		"(\[l\])\[#.\](\[au\]\[m\])" => "$1[#5]$2"; // lumières
		"(\[&e\])(\[\-i\])" => "$1[#3-]$2"; // puis
		"(\[f\])\[#.\](\[au\]\[m\])" => "$1[#5]$2"; // fumait
		"(\[n=\])\[#.\](\[au\]\[&e\])" => "$1[#2]$2"; // nuit
		"(\[k@l3\])\[#.\](\[i\]\[nn\])" => "$1[#6]$2"; // clignait
		"(\[s\])\[#.\](\[i\]\[ss\])" => "$1[#5]$2"; // position
		"(\[d\])\[#.\](\[&t\])" => "$1[#3]$2"; // tendu
		"(\[d\])\[#.\](\[a\]\[p\])" => "$1[#7]$2"; // d'appel
		"(\[f\])\[#.\](\[a\]\[&u\])" => "$1[#4]$2"; // enfoui
		"(\[&u\])(\[\-i\])" => "$1[#2-]$2"; // idem
		"(\[d\])\[#.\](\[i\])" => "$1[#6]$2"; // radium
		"(\[&e\])\[#.\](\[o\]\[m\])" => "$1[#0]$2"; // idem
		"(\[g\])\[#.\](\[au\]\[&e\])" => "$1[#5]$2"; // aiguilles
		"(\[&e\])\[#.\](\[i\]\[h\])" => "$1[#2]$2"; // idem 
		"(\[&e\])\[#.\](\[i\]\[VR10\])" => "$1[#0]$2"; // luir
		"(\[s=\])\[#.\](\[i\]\[&e\])" => "$1[#2]$2"; // ciel
		"(\[w\])\[#.\](\[&o\])" => "$1[#1]$2"; // chevaux
		"(\[t@r\])\[#.\](\[a\]\[w\])" => "$1[#6]$2"; // travail
		"(\[w\])\[#.\](\[a\]\[h\])" => "$1[#2]$2"; // idem
		"(\[d\])\[#.\](\[au\]\[n\])" => "$1[#5]$2"; // d'une
		"(\[&e\])\[#.\](\[i\]\[s\])" => "$1[#0]$2"; // ruisselait
		"(\[t\])\[#.\](\[i\]\[&e\])" => "$1[#6]$2"; // matière
		"(\[b\])\[#.\](\[a\]\[l\])" => "$1[#5]$2"; // balle
		"(\[ar\])\[#.\](\[u\]\[l\])" => "$1[#5]$2"; // rouler
		"(\[k\])\[#.\](\[a\])" => "$1[#6]$2"; // quarante
		"(\[0n\-\])\[#.\](\[a\]\[pp\])" => "$1[#6]$2"; // apte
		"(\[n=\])\[#.\](\[a\]\[ff\])" => "$1[#4]$2"; // naphte
		"(\[0n\-\])\[#.\](\[a\]\[lt\])" => "$1[#4]$2"; // halte
		"(\[t\])\[#.\](\[a\]\[ff\])" => "$1[#7]$2"; // taffetas
		"(\[s=\])\[#.\](\[a\]\[lt\])" => "$1[#4]$2"; // saleté
		"(\[st\])\[#.\](\[a\]\[sch\])" => "$1[#2]$2"; // moustache
		"(\[k\])\[#.\](\[o\]\[lt\])" => "$1[#5]$2"; // récolte
		"(\[m\])\[#.\](\[o\]\[rr\])" => "$1[#3]$2"; // morte
		"(\[rr\])\[#.\](\[o\]\[d\])" => "$1[#2]$2"; // orthodoxe
		"(\[m\])\[#.\](\[t\])" => "$1[#4]$2"; // fermeté
		"(\[0n\-\])\[#.\](\[au\]\[\^sch\])" => "$1[#4]$2"; // huche
		"(\[eu\])(\[sch\])" => "$1[^sch]"; // Neuchâtel (rewriter)
		"(\[\^sch\])\[#.\](\[sch\.\])\[#.\](\[a\]\[t\])" => "$1[#2-]$2[#7]$3"; // idem, recorrection
		"(\[g\])\[#.\](\[i\]\[d\])" => "$1[#6]$2"; // guide
		"(\[nn\])\[#.\](\[o\]\[vr\])" => "$1[#1]$2"; // ignorance
		"(\[sch\])\[#.\](\[i\]\[m\])" => "$1[#5]$2"; // chimique
		"(\[ck\])\[#.\](\[i\]\[f\])" => "$1[#6]$2"; // fictif
		"(\[s=\])\[#.\](\[f\])" => "$1[#5]$2"; // sphynx
		"(\[d\])\[#.\](\[au\]\[VR10\])" => "$1[#5]$2"; // dur
		"(\[d\])\[#.\](\[au\]\[rr\])" => "$1[#6]$2"; //  dureté 
		"(\[l\])\[#.\](\[au\]\[x\])" => "$1[#6]$2"; // luxe
		"(\[AR\^\])\[#.\](\[au\]\[s\])" => "$1[#0]$2"; // ruse
		"(\[xt\])\[#.\](\[au\]\[VR10\])" => "$1[#2]$2"; // mixture
		"(\[st\])\[#.\](\[au\]\[p\])" => "$1[#7]$2"; // stupid
		"(\[k\])\[#.\](\[au\]\[VR10\])" => "$1[#5]$2"; // succursale
		"(\[t\])\[#.\](\[au\]\[d\])" => "$1[#7]$2"; // multitude
		"(\[k\])\[#.\](\[au\]\[s\])" => "$1[#5]$2"; // accusé
		"(\[b\])\[#.\](\[c\])" => "$1[#5]$2"; // obscur
		"(\[c\])\[#.\](\[au\]\[VR10\])" => "$1[#4]$2"; // idem
		"(\[t\])\[#.\](\[i\]\[l\])" => "$1[#5]$2"; // utile
		"(\[AR\^\])\[#.\](\[i\]\[g\])" => "$1[#0]$2"; // rigoureuse
		"(\[\^sch\])\[#.\](\[a\]\[vr\])" => "$1[#2]$2"; // Richard
		"(\[n\])(\[-i\])" => "$1[#3-]$2"; // finit
		"(\[t\])(\[&t\])" => "$1[#1]$2"; // tu
		"(\[ar\])(\[&t\])" => "[ar^][#3-]$2"; // rue
		"(\[c\])\[#.\](\[u\]\[vr\])" => "$1[#1]$2"; // secouru
		"(\[ck\])\[#.\](\[i\]\[w\])" => "$1[#6]$2"; // activité
		"(\[s\])\[#.\](\[i\]\[w\])" => "$1[#6]$2"; // oisiveté
		"(\[w\])\[#.\](\[t\])" => "$1[#4]$2"; // idem
		"(\[ng\])\[#.\](\[au\]\[l\])" => "$1[#5]$2"; // Jules
		"(\[l\])\[#.\](\[o\]\[b\])" => "$1[#6]$2"; // l'oscurité
		"(\[f\])\[#.\](\[a\]\[h\])" => "$1[#4]$2"; // failli
		"(\[rr\])(\[-i\])" => "$1[#5-]$2"; // sorti
		"(\[@l\])(\[a\]\[w\])" => "$1[#3]$2"; // slave
		"(\[l\])\[#.\](\[a\]\[b@r6\])" => "$1[#6]$2"; // l'abri
		"(\[0n\-\])\[#.\](\[u\]\[w@r6\])" => "$1[#5]$2"; // ouvrage
		"(\[w@r6\])\[#.\](\[a\]\[ng\])" => "$1[#3]$2"; // idem
		"(\[st@r\])\[#.\](\[au\]\[ck\])" => "$1[#1][sch.][#4]$2"; // structure
		"(\[rr\])\[#.\](\[o\]\[g@r\])" => "$1[#3-]$2"; // orthographe
		"(\[d\])\[#.\](\[i\]\[c@r\])" => "$1[#3]$2"; // indiscret
		"(\[d\])\[#.\](\[i\]\[d\])" => "$1[#7]$2"; // splendide
		"(\[k@l3\])\[#.\](\[i\]\[n\])" => "$1[#5]$2"; // clinique
		"(\[w\])\[#.\](\[a\]\[ng\])" => "$1[#2]$2"; // esclavage
		"(\[vr@l\])\[#.\](\[o\]\[t)" => "$1[#5]$2"; // Charlotte
		"(\[h\])\[#.\](\[a\]\[b@l\])" => "$1[#6]$2"; // effroyable
		"(\[AR\^\])\[#.\](\[i\]\[c@r\])" => "$1[#2-]$2"; // risquerait
		"\[ar\](\[#4\]\[a\]\[p@l\])" => "[ar^]$1"; // rappelait (rewriter)
		"(\[0n\-\])\[#.\](\[a\]\[t@l3\])" => "$1[#6]$2"; // attelage
		"(\[g@l3\])\[#.\](\[t\])" => "$1[#7]$2"; // Angleterre
		"(\[k\])\[#.\](\[au\]\[p@r6\])" => "$1[#7]$2"; // t'occuperas
		"(\[d\])\[#.\](\[a\]\[pp@r6\])" => "$1[#7]$2"; // adaptera
		"(\[t@r\])\[#.\](\[u\]\[w@r6\])" => "$1[#5]$2"; // trouveras
		"(\[g\])\[#.\](\[i\]\[d@r\])" => "$1[#2]$2"; // guidera
		"(\[d\])\[#.\](\[i\]\[ck@r\])" => "$1[#4][d.][#1]$2"; // dicterais
		"(\[t\])\[#.\](\[a\]\[k@r\])" => "$1[#2]$2"; // attaquerais
		"(\[s\])\[#.\](\[i\]\[st@r\])" => "$1[#2]$2"; // assistera
		"(\[t\])\[#.\](\[a\]\[w\])" => "$1[#6]$2"; // t'avisera
		"(\[w@l\])\[#.\](\[u\]\[vr\])" => "$1[#2]$2"; // velours
		"(\[w\])\[#.\](\[i\]\[s\])" => "$1[#1]$2"; // visiter
		"(\[d\])\[#.\](\[a\]\[ck\])" => "$1[#3][d.][#4]$2"; // dactylographe
		"(\[ck\])\[#.\](\[i\]\[l\])" => "$1[#6]$2"; // idem
		"(\[l\])\[#.\](\[o\]\[g@r\])" => "$1[#0]$2"; // idem
		"(\[d\])\[#.\](\[au\]\[st@r\])" => "$1[#3]$2"; // l'industrie
		"(\[n=\])(\[-i\])" => "$1[#3-]$2"; // nie
		"(\[0d-\])\[#.\](\[i\]\[s\])" => "$1[#1-]$2"; // ici
		"(\[ck@r\])\[#.\](\[i\]\[s\])" => "$1[#4]$2"; // actrice
		"(\[ser\])(\[-e\])" => "$1[#8-]$2"; // serais
		"(\[ser\])\[#4\]\[on\]" => "$1[#2-][_on]"; // seront (rewriter)
		"(\[ser\])(\[en\])" => "$1[#6-]$2"; // sera
		"(\[k@l3\])(\[-e\])" => "$1[#2]$2"; // clé
		"(\[l\])\[#.\](\[i\]\[w@r6\])" => "$1[#5]$2"; // livre
		"(\[s\])\[#.\](\[i\]\[w\])" => "$1[#7]$2"; // oisiveté
		"(\[d@r\])(\[-e\])" => "$1[#2]$2"; // André
		"(\[ar\])(\[-e\])" => "$1[#2]$2"; // Portrait
		"(\[t\])(\[-e\])" => "$1[#1]$2"; // m'absenter
		"(\[0n-\])\[#.\](\[u\]\[t\])" => "$1[#5]$2"; // août
		"(\[t@r\])\[#.\](\[a\]\[&a\])" => "$1[#5]$2"; // trahir 
		"(\[w\])\[#.\](\[i\]\[&e\])" => "$1[#2]$2"; // viens
		"(\[t\])\[#.\](\[au\]\[&e\])" => "$1[#6]$2"; // gratuité
		"(\[g@r\])\[#.\](\[a\]\[t\])" => "$1[#6]$2"; // idem
		"(\[&e\])\[#.\](\[a\]\[ng\])" => "$1[#1]$2"; // mariage
		"(\[&e\])\[#.\](\[a\]\[l\])" => "$1[#2]$2"; // glacial
		"(\[k(?:@r)?\])\[#.\](\[au\]\[&e\])" => "$1[#6]$2"; // cuir, cruel
		"(\[AR\^\])\[#.\](\[au\]\[&e\])" => "$1[#0]$2"; // ruine
		"(\[&e\])\[#.\](\[i\]\[n\])" => "$1[#0]$2"; // idem
		"(\[&e\])\[#.\](\[o\]\[s\])" => "$1[#0]$2"; // virtuosité
		"(\[rr\])\[#.\](\[au\]\[&e\])" => "$1[#3-]$2"; // idem
		"(\[&a\])\[#.\](\[i\]\[k\])" => "$1[#5]$2"; // mosaïque
		"(\[f\])\[#.\](\[a\]\[&a\])" => "$1[#4]$2"; // Raphaël
		"(\[&u\])\[#.\](\[i\]\[VR10\])" => "$1[#0]$2"; // ouïr
		"(\[w\])\[#.\](\[a\]\[&u\])" => "$1[#2]$2"; // j'avoue
		"(\[nn\])\[#.\](\[&o\])" => "$1[#0]$2"; // agneau
		"(\[0n-\])\[#.\](\[&o\])" => "$1[#1]$2"; // oh
		"(\[VR10\])\[#.\](\[&o\])" => "$1[#2]$2"; // bureau
		"(\[0n-\])\[#.\](\[a\]\[f@r6\])" => "$1[#5]$2"; // affreux
		"(\[c@r\])\[#.\](\[au\]\[p\])" => "$1[#2][d.][#4]$2"; // scrupuleux
		"(\[&o\])\[#.\](\[a\]\[t@r\])" => "$1[#3]$2"; // bleuâtre
		"(\[n=\])\[#.\](\[auf\])" => "$1[#0]$2"; // noix
		"(\[w\])\[#.\](\[auf\])" => "$1[#0]$2"; // voix
		"(\[&e\])(\[-e\])" => "$1[#1-]$2"; // puissiez
		"(\[n\])\[#.\](\[i\]\[&e\])" => "$1[#1]$2"; // cuisinier
		"(\[l\])\[#.\](\[au\]\[VR10\])" => "$1[#4]$2"; // saluera
		"(\[n\])\[#.\](\[au\]\[VR10\])" => "$1[#2]$2"; // diminuerons
		"(\[VR10\])\[#..?\](\[_on\])" => "$1[#2-]$2"; // idem
		"(\[t\])\[#.\](\[au\]\[t\])" => "$1[#7]$2"; // tutoyer
		"(\[d\])\[#.\](\[au\]\[&u\])" => "$1[#5]$2"; // mildiou
		"(\[vr\])\[#.\](\[i\]\[&o\])" => "$1[#1]$2"; // chariot
		"(\[st\])\[#.\](\[au\]\[d\])" => "$1[#5]$2"; // studio
		"(\[d\])\[#.\](\[i\]\[&o\])" => "$1[#5]$2"; // idem
		"(\[h\])\[#.\](\[a\]\[les\])" => "$1[#5]$2"; // j'avais
		"(\[ur\])(\[-e\])" => "$1[#6-]$2"; // pourrais
		"(\[w\])\[#.\](\[ion\])" => "$1[#1]$2"; // t'avions		
		"(\[0n-\])\[#.\](\[a\]\[w\])" => "$1[#4]$2"; // avouer
		"(\[les\])\[#.\](\[i\]\[&e\])" => "$1[#1]$2"; // m'aviez
		"(\[k\])\[#.\](\[au\]\[p\])" => "$1[#7]$2"; // préoccuper
		"(\[t@r\])(\[-e\])" => "$1[#2]$2"; // très
		"(\[t\])\[#.\](\[a\]\[les\])" => "$1[#6]$2"; // nous t'avons vu
		"(\[l\])\[#.\](\[a\]\[w\])" => "$1[#5]$2"; // l'avion
		"(\[d\])\[#.\](\[a\]\[p@r6\])" => "$1[#7]$2"; // d'apprendre
		"(\[ck\])\[#.\](\[au\]\[&e\])" => "$1[#5]$2"; // defectueux
		"(\[k\])(\[-e\])" => "$1[#1]$2"; // paquet
		"(\[0n-\])\[#.\](\[a\]\[p@r6\])" => "$1[#5]$2"; // apprecierons
		"(\[d\])(\[-e\])" => "$1[#1]$2"; // commandé
		"(\[ng\])\[#.\](\[au\]\[&e\])" => "$1[#6]$2"; // juin
		"(\[&u\])(\[-e\])" => "$1[#2-]$2"; // pouvez
		"(\[bei\])\[#.\](\[k\])" => "$1[#2]$2"; // concours
		"(\[bei\])\[#.\](\[b\])" => "$1[#1]$2"; // combiner
		"(\[bei\])\[#.\](\[p\])" => "$1[#2]$2"; // recomposer
		"(\[ar\])\[#.\](\[bei\])" => "$1[#2]$2"; // idem
		"(\[les\])\[#.\](\[k\])" => "$1[#2]$2"; // s'excuser
		"(\[in\])\[#.\](\[au\]\[t\])" => "$1[#6]$2"; // inutile
		"(\[&u\])\[#.\](\[s\])" => "$1[#1]$2"; // subside
		"(\[l\]\[i\])\[inter\]" => "$1[_inter]"; // l'intérêt (rewriter)
		"(\[t@r\])\[#.\](\[p\])" => "$1[#7]$2"; // transport
		"(\[t@r\])\[#.\](\[l\])" => "$1[#6]$2"; // translucide
		"(\[s\])\[#.\](\[i\]\[p\])" => "$1[#6]$2"; // anticiper
		"(\[l\])\[#.\](\[au\]\[w\])" => "$1[#6]$2"; // antédiluvien
		"(\[bei\])\[#.\](\[t\])" => "$1[#3]$2"; // continuer
		"(\[t\])\[#.\](\[i\]\[n\])" => "$1[#4]$2"; // idem
		"(\[bei\])\[#.\](\[g@r\])" => "$1[#5-]$2"; // congrès
		"(\[s\])\[#.\](\[au\]\[lt\])" => "$1[#5]$2"; // consulter
		"(\[bei\])\[#.\](\[st@r\])" => "$1[#3-]$2"; // reconstruction
		"(\[st@r\])\[#.\](\[au\]\[k\])" => "$1[#0][d.][#5]$2"; // idem
		"(\[b\])\[#.\](\[au\]\[st\])" => "$1[#5]$2"; // combustible
		"(\[t@r\])\[#.\](\[i\]\[&e\])" => "$1[#6]$2"; // compatriote
		"(\[&e\])\[#.\](\[o\]\[t\])" => "$1[#4]$2"; // idem
		"(\[c\])\[#.\](\[c@r\])" => "$1[#2]$2"; // circonscrire
		"(\[c\])\[#.\](\[sp\])" => "$1[#2][d.][#3]$2"; // circonspecte
		"(\[les\])\[#.\](\[k@l3\])" => "$1[#3]$2"; // exclure
		"(\[les\])\[#.\](\[p\])" => "$1[#3]$2"; // exposer
		"(\[les\])\[#.\](\[i\]\[ng\])" => "$1[#2]$2"; // j'exigerai 
		"(\[in\])\[#.\](\[a\]\[pp\])" => "$1[#5]$2"; // inapte
		"(\[inter\])\[#.\](\[s\])" => "$1[#2]$2"; // intercepte
		"(\[m\])\[i\]\[inter\]" => "$1[#2-][i][_inter]"; // m'intéresse (rewriter)
		"(\[s\])\[i\]\[inter\]" => "$1[#1][i][_inter]"; // désintéressé (rewriter)
		"(\[t@r\])\[#.\](\[u\]\[w\])" => "$1[#6]$2"; // introuvable
		"(\[&u\])\[#.\](\[au\]\[VR10\])" => "$1[#1]$2"; // suburbain
		"(\[t@r\])\[#.\](\[f\])" => "$1[#7]$2"; // transférer
		"(\[t@r\])\[#.\](\[b\])" => "$1[#6]$2"; // transborder
		"(\[t@r\])\[#.\](\[m\])" => "$1[#5]$2"; // transmissible
		"(\[s\])\[#.\](\[i\]\[b@l\])" => "$1[#5]$2"; // idem
		"(\[t@r\])\[#.\](\[w\])" => "$1[#6]$2"; // transversale
		"(\[t@r\])\[#.\](\[i\]\[t\])" => "$1[#8]$2"; // transite
		"(\[les\])\[#.\](\[ar\])" => "$1[#0]$2"; // exroi
		"(\[\^sch\])\[#.\](\[i\]\[VR10\])" => "$1[#0][i][vr]"; // d'enrichir (rewriter)
		"(\[b@r6\])\[#.\](\[a\]\[b@l\])" => "$1[#7]$2"; // innombrable
		"(\[VR10\])\[#.\](\[ion\])" => "[vr10^][#3-]$2"; // irions (rewriter)
		"(\[st\])\[#.\](\[ion\])" => "$1[#0]$2"; // question
		"(\[k\])\[#.\](\[ss\])" => "$1[#5]$2"; // action
		"(\[g\])\[#.\](\[au\]\[mpf\])" => "$1[#5]$2"; // argument
		"(\[n\])\[#.\](\[ion\])" => "$1[#0]$2"; // opinion
		"(\[m\])\[#.\](\[ion\])" => "$1[#0]$2"; // camion
		"(\[p\])\[#.\](\[ion\])" => "$1[#0]$2"; // pionnier
		"(\[ion\])\[#.\](\[i\]\[&e\])" => "$1[#1]$2"; // idem
		"(\[ar\])\[#.\](\[ion\])" => "[ar^][#2-]$2"; // rions
		"(\[w@r6\])\[#.\](\[ion\])" => "$1[#0]$2"; // ouvrions
		"(\[c\])\[#.\](\[au\]\[t\])" => "$1[#2][d.][#4]$2"; // discutions
		"(\[t\])\[#.\](\[ion\])" => "$1[#2]$2"; // idem
		"(\[p@l\])\[#.\](\[ion\])" => "$1[#0]$2"; // appelions
		"(\[nn@r6\])\[#.\](\[ion\])" => "$1[#1]$2"; // gagnerions
		"(\[g\])\[#.\](\[a\]\[nn@r6\])" => "$1[#5]$2"; // idem
		"(\[d@r\])\[#.\](\[ion\])" => "$1[#3]$2"; // aiderions
		"(\[0n-\])\[#.\](\[a\]\[f\])" => "$1[#5]$2"; // afficherions
		"(\[vr\])\[#.\](\[ion\])" => "$1[#1-]$2"; // idem
		"(\[&u\])\[#.\](\[ion\])" => "$1[#0]$2"; // subions
		"(\[les\])\[#.\](\[ion\])" => "$1[#0]$2"; // avions
		"(\[ur\])\[#.\](\[ion\])" => "$1[#2-]$2"; // pourrions
		"(\[vr\])\[#.\](\[ss\])" => "$1[#1]$2"; // portion
		"(\[c@r\])\[#.\](\[i\]\[p\])" => "$1[#2][d.][#4]$2"; // circonscription
		"(\[_?inter\])\[#.\](\[o\]\[g\])" => "$1[#1]$2"; // l'interrogation
		"(\[vr\])\[#.\](\[o\]\[ss)" => "$1[#1-]$2"; // corrosion (rather ugly ... also the diacritics ... )
		"(\[t\])\[#.\](\[au\]\[ss\])" => "$1[#4]$2"; // substitution
		"(\[m\])\[#.\](\[i\]\[l\])" => "$1[#3]$2"; // humiliation
		"(\[l\])\[#.\](\[i\]\[&e\])" => "$1[#5]$2"; // idem
		"(\[&e\])\[#.\](\[a\]\[ss\])" => "$1[#1]$2"; // idem
		"(\[s=\])\[#.\](\[i\]\[t\])" => "$1[#5]$2"; // situation
		"(\[f\])\[#.\](\[i\]\[k\])" => "$1[#6]$2"; // fiction
		"(\[ng\])\[#.\](\[mpf\])" => "$1[#6]$2"; // largement
		"(\[st@r\])\[#.\](\[i\]\[ck\])" => "$1[#1][sch.][#5]$2"; // strictement
		"(\[ck\])\[#.\](\[mpf\])" => "$1[#5]$2"; // idem
		"(\[s\])\[#.\](\[mpf\])" => "$1[#6]$2"; // divertissement
		"(\[g\])\[#.\](\[mpf\])" => "$1[#6]$2"; // fragment
		"(\[g@l3\])\[#.\](\[mpf\])" => "$1[#5]$2"; // règlement
		"(\[l\])\[#.\](\[i\]\[mpf\])" => "$1[#5]$2"; // poliment
		"(\[h\])\[#.\](\[a\]\[mpf\])" => "$1[#5]$2"; // brillamment
		"(\[d1\])\[#.\](\[au\]\[mpf\])" => "$1[#4]$2"; // assidûment
		"(\[bei\])\[#.\](\[p@l\])" => "$1[#2]$2"; // compliment
		"(\[k\])\[#.\](\[au\]\[mpf\])" => "$1[#5]$2"; // document
		"(\[d\])\[#.\](\[o\]\[k\])" => "$1[#6]$2"; // idem
		"(\[l\])\[#.\](\[a\]\[mpf\])" => "$1[#5]$2"; // lamentablement
		"(\[b@l\])\[#.\](\[mpf\])" => "$1[#5]$2"; // idem
		"(\[p@r6\])\[#.\](\[o\]\[d\])" => "$1[#5]$2"; // produisent
		"(\[k@l3\])\[#.\](\[i\]\[&e\])" => "$1[#6]$2"; // clientèle
		"(\[s\])\[#.\](\[i\]\[VR10\])" => "$1[#5]$2"; // désir
		"(\[0n-\])\[#.\](\[o\]\[t@l3\])" => "$1[#6]$2"; // hôtelier
		"(\[t@l3\])\[#.\](\[i\]\[&e\])" => "$1[#6]$2"; // idem
		"(\[s\])\[#.\](\[a\]\[b@l\])" => "$1[#6]$2"; // irréalisable
		"(\[st@r\])\[#.\](\[on\])" => "$1[#2-]$2"; // subsisteront
		"(\[b@r6\])\[#.\](\[t\])" => "$1[#7]$2"; // Bretagne	
		"(\[d\])\[#.\](\[au\]\[l\])" => "$1[#6]$2"; // ondulation	
		"^\[in\]\[#.\](\[o\]\[s\])" => "[in-][#1]$1"; // innocent
		"(\[ng\])\[#.\](\[t\])" => "$1[#3][sch.][#3]$2"; // rejeter
		"(\[f\])\[#.\](\[auf\])" => "$1[#3]$2"; // foi, foie
		"(\[AR\^\])\[#.\](\[f\])" => "$1[#3]$2"; // parfois
		"(\[d\])\[i\]\[inter\]" => "$1[#2][i][_inter]"; // d'intérêt (rewriter)
		"\[ar\]\[#.\](\[a\]\[p\])" => "[ar^][#2]$1"; // rapport (rewriter)
		"(\[0d-\])\[#.\](\[au\]\[n\])" => "$1[#2-]$2"; // une
		"(\[s\])\[#.\](\[a\]\[w\])" => "$1[#5]$2"; // vis-à-vis
		"(\[t@#\/\.\])\[#.\](\[o\]\[f\])" => "$1[#7]$2"; // pot-au-feu
		"(\[l\])\[#.\](\[i\]\[nn\])" => "$1[#4]$2"; // tire-ligne
		"(\[sch\])\[#.\](\[a\]\[&[uU]\])" => "$1[#2]$2"; // chou-rave
		"(\[bei\+ar\])\[#.\](\[k\])" => "$1[#1]$2"; // contre-coeur
		"(\[bei\+ar\])\[#.\](\[a\]\[d\])" => "[contre][#1]$2"; // contradiction
		"(\[d\])\[#.\](\[i\]\[k\])" => "[d1][#6]$2"; // idem
		"(\[t\])\[#.\](\[f\])" => "$1[#7]$2"; // toutefois
		"(\[d\])\[#.\](\[mpf\])" => "$1[#6]$2"; // dûment
		"(\[bei\+ar\])\[#.\](\[b\])" => "[contre][#2]$2"; // contre-bas, contrebande
		"(\[AR\^\])\[#.\](\[k\])" => "$1[#0]$2"; // parcourir
		"(\[vr\])\[#.\](\[o\]\[l\])" => "$1[#6]$2"; // parole
		"(\[bei\+ar\])\[#.\](\[f\])" => "$1[#1]$2"; // contrefaçon
		"(\[f\])\[#.\](\[a\]\[s\])" => "$1[#3]$2"; // idem
		"(\[bei\+ar\])\[#.\](\[d\])" => "$1[#1]$2"; // contredire
		"(\[bei\+ar\])\[#.\](\[a\]\[w\])" => "$1[#1-]$2"; // contravention
		"(\[bei\+ar\])\[#.\](\[o\]\[l\])" => "$1[#0]$2"; // contrôleur
		"(\[bei\+ar\])\[#.\](\[i\]\[b\])" => "$1[#0]$2"; // contribution
		"(\[k@l3\])(\[&t\])" => "$1[#2]$2"; // ci-inclus
		"(\[on\])\[#.\](\[s\])" => "$1[#2]$2"; // non-sens
		"(\[on\])\[#.\](\[l\])" => "$1[#3]$2"; // non-lieu
		"(\[d\])\[#.\](\[o\]\[ng\])" => "$1[#6]$2"; // d'aujourd'hui
		"(\[vor\])\[#.\](\[mpf\])" => "$1[#1]$2"; // autrement
		"(\[ar\])\[#.\](\[c\])" => "$1[#5]$2"; // parce que
		"(\[c\])\[#.\](\[on\])" => "$1[#1]$2"; // parce qu'on
		"(\[ur\])\[#.\](\[k\])" => "$1[#1]$2"; // pourquoi
		"(\[s=\])(\[_lui\])" => "$1[#2-]$2"; // celui
		"(\[(?:welch|ch)\])\[#.\](\[s\])" => "$1[#4]$2"; // quelques-uns
		"(\[ng\])\[#.\](\[i\]\[s\])" => "$1[#4]$2"; // jusqu'ici
		"(\[ng\])\[#.\](\[a\]\[p@r6\])" => "$1[#3][sch.][#4]$2"; // jusqu'après
		"(\[vr\])\[#.\](\[a\]\[ss\])" => "$1[#2]$2"; // génération
		"(\[bei\])\[#.\](\[fort\])" => "$1[#4-]$2"; // confort
		"(\[fort\])\[#.\](\[vr\])" => "$1[#1]$2"; // forteresse
		"(\[0n-\])\[#.\](\[o\]\[d@l3\])" => "$1[#6]$2"; // au-delà
		"(\[f\])\[#.\](\[a\]\[ck\])" => "$1[#6]$2"; // facture
		"(\[ck\])\[#.\](\[au\]\[VR10\])" => "$1[#5]$2"; // idem
		"(\[&u\])\[#.\](\[i\]\[s\])" => "$1[#0]$2"; // Louise
		"(\[n\])\[#.\](\[au\]\[&e\])" => "$1[#1]$2"; // ennui
		"(\[0n-\])\[#.\](\[o\]\[t\])" => "$1[#6]$2"; // haute
		"(\[ion\])\[#.\](\[ar\])" => "$1[#3-]$2"; // espionnerons
		"(\[bei\+ar\])\[#.\](\[a\]\[vr\])" => "$1[#1-]$2"; // contrariété
		"(\[c\])\[#.\](\[st\])" => "$1[#5]$2"; // circonstanciel
		"(\[l\])\[#.\](\[i\]\[m\])" => "$1[#5]$2"; // sublime
		"(\[sobre\])\[#.\](\[n\])" => "$1[#1-]$2"; // surnom
		"(\[t@r\])\[#.\](\[p@r6\])" => "$1[#7]$2"; // entreprise
		"(\[l\])\[#.\](\[a\]\[l\])" => "$1[#5]$2"; // l'allemand
		"(\[0n-\])\[#.\](\[o\]\[f@r6\])" => "$1[#6]$2"; // offre
		"(\[sch\])\[#.\](\[i\]\[f@r6\])" => "$1[#2][sch.][#3]$2"; // chiffre
		"(\[bei\])\[#.\](\[w\])" => "$1[#0]$2"; // convoquer
		"(\[w\])\[#.\](\[o\]\[k\])" => "$1[#2]$2"; // idem
		"(\[d\])\[#.\](\[i\]\[sp\])" => "[d1][#3][d.][#3]$2"; // disposition (rewriter)
		"(\[d\])\[#.\](\[a\]\[sch\])" => "$1[#3]$2"; // d'acheteur
		"(\[t\])\[#.\](\[i\]\[l\])" => "$1[#6]$2"; // utilement
		"(\[l\])\[#.\](\[mpf\])" => "$1[#5]$2"; // idem
		"(\[les\])\[#.\](\[les\])" => "$1[#3]$2"; // préexistence
		"(\[_inter\])(\[o\]\[d\])" => "$1[#4]$2"; // réintroduction
		"(\[d\])\[#.\](\[au\]\[k\])" => "[d1][#2][d.][#3]$2"; // idem
		"(\[rr6\])\[#.\](\[i\]\[&e\])" => "[rr4][#3]$2"; // particulier (rewriter)
		"(\[rr6\])\[#.\](\[a\]\[vr\])" => "$1[#5]$2"; // particularité
		"(\[&e\])\[#.\](\[a\]\[vr\])" => "$1[#1]$2"; // enhardir
		"(\[bei\])\[#.\](\[d\])" => "$1[#1]$2"; // éconduire
		"(\[s\])\[#.\](\[au\]\[l\])" => "$1[#5]$2"; // proconsul
		"(\[n\])\[#.\](\[a\]\[sch\])" => "$1[#2]$2"; // enharnacher
		"(\[bei\])\[#.\](\[t@r\])" => "$1[#0]$2"; // incontrôlable
		"(\[t@r\])\[#.\](\[o\]\[l\])" => "$1[#6]$2"; // idem
		"(\[l\])\[#.\](\[a\]\[b@l\])" => "$1[#5]$2"; // idem
		"(\[bei\])\[#.\](\[w\])" => "$1[#1-]$2"; // biconvex
		"(\[&e\])\[#.\](\[bei\])" => "$1[#1-]$2"; // idem
		"(\[n=\])\[#.\](\[vr\])" => "$1[#2]$2"; // nécessaire
		"(\[les\])\[#.\](\[o\]\[vr\])" => "$1[#2]$2"; // extraordinaire
		"(\[les\])\[#.\](\[w\])" => "$1[#3]$2"; // extravagant
		"(\[les\])\[#.\](\[t@r\])" => "$1[#3]$2"; // extraction
		"(\[ng\])(\[-i\])" => "$1[#1]$2"; // j'y
		"(\[b@l\])\[#.\](\[a\]\[m\])" => "$1[#4]$2"; // blâme
		"(\[\^sch\])(\[-i\])" => "$1[#1-]$2"; // n'enrichit
		"(\[sch\])\[#.\](\[o\]\[s\])" => "$1[#2-][o][=s]"; // chose (rewriting)
		"(\[les\])\[#.\](\[t\])" => "$1[#4]$2"; // l'extérieur
		"(\[bei\])\[#.\](\[p@r6\])" => "$1[#3]$2"; // comprenons
		"(\[k\])\[#.\](\[au\]\[l\])" => "$1[#6]$2"; // ciruculaire
		"(\[0d-\])\[#.\](\[au\]\[s\])" => "$1[#2-]$2"; // usage
		"(\[&e\])\[#.\](\[au\]\[s\])" => "$1[#0]$2"; // réussite
		"(\[k\])\[#.\](\[a\]\[p@r6\])" => "$1[#8]$2"; // qu'après
		"(\[d\])\[#.\](\[p\])" => "$1[#7]$2"; // depuis
		"(\[p\])\[#.\](\[au\]\[&e\])" => "$1[#2]$2"; // idem
		"(\[VR10\])\[#.\](\[ss)" => "$1[#1]$2"; // excursion
		"(\[k\])\[#.\](\[a\]\[d\])" => "$1[#7]$2"; // cadeau
		"(\[ck@r\])\[#.\](\[i\]\[k\])" => "$1[#6]$2"; // électrique
		"(\[st\])\[#.\](\[c@r\])" => "$1[#3]$2"; // postscriptum
		"(\[c@r\])\[#.\](\[i\]\[pp\])" => "$1[#2][d.][#5]$2"; // idem
		"(\[g\])\[#.\](\[a\]\[vr)" => "$1[#6]$2"; // gares (diacritics)
		"(\[b@r6\])\[#.\](\[mpf\])" => "$1[#6]$2"; // l'encombrement
		"(\[0n-\])\[#.\](\[a\]\[g@r\])" => "$1[#1-]$2"; // agréer
		"(\[t\])\[#.\](\[i\]\[[Bb]\])" => "$1[#6]$2"; // Tibet
		"(\[h\])\[#.\](\[a\]\[ck\])" => "$1[#6]$2"; // hacken
		"(\[n@r6\])\[#.\](\[AR\^\])" => "$1[#2]$2"; // Fernunterricht
		"(\[pf\])\[#.\](\[u\]\[s\])" => "$1[#2-]$2"; // Pfusbus
		"(\[j\])\[#.\](\[u\]\[ck\])" => "[j^][#7]$2"; // juckt
		"(\[&[oO]\])\[#.\](\[ar\])" => "$1[#0]$2"; // risikoreicher
		"(\[nn\])\[#.\](\[z\])" => "$1[#1-]$2"; // Kennzeichen
		"(\[h\])\[#.\](\[o\]\[ch@r\])" => "$1[#0]$2"; // hochriskanter
		"(\[&e\])\[#.\](\[o\]\[g@r\])" => "$1[#3-]$2"; // Geografiekenntnisse
		"(\[&t@r\])(\[&o\])" => "$1[#4-]$2"; // Elektrokonzern
		"(\[\^ch\])\[#.\](\[d\])" => "$1[#7]$2"; // hauchdünn
		"(\[&tion\])(\[i\]\[st\])" => "$1[#5]$2"; // perfektionistisch
		"(\[nn\])\[#.\](\[i\]\[n\])" => "$1[#2]$2"; // Annina
		"(\[b\])\[#.\](\[a\]\[tt\])" => "$1[#7]$2"; // debattieren
		"(\[durch\])\[#.\](\[ar\])" => "$1[#3-]$2"; // durchreiste
		"(\[durch\])\[#.\](\[w\])" => "$1[#1]$2"; // durchweg
		"(\[h\])\[#.\](\[k@r\])" => "$1[#0]$2"; // Gehkräfte
		"(\[&tm\])(\[s\])" => "$1[#2]$2"; // Eigentums
		"(\[ck\])\[#.\](\[vr\])" => "$1[#6]$2"; // Ackerbau
		"(\[pf\])\[#.\](\[i\]\[VR10\])" => "$1[#2]$2"; // Pfirsich
		"(\[durch\])\[#.\](\[sp@r6\])" => "$1[#0]$2"; // durchsprungen
		"(\[&e\])\[#.\](\[u\]\[ng\])" => "$1[#0]$2"; // Anschauung
		"(\[ant\])\[#.\](\[a\]\[vr\])" => "$1[#1-]$2"; // Entartung
		"(\[fort\])\[#..?\](\[l\])" => "$1[#2]$2"; // fortlebte
		"(\[&eits\])(\[l\])" => "$1[#6]$2"; // arbeitslosen
		"(\[in\])\[#.\](\[k@r\])" => "$1[#1]$2"; // Salzinkrustation
		"(\[ar\])\[#.\](\[q\])" => "[ar^][#5]$2"; // verquer (rewriting)
		"(\[h\])\[#.\](\[u\]\[f\])" => "$1[#6]$2"; // Pferdehuf
		"(\[\^ch\])(\[a\]\[&tm\])" => "$1[#4]$2"; // Reichtums
		"(\[d@r\])\[#.\](\[a\]\[t\])" => "$1[#7]$2"; // Draht
		"(\[h\])\[#.\](\[a\]\[b\])" => "$1[#5]$2"; // Erhabenheit (not abbreviated)
		"(\[l\])\[#.\](\[u\]\[x\])" => "$1[#5]$2"; // Luxus
		"(\[l\])\[#.\](\[a\]\[x\])" => "$1[#6]$2"; // lax
		"(\[&tg\])(\[h\])" => "$1[#3]$2"; // künftighin
		"(\[AR\^\])\[#.\](\[i\]\[v\])" => "$1[#1-]$2"; // Rivalin
		"(\[d@r\])\[#.\](\[i\]\[ss\])" => "$1[#6]$2"; // verdriesslicher
		"(\[ch\])\[#.\](\[a\]\[m\])" => "$1[#5]$2"; // unnachahmliches
		"(\[w@r6\])\[#.\](\[ar\])" => "$1[#1]$2"; // unwiderruflich
		"(\[h\])\[#.\](\[s\])" => "$1[#1]$2"; // Rehs, Wehs, Sehs, Drehs
		"(\[ch@l3\])(\[-e\])" => "$1[#2]$2"; // niedergezwungene
		"(\[fort\])\[#..?\](\[b\])" => "$1[#3]$2"; // Fortbestand
		"(\[z\])\[#.\](\[&o\])" => "$1[#3]$2"; // Zoo
		"(\[v\])\[#.\](\[a\])\[nd\]" => "$1[#3]$2[nd1]"; // Vandenesse
		"(\[d\])\[#.\](\[o\]\[x\])" => "$1[#8]$2"; // Paradox
		"(\[l@r6\])\[#.\](\[o\]\[l@l\])" => "$1[#6]$2"; // Doppelrolle
		"(\[&u\])\[#.\](\[z@r\])" => "$1[#2-]$2"; // unzerbrechlich
		"\[d\]\[#.\](\[i\]\[p@l\])" => "[d1][#6]$1"; // Diplomat
		"(\[zurück\])\[#.\](\[sch@r\])" => "$1[#3-]$2"; // zurückschreckt
		"(\[st@r\])\[#.\](\[o\]\[h\])" => "$1[#2]$2"; // Strohhalm
		"(\[fort\])\[#.\](\[ar\])" => "$1[#0]$2"; // fortreissen
		"(\[t\])\[#.\](\[schaft\])" => "$1[#5]$2"; // Botschafter
		"(\[d\])\[#.\](\[a\]\[tt\])" => "[d1][#7]$2"; // verdattert
		"(\[d@r\])\[#.\](\[o\]\[sch\])" => "$1[#1]$2"; // Droschke
		"(\[s\])\[#.\](\[i\]\[c\])" => "$1[#8]$2"; // Basic
		"(\[nicht\])(\[-e\])" => "$1[#2-]$2"; // zunichte machen
		"(\[&tm\])(\[a\]\[st\])" => "$1[#4]$2"; // Hauptmastes
		"(\[pf\])\[#.\](\[n\])" => "$1[#0]$2"; // Kopfnicken
		"(\[ant\])\[#.\](\[k@r\])" => "$1[#4-]$2"; // Entkräftung
		"(\[p\])\[#.\](\[o\]\[vr\+ar\])" => "$1[#1]$2"; // emporragte
		"(\[vr\])\[#.\](\[o\]\[z\])" => "$1[#0]$2"; // Schmarotzer
		"(\[&u\])\[#.\](\[aus\])" => "$1[#1]$2"; // Unaussprechliches
		"(\[zw\])\[#.\](\[i\]\[l@l\])" => "$1[#6]$2"; // Zwillinge
		"(\[schw\])\[#.\](\[u\]\[pp\])" => "$1[#8]$2"; // schwupp
		"(\[ant\])(\[e\]\[vr\])" => "$1[#9-]$2"; // enterbt
		"(\[zw\])\[#.\](\[&o\])" => "$1[#5]$2"; // zwo
		"(\[h\])\[#.\](\[o\]\[tt\])" => "$1[#6]$2"; // Hottentotten
		"(\[&t&e\])(\[o\]\[tt\])" => "$1[#2]$2"; // idem
		"(\[\^ch@l3\])(\[\-e\])" => "$1[#1]$2"; // schmeichle
		"(\[&t@r\])(\[i\]\[VR10\])" => "$1[#5-]$2"; // konzentrieren
		"(\[b\])\[#.\](\[rück\])" => "$1[#0]$2"; // berücksichigte
		"(\[h\])\[#.\](\[&o\])" => "$1[#3]$2"; // oho
		"(\[l\])(\[&tsch\])" => "$1[#3]$2"; // Kaltschnauzigkeit
		"(\[ar\])(\[all\])" => "$1[#4]$2"; // verallgemeinern
		"(\[k\])\[#.\](\[vr\])" => "$1[#5]$2"; // Baskerville
		"(\[vor\])\[#.\](\[v\])" => "$1[#1-]$2"; // Vorväter
		"(\[&tvr\])(\[-e\])" => "$1[#4-]$2"; // bestimmtere
		"(\[m\])\[#.\](\[g@r\])" => "$1[#3-]$2"; // Baumgruppe
		"(\[ng\])\[#.\](\[sch@r\])" => "$1[#1-]$2"; // Langschrift
		"(\[z\])\[#.\](\[a\]\[ck\])" => "$1[#6]$2"; // zackige
		"(\[vor\])\[#..?\](\[sch@r\])" => "$1[#4-]$2"; // Vorschriften (recorrection)
		"(\[ant\])\[#.\](\[m\])" => "$1[#1-]$2"; // entmutigt
		"(\[durch\])\[#.\](\[sch@r\])" => "$1[#6-]$2"; // durchschritten
		"(\[z\])\[#.\](\[o\]\[tt\])" => "$1[#6]$2"; // zottigem
		"(\[rück\])\[#.\](\[ar\])" => "$1[#3-]$2"; // Rückreise
		"(\[n@r6\])\[#.\](\[u\]\[f\])" => "$1[#6]$2"; // anrufen
		"(\[t\])\[#.\](\[a\]\[x\])" => "$1[#8]$2"; // Taxusallee
		"(\[h\])\[#.\](\[au\]\[st\])" => "$1[#5]$2"; // hauste	
		"(\[t\])\[#.\](\[o\]\[k@r\])" => "$1[#1]$2"; // Autokrat
		"(\[b@r6\])\[#.\](\[a\]\[d@l3\])" => "$1[#7]$2"; // Bradley
		"(\[t@r\])\[#.\](\[au\]\[st\])" => "$1[#6]$2"; // traust	
		"(\[g\])\[#.\](\[ur\])" => "$1[#6]$2"; // geurteilt
		"(\[b@l\])\[#.\](\[i\]\[nd@l3\])" => "$1[#5]$2"; // blindlings
		"(\[l@l\])\[#.\](\[st\])" => "$1[#6]$2"; // vollständig
		"(\[vr\])\[#.\](\[o\]\[x\])" => "$1[#7]$2"; // Paroxismus
		"(\[schw\])\[#.\](\[a\]\[pp\])" => "$1[#8]$2"; // schwappte
		"(\[t@r\])\[#.\](\[i\]\[b@r6\])" => "$1[#7]$2"; // Triebrad
		"(\[b@r6\])\[#.\](\[a\]\[d\])" => "$1[#6]$2"; // idem
		"(\[l@l\])\[#5\](\[ar\])" => "$1[#3]$2"; // vollre
		"(\[h\])\[#.\](\[u\]\[ng@r\])" => "$1[#0]$2"; // hungrig
		"(\[welch@l3\])(\[o\]\[vr\])" => "$1[#4]$2"; // Chlor
		"(\[mpf\])\[#.\](\[AR\^\])" => "$1[#3]$2"; // Kampfrichter
		"(\[sch\])\[#.\](\[u\]\[s\])" => "$1[#1-]$2"; // Schuhs
		"(\[&t@r\])(\[a\]\[z\])" => "$1[#3-]$2"; // Anthrazit
		"(\[&t&u\])(\[a\]\[l\])" => "$1[#2]$2"; // prozentual
		"(\[&t&e\])(\[a\]\[&a\])" => "$1[#2]$2"; // Marta
		"(\[&tion\])(\[ch\])" => "$1[#3]$2"; // Portiönchen
		"(\[&t&e\])(\[a\]\[&tm\])" => "$1[#3-]$2"; // Schrifttum
		"(\[ur\])\[#.\](\[i\]\[ar\])" => "$1[#1-]$2"; // Urrecht
		"(\[vor\])(\[en\]\[AR\^\])" => "$1[#5-]$2"; // Vorverkauf
		"(\[z\])\[#.\](\[ch\])" => "$1[#5]$2"; // Schätzchen
		"(\[vr\])\[#.\](\[schw\])" => "$1[#1]$2"; // erschwinglich
		"(\[rr\])\[#.\](\[-ei\])" => "$1[#9]$2"; // Pfarrei
		"(\[&t&e\])(\[i\]\[q\])" => "$1[#3]$2"; // Antiquar
		"^(\[em\])(\[ant\])" => "[0N-][#3-]$1$2"; // dementgegen
		"(\[&t&e\])(\[o\]\[t\])" => "$1[#3]$2"; // Faktotum
		"(\[da@r\])\[#.\](\[l\])" => "$1[#3]$2"; // darlegen
		"(\[da@r\])\[#.\](\[ar\])" => "$1[#1]$2"; // darreichen
		"(\[vor\])(\[em\])" => "$1[#7-]$2"; // vordem
		"(\[fort\])\[#..\](\[a\]\[b\])" => "$1[#3]$2"; // fortab (recorrection)
		"(\[m\])\[#.\](\[ar\])" => "$1[#1-]$2"; // mitreden
		"(\[n=@r6\])\[#.\](\[o\]\[vr\])" => "$1[#2]$2"; // unterordnen
		"(\[&t&e\])(\[o\]\[b\])" => "$1[#2]$2"; // Vontobel
		"(\[werd\])\[#.\](\[u\]\[ng\])" => "$1[#1]$2"; // Menschwerdung
		"(\[vor\])\[#.\](\[ch@r\])" => "$1[#3-]$2"; // abbreviation v.Chr.
		"(\[s\])\[#.\](\[i\]\[d@l3\])" => "$1[#8]$2"; // Einsiedler
		"(\[l@l\])\[#.\](\[a\]\[nd\])" => "$1[#6]$2"; // Holland
		"(\[in\])\[#.\](\[o\]\[pp\])" => "$1[#5]$2"; // inopportun
		"(\[k@l3\])\[#.\](\[o\]\[p\])" => "$1[#7]$2"; // Enzyklopädie
		"(\[z\])\[#.\](\[i\]\[k@l3\])" => "$1[#6]$2"; // idem
		"^(\[(?:welch|ch)\])\[#.\](\[au\]\[ff\])" => "$1[#5]$2"; // Chauffeur
		"(\[vr\])\[#.\](\[a\]\[y\])" => "$1[#1]$2"; // Gouraya
		"(\[auf\])\[#.\](\[zw\])" => "$1[#2-]$2"; // aufzwangen
		"(\[g@r\])\[#.\](\[a\]\[nd\])" => "$1[#5]$2"; // Wegrande
		"(\[\^ch\])\[#.\](\[l\])" => "$1[#6]$2"; // strauchlosen
		"(\[in\])\[#.\](\[sch@r\])" => "$1[#3-]$2"; // inschriftslose
		"(\[&e\])\[#.\](\[sch@r\])" => "$1[#6-]$2"; // Heuschrecke
		"(\[ss\])\[#.\](\[u\]\[f\])" => "$1[#5]$2"; // Jussuf
		"(\[ss\])\[#.\](\[ar\])" => "$1[#1]$2"; // blassrosa (if not separated)
		"(\[&eitvr\])(\[u\]\[ng\])" => "$1[#2]$2"; // Erheiterung
		"(\[g@r\])\[#.\](\[&o\])" => "$1[#4]$2"; // Negro
		"(\[[mn]@r6\])\[#.\](\[i\]\[tt\])" => "$1[#7]$2"; // Heimritt, einritten
		"(\[m@r6\])\[#.\](\[o\]\[d\])" => "$1[#7]$2"; // Nimrod
		"(\[[Aa][Rr]\^\])\[#.\](\[i\]\[(?:[Vv][Rr]|[Vv][Rr]10)\])" => "$1[#1-]$2"; // Rir
		"(\[h\])\[#.\](\[a\]\[mm\])" => "$1[#4]$2"; // Muhammed
		"(\[ch@r\])\[#.\](\[u\]\[f\])" => "$1[#7]$2"; // Wachruft
		"(\[w\])\[#.\](\[a\]\[ch@r\])" => "$1[#1-]$2"; // idem
		"(\[auf\])\[#.\](\[schw\])" => "$1[#2-]$2"; // Aufschwung
		"(\[f\])\[#.\](\[sch@l3\])" => "$1[#4]$2"; // Hufschlag
		"(\[z\])\[#.\](\[pf\])" => "$1[#6]$2"; // Ersatzpferde
		"(\[0n-\])\[#.\](\[a\]\[q\])" => "$1[#5]$2"; // Aquädukt
		"(\[h\])\[#.\](\[i\])\[nd\]" => "$1[#5]$2[nd1]";  // Hindernissen
		"(\[zw\])\[#.\](\[i\]\[b\])" => "$1[#7]$2"; // Zwiebeln
		"(\[\^ch\])(\[&t#l\])" => "$1[#3]$2"; // lichtlosen
		"(\[\^ch@r\])(\[o\]\[m\])" => "$1[#5]$2"; // Polychromarbeiten
		"(\[b\])\[#.\](\[z@r\])" => "$1[#3-]$2"; // halbzerfallene
		"(\[q\])\[#.\](\[i\]\[t@l3\])" => "$1[#7]$2"; // M'Quitla
		"(\[t@l3\])\[#.\](\[a\]\[&a\])" => "$1[#6]$2"; // idem
		"(\[h\])\[#.\](\[m\])" => "$1[#5]$2"; // Ahmed
		"(\[g@l3\])\[#.\](\[i\]\[d\])" => "$1[#6]$2"; // Glied
		"(\[d\])\[#.\](\[o\]\[p\])" => "$1[#7]$2"; // adoptiert
		"(\[&e\])\[#.\](\[g@r\])" => "$1[#5-]$2"; // graugrüne
		"(\[l@r6\])\[#.\](\[i\]\[VR10\])" => "$1[#4]$2"; // Melrir
		"(\[b@r6\])\[#.\](\[a\]\[&a\])" => "$1[#7]$2"; // M'Guebra
		"(\[g@r\])\[#.\](\[au\]\[t\])" => "$1[#6]$2"; // graute
		"(\[\^z\])\[#.\](\[f\])" => "$1[#6]$2"; // kreuzförmigen
		"(\[b@r6\])\[#.\](\[i\]\[t\])" => "$1[#7]$2"; // briet
		"(\[k@r\])\[#.\](\[i\]\[pp\])" => "$1[#7]$2"; // Krippen
		"(\[ar\])\[#.\](\[u\]\[b\])" => "$1[#7]$2"; // Rubel
		"(\[vr\])\[#.\](\[i\]\[nk\])" => "$1[#2]$2"; // Warinka
		"(\[nk\])\[#.\](\[a\]\[&a\])" => "$1[#4]$2"; // idem
		"(\[b@r6\])\[#.\](\[o\]\[ss\])" => "$1[#6]$2"; // Dobrosseloff
		"(\[l\])\[#.\](\[o\]\[ff\])" => "$1[#7]$2"; // idem
		"(\[m@r6\])\[#.\](\[o\]\[ck\])" => "$1[#7]$2"; // Uniformrock
		"(\[vr\])\[#.\](\[m@r6\])" => "$1[#2]$2"; // idem
		"(\[z\])\[#.\](\[a\]\[f\])" => "$1[#6]$2"; // schwatzhaft
		"(\[p\])\[#.\](\[o\]\[k@r\])" => "$1[#0]$2"; // Pokrowskij
		"(\[k\])\[#.\](\[i\]\[j\])" => "$1[#6]$2"; // idem
		"(\[l\])\[#.\](\[d@l3\])" => "$1[#6]$2"; // Wildling
		"(\[d\])\[#.\](\[q\])" => "$1[#6]$2"; // Geldquelle
		"(\[n=@r6\])\[#.\](\[g@r\])" => "$1[#0]$2"; // untergrub
		"(\[d\])\[#.\](\[u\]\[ck\])" => "[d1][#7]$2"; // duckte
		"(\[nicht\])(\[a\]\[ch\])" => "$1[#3]$2"; // Nichtachtung
		"(\[wo\])\[#.\](\[selb\])" => "$1[#6]$2"; // woselbst
		"(\[zurück\])\[#.\](\[g@r\])" => "$1[#3-]$2"; // zurückgreife
		"(\[d@r\])\[#.\](\[aus\])" => "$1[#2-]$2"; // draus
		"(\[\^z\])(\[a\]\[&tm\])" => "$1[#2]$2"; // Besitztum
		"(\[&t&e\])(\[o\]\[p\])" => "$1[#2]$2"; // Sheltopus (name)
		"(\[f\])\[#.\](\[j\])" => "$1[#3]$2"; // Prokofjewitsch (name)
		"(\[p@r6\])\[#.\](\[o\]\[k\])" => "$1[#4]$2"; // idem
		"(\[AR\^\])\[#.\](\[i\]\[rr\])" => "$1[#1-]$2"; // Verirrungen
		"(\[p\])\[#.\](\[u\]\[sch\])" => "$1[#1]$2"; // Puschkin
		"(\[k\])(\[&ai@#\/\.\])(\[#.\]\[-ei\])" => "$1[#8]$2[#8-]$3"; // Newakai
		"(\[g@l3\])\[#.\](\[a\]\[sch\])" => "$1[#4]$2"; // Glasch
		"(\[h\])\[#.\](\[sch@r\])" => "$1[#0]$2"; // Schmähschrift
		"(\[v\])\[#.\](\[i\]\[t\])" => "$1[#7]$2"; // Leviten
		"(\[j\])\[#.\](\[i\]\[t\])" => "[j^][#6]$2"; // Iljitsch
		"(\[p\])\[#.\](\[j\])\[#.\](\[o\]\[t@r\])" => "$1[#1][j^][#1]$3"; // Pjotr
		"(\[l\])\[#.\](\[a\]\[c\])" => "$1[#6]$2"; // Lovelace
		"(\[t\])\[#.\](\[d\])" => "$1[#6]$2"; // blutdürstiger
		"(\[&e\])\[#.\](\[vr@l\])" => "$1[#2]$2"; // Bäuerlein
		"(\[f\])\[#.\](\[i\]\[nn\])" => "$1[#5]$2"; // finnländisch
		"(\[vr\])\[#.\](\[o\]\[ch\])" => "$1[#0]$2"; // Gorochwaja
		"(\[ch\])\[#.\](\[w\])" => "$1[#5]$2"; // idem
		"(\[rr\])\[#.\](\[ch\])" => "$1[#2]$2"; // Närrchen
		"(\[auf\])\[#.-?\](\[sch\])" => "$1[#4-]$2"; // hinaufschauen
		"(\[k\])\[#.\](\[i\]\[m\])" => "$1[#5]$2"; // Akimowitsch
		"(\[\^ch\])(\[&ai@#\/\.\])(\[ai\]\[l\])" => "$1[#3]$2[#3-]$3"; // Michailowitsch
		"(\[k@r\])\[#.\](\[i\]\[p\])" => "$1[#6]$2"; // Manuskript
		"(\[k\])\[#.\](\[o\]\[ff\])" => "$1[#9]$2"; // Bükoff (Bykow)
		"(\[&eits\])(\[a\]\[m\])" => "$1[#5]$2"; // arbeitsam
		"(\[fort\])\[#.-?\](\[b@r6\])" => "$1[#2]$2"; // fortbringt
		"(\[vr\])\[#.\](\[y\])" => "$1[#2]$2"; // Bovary
		"(\[&[iI]\])\[#.\](\[[iI]\]\[(?:vr|VR10)\])" => "$1[#1]$2"; // liniierte
		"(\[h\])\[#.\](\[au\]\[d\])" => "$1[#6]$2"; // Haudegentum
		"(\[k@r\])\[#.\](\[i\]\[st\])" => "$1[#6]$2"; // Sakristei
		"(\[&ts\])(\[m\])" => "$1[#4]$2"; // vorschriftsmässig
		"(\[ss\])\[#.\](\[i\]\[ng@r\])" => "$1[#0]$2"; // Messingringe
		"(\[s\])\[#.\](\[i\])\[nd\]" => "$1[#5]$2[nd1]"; // Gesindes
		"(\[sich\])(\[s\])" => "$1[#2-]$2"; // sichs
		"(\[z\])(\[all\])" => "$1[#4]$2"; // zuallerletzt
		"(\[n\])\[#.\](\[y\])" => "$1[#2]$2"; // Cany
		"(\[\^z\])\[#.\](\[w\])" => "$1[#5]$2"; // kreuzweise
		"(\[&tvr\])(\[&i\])" => "$1[#4]$2"; // Galanterien
		"(\[pp\])\[#.\](\[o\]\[k@r\])" => "$1[#1-]$2"; // Hippokrates
		"(\[t\])\[#.\](\[b@l\])" => "$1[#6]$2"; // Brautblumen
		"(\[d\])\[#.\](\[au\]\[t\])" => "$1[#6]$2"; // verdaut
		"(\[k@l3\])\[#.\](\[a\]\[ng@r\])" => "$1[#1]$2"; // klangreichen
		"(\[c\])\[#.\](\[o\]\[tt\])" => "$1[#8]$2"; // Scott
		"(\[g\])\[#.\](\[o\]\[nd\])" => "$1[#6]$2"; // Gondolieren
		"(\[nd\])\[#.\](\[o\]\[l\])" => "$1[#6]$2"; // idem
		"(\[\^ch\])\[#.\](\[f@l\])" => "$1[#6]$2"; // Riechfläschchen
		"(\[ss\])\[#.\](\[d\])" => "$1[#4][d1]"; // sodann
		"(\[z\])\[#.\](\[a\]\[c\])" => "$1[#6]$2"; // Balzac
		"(\[&tv\])(\[i\]\[\^z\])" => "$1[#4]$2"; // Hauptvizinalweg
		"(\[t@r\])\[#.\](\[&o\])" => "$1[#5]$2"; // Pietro
		"(\[\^ch\])\[#.\](\[i\]\[g\])" => "$1[#5]$2"; // dickbauchigen
		"(\[\^ch\])\[#.\](\[y\])" => "$1[#5]$2"; // Vichy
		"(\[c\])(\[&ai@#\/\.\])(\[ai\]\[s\])" => "$1[#5]$2[#5-]$3"; // français
		"(\[nn\])\[#.\](\[s\])" => "$1[#1]$2"; // Mannsen
		"(\[&th\])(\[u\]\[b\])" => "$1[#5]$2"; // Krafthubern
		"(\[pf\])\[#.\](\[a\]\[ff\])" => "$1[#6]$2"; // Pfaffen
		"(\[l\])\[#.\](\[a\]\[ck\])" => "$1[#6]$2"; // gelblackierter
		"(\[b\])\[#.\](\[o\]\[ff\])" => "$1[#6]$2"; // halboffene
		"(\[hat\])\[#.\](\[s\])" => "$1[#1-]$2"; // hats
		"(\[s=\])\[#.\](\[k@r\])" => "$1[#1-]$2"; // skrofulösen
		"(\[&tn\])(\[vr\])" => "$1[#2]$2"; // Gärtner
		"(\[nn\])\[#.\](\[i\]\[g\])" => "$1[#2]$2"; // inniger
		"(\[rr\])\[#.\](\[o\]\[t\])" => "$1[#2]$2"; // Pierrot
		"(\[c@l3\])\[#.\](\[i\]\[q\])" => "$1[#2][d.][#3]$2"; // Clique
		"(\[g@r\])\[#.\](\[o\]\[sch\])" => "$1[#2]$2"; // Groschen
		"(\[z\])\[#.\](\[i\]\[ck\])" => "$1[#8]$2"; // zicken
		"(\[s\])\[#.\](\[i\]\[l\])" => "$1[#7]$2"; // einsilbig
		"(\[auf\])\[#.\](\[j\^\])" => "$1[#2-]$2"; // aufjauchzenden
		"(\[s\])\[#.\](\[pf\])" => "$1[#7]$2"; // Friedhofspforte
		"(\[s=\])\[#.\](\[a\]\[k@r\])" => "$1[#0]$2"; // Sakristeischlüssel
		"(\[&e\])\[#.\](\[sch@l3\])" => "$1[#0]$2"; // idem
		"(\[schw\])\[#.\](\[i\]\[nd@l3\])" => "$1[#7]$2"; // schwindlig
		"(\[nd@l3\])\[#.\](\[i\]\[g\])" => "$1[#3][sch.][#1]$2"; // idem
		"(\[t@r\])\[#.\](\[o\]\[f\])" => "$1[#6]$2"; // Trophäe
		"(\[\^ch@r\])(\[-e\])" => "$1[#2]$2"; // versichre
		"(\[l@l\])\[#.](\[(?:AR|ar)\^\])" => "$1[#3]$2"; // grellrote
		"(\[w\])\[#.\](\[k\])" => "$1[#2]$2"; // Litewka
		"(\[ck\])\[#.\](\[t\])" => "$1[#7]$2"; // Sacktücher
		"(\[l\])(\[&t\-1\]\[d\])" => "$1[#4]$2"; // Zeltdache
		"(\[b\])\[#.\](\[u\]\[x\])" => "$1[#6]$2"; // Buxen
		"(\[hab\])\[#.\](\[s\])" => "$1[#1]$2"; // habs
		"(\[bei\])\[#.\](\[sch\])" => "$1[#2-]$2"; // herbeischaffte
		"(\[nd@r\])\[#.\](\[a\]\[t\])" => "$1[#3][d.][#2]$2"; // Landrat
		"(\[st\])\[#.\](\[aus\])" => "$1[#1]$2"; // Festausschuss
		"(\[k\])\[#.\](\[a\]\[t\])" => "$1[#7]$2"; // dekatierte
		"(\[auf\])\[#.\](\[j\])" => "$1[#1-]$2"; // aufjagt
		"(\[fort\])\[#..\](\[f@l\])" => "$1[#4]$2"; // fortfliegen
		"(\[nk\])\[#.\](\[sch@r\])" => "$1[#2-]$2"; // Denkschrift
		"(\[w@r6\])\[#.\](\[(?:AR|ar)\^\])" => "$1[#1]$2"; // Widerrist
		"(\[ch\])\[#.\](\[u\]\[f\])" => "$1[#7]$2"; // Bachufer
		"(\[s\])\[#.\](\[o\]\[pf\])" => "$1[#7]$2"; // Liebesopfer
		"(\[sch@r\])\[#.\](\[i\]\[tt@l3\])" => "$1[#2][sch.][#5]$2"; // Fortschrittler
		"(\[b\])\[#.\](\[u\]\[ck@l3\])" => "$1[#6]$2"; // Buckligen
		"\[j\](\[#.\]\[o\]\[ck\])" => "[j^]$1"; // Pferdejockel
		"(\[z\])\[#.\](\[z@r\])" => "$1[#1-]$2"; // herzzerreissender
		"(\[in\])\[#.\](\[g@r\])" => "$1[#0]$2"; // Ingrimms
		"(\[(?:VR|vr)10\])\[#.\](\[sch@r\])" => "$1[#2-]$2"; // vierschrötig
		"(\[h\])(\[&ai@#\/\.\])(\[ai\]\[n\])" => "$1[#6]$2[#6-]$3"; // Limonenhainen
		"(\[ch@r\])\[#.\](\[a\]\[nd\])" => "$1[#6]$2"; // Bachrand
		"(\[t\])\[#.\](\[f@l\])" => "$1[#6]$2"; // Blutflecken
		"(\[c\])\[#.\](\[i\]\[b\])" => "$1[#6]$2"; // Ciborium
		"(\[zw\])\[#.\](\[i\]\[st\])" => "$1[#6]$2"; // Zwiste
		"(\[w\])\[#.\](\[u\]\[nd@r\])" => "$1[#0]$2"; // wundre
		"(\[s=\])\[#.\](\[a\]\[pp\])" => "$1[#6]$2"; // sapperlott
		"(\[c\])\[#.\](\[i\]\[p\])" => "$1[#2][sch.][#4]$2"; // Principessa
		"(\[b@l\])\[#.\](\[a\]\[nd\])" => "$1[#6]$2"; // Saint-Herbland
		"(\[k@l3\])\[#.\](\[-e\])" => "$1[#3]$2"; // Kleefeld
		"(\[&tvr\])(\[w\])" => "$1[#4]$2"; // Selterwasserzubereitungsmaschine (if not separated)
		"(\[d\])\[#.\](\[sch@r\])" => "$1[#0]$2"; // Geldschrank
		"(\[sch@r\])\[#.\](\[a\]\[nk\])" => "$1[#4][sch.][#3-]$2"; // idem
		"(\[k@r\])\[#.\](\[u\]\[p\])" => "$1[#7]$2"; // skrupellos
		"(\[tt\])\[#.\](\[t\])" => "$1[#7]$2"; // Betttuch (only modernized ortographe)
		"(\[h\])\[#.\](\[ch\])" => "$1[#5]$2"; // Schuhchen
		"(\[\^ch\])\[#.\](\[a\]\[t\])" => "$1[#8]$2"; // Bichats
		"(\[&th\])(\[a\]\[vr\])" => "$1[#3]$2"; // Kanthariden
		"(\[t\])\[#.\](\[a\]\[pf@r6\])" => "$1[#7]$2"; // tapfre
		"(\[n\])\[#.\](\[o\]\[tt\])" => "$1[#7]$2"; // Hugenotten
		"(\[t\])\[#.\](\[u\]\[nd\])" => "$1[#6]$2"; // Rotunde

		"\[i\](\[\^z1@l3\])" => "[#6][I]$1"; // kitzle - very special ...
		"\[\^ch\]$" => "[_^ch]"; 

		// kind of "rewriter" in postspacer ...
		"^\[ch\]" => "[welch]"; // Chef
		//"\[ei\]\[&e\](\\)" => "[-EI]$1"; // correction: Zweiparteiensystem => doesn't work: escaping problem! => investigate later
		"\[&t-1\]\[h\]" => "[&th]"; // dorther

		// recorrections
		//"(\[[NS])\[=\](@#_])" => "$1=$2"; // filter out [] around = (single upper case characters n, s with diacritics) 

		"(?<!\[#4-\])(\\\\)(\[=\])" => "[#4-]$1$2"; // u-förmigen, s-s-stündeler => reduce space
		// recorrections
		"(\[[lt]\])\[#..?](\\\\)(\[=\])" => "$1[#2-]$2$3"; // Heil= und Pflegeanstalt, Brot-

		"(\[&eits\])(\\\\)(\[m\])" => "$1$2[#4]$3"; // Gesundheitsminister
		"(\[nd\])\[#..?\](\\\\)(\[=\])" => "$1[#3-]$2$3"; // schielend-fragenden
		"(\[f\])\[#..?\](\\\\)(\[=\])" => "$1[#3-]$2$3"; // fünf- 
		"(\[h\])\[#..?](\\\\)(\[=\])" => "$1[#3-]$2$3"; // sachlich-wissenschaftlich
		"(\[-i\])(\\\\)(\[ng\])" => "$1[#3]$2$3"; // demi-jour
		"^(\[a\]\[l\])(\\\\)(?!\[#)" => "$1[#3]$2"; // là-haut, là-bas etc.
		"^(\[s=\]\[e\]\[l\])(\\\\)" => "$1[#2]$2"; // celle-ci, celle-là etc.
		"^(\[0d-\]\[#..?\]\[i\]\[s\]\[-i\])(\\\\)" => "$1[#3]$2"; // ici-bas etc.
		"^(\[au\]\[ng\])(\\\\)(\[a\]\[l\])$" => "$1$2[#4]$3"; // jusque-là
		"^(\[a\]\[b\])(\\\\)(?!\[#)" => "$1$2[#2]"; // bas-relief etc.
 
		"(\[=\])(\\\\\\\\)(\[k)" => "$1\[#3-]$3"; // Männer-K => hm ... kind of a big problem here ... instead of \ an earlier rule introduced \\ ... with all escaping needed we end up with 8 x \ here ... two possibilities: a) fix initial rule (and verify all the following rules), b) deals with \\ (and the 8x \) from here on ... going with option b (easier, because no earlier rule has to be verified)
		"(\[-ei\])\[#4-\]\\\\\[=\]" => "[-ei][#1-]\\[=]"; // zwei-, drei-, viermal => this whole escaping story is driving me crazy ...
		"(\[z\]\[&t\])\[#..\](\\\\)(\[=\])" => "$1[#3-]$2$3"; // Arzt-Patient
		"(\[ss\]\[-e\])\[#..\](\\\\)(\[=\])" => "$1[#3-]$2$3"; // Pisse-vache
		"(\[vr\]\|?\|?)\[#..\](\\\\)(\[=\])" => "$1[#3-]$2$3"; // Rinder-
		"(\[ng\])\|?\|?\[#..?\](\\\\)(\[=\])" => "$1|[#1-]$2$3"; // Browning-
		"(\[tt\])(\\\\)(\[d\])" => "$1$2[#4]$3"; // Herrgottdonner
		"(\[\^ll\^\])(\[a\]\[b\])" => "$1[#4]$2"; // Bouillabaisse

		"(\[nn\])\[#.\](\[ar\])" => "$1[#2-]$2"; // Spinnrad
		"(\[h\])\[#.\](\[h\])" => "$1[#3]$2"; // Fröhlichkeit
		"(\[&t&e\])(\[a\]\[st\])" => "$1[#4]$2"; // fantastische
		"(\[bei\])\[#.\](\[AR\^\])" => "[BEI+AR]"; // vorbeiritt ... hm rewriter ... improvised as hell ... :)
		//"\[bei\]\[#.\]\[ar\]" => "[BEI+AR]"; // vorbeireiten ... hm rewriter ... improvised as hell ... :)
		"(\[\^ch\])\[#.\](\[a\]\[&a\])" => "$1[#6]$2"; // Michael
		"(\[v\])\[#.\](\[ar\])" => "$1[#1]$2"; // davonrollenden
		"(\[auf\])\[#.\](\[k\])" => "$1[#1]$2"; // aufkommen
		"(\[&u\])\[#.\](\[durch\])" => "$1[#1]$2"; // undurchdringliche
		"(\[&th\])(\[u\]\[vr\])" => "$1[#3]$2"; // Arthur
		"(\[vr\])\[#.\](\[auf-\])" => "$1[#1]$2"; // heraufsehen
		"\[bei\]\[#.\]\[ar\]" => "[bei+ar]"; // vorbeireiten
		"(\[wird\])(\[s\])" => "$1[#2]$2"; // wirds
		"(\[z\])\[#.\](\[ur\])" => "$1[#6]$2"; // abzuurteilen
		"(\[zurück\])\[#.\](\[ar\])" => "$1[#0]$2"; // zurückreisen
		"(\[inter\])\[#.\](\[ar\])" => "$1[#0]$2"; // Interregnum
		"(\[inter\])\[#.\](\[&i\])" => "$1[#3]$2"; // Interieur
		"(\[&tion\])(\[@l\])" => "$1[#4-]$2"; // Portiönlein - just a quick fix (should be a combined token ..)
		"(\[0d-\])\[#.\](\[ion\])" => "$1[#1-]$2"; // Ion
		"(\[rück\])\[#.\](\[h\])" => "$1[#0]$2"; // Rückhalt
		"(\[q\])\[#.\](\[i\]\[ck@l3\])" => "$1[#1][D.][#6]$2"; // quickly
		"(\[&ts\])(\[g\])" => "$1[#4]$2"; // Schiffahrtsgesellschaft
		"(\[sch@l3\])\[#.\](\[u\]\[vr\])" => "$1[#1]$2"; // schlurfen
		"(\[l@r6\])\[#.\](\[u\]\[f\])" => "$1[#7]$2"; // Klingelruf
		"(\[n\])\[#.\](\[vorar\])" => "$1[#0]$2"; // Warenvorrat
		"(\[\^ch\])(\[&tch\])" => "$1[#2]$2"; // Lichtchen
		"(\[&eitb\])(\[a\]\[vr\])" => "$1[#4]$2"; // unbestreitbar
		"(\[f\])\[#.\](\[a\]\[ng@r\])" => "$1[#0]$2"; // umfangreich
		"(\[l\])\[#.\](\[vr\+ar\])" => "$1[#5]$2"; // schwindelerregende
		"(\[k\])\[#.\](\[a\]\[tt\])" => "$1[#8]$2"; // Kattun
		"(\[g@r\])\[#.\](\[a\]\[ff\])" => "$1[#7]$2"; // Agraffen	
		"(\[t\])\[#.\](\[o\]\[w\])" => "$1[#7]$2"; // tätowiert	
		"(\[k@r\])\[#.\](\[a\]\[pf\])" => "$1[#6]$2"; // Krapfen

		"(\[t\])(\\\\)'(\\\\)(\[s\])" => "$1$2[#2]'$3$4"; // steht's

		"(\[t\]\[#.\]\[s\])(\\\\)(\[0n-\])" => "$1[#4]$2$3"; // Staatsangestelltenverband

		"(\\\\)\[n\]" => "$1[n=]]"; // z'Nacht

		// In VSTENO you go from one problem to another ...
		// Reducing spacing before / after [=] seemed to be a good and straightforward idea.
		// But: It turns out, that tokens with underscore are not written correctly anymore (because, due to the spacing, they are not considered
		// as final tokens any more).
		// Try to solve this again, by introducing an additional word border.
		// Additional comments: 
		// - the Stolze-Schrey system is basically tolerant in those cases, but the standard case is to not write the underscore, so it's better 
		//   to apply this rule.
		// - however, this might (again...) break the shortened shorthand (Eilschrift) rules (where there are cases in which the writing or not 
		//   writing of the underscore can make a difference in meaning!

		"(\[#..?\])(\\\\)(\[=\])" => "$2[#2-]$1$2$3"; // apply this to all distances and all = (example: griechisch-lateinisch)
		"(\')\[AR\^\]" => "$1\[AR^]"; // Bundesg'richt

		// first tokens (at least some of them) arent written correctly if preceeded by " => insert \
		//"^(\[schw\])" => "\\\\$1"; // this rule doesn't work ... at this point, regex has no control over " (only stage 0 can do that...)
		// no solution for this problem for the moment ... 

		"(?<!\[ich\]|\[&t\]|\[d\])(\\\\)'" => "$1[#5-]'"; // wenn's
		"(\[ich\])(\\\\)'" => "$1$2[#2]'"; // ich's
		"(\[d\])(\\\\)'" => "$1$2[#1-]'"; // d'Aiglemont
		"'(\\\\)\[s\]$" => "'$1[=S]"; // ist's
		"(\[f\])(\\\\)(\[#[0-9]-?\])'" => "$1$2[#1-]'"; // half's

		"\[heit\]\[&e\]" => "[&eit&e]"; // produces problems with cli
		"\[et3\/4\]\[&e\]" => "[&t&e]"; // beobachtete (problems with cli)
		"(\[0n-\])\[en\](\[o\]\[&e\])" => "$1[#7]$2"; // denen (problems with cli)
		"\[et\]\[&e\]" => "[&et&e]"; // beschatteten (problems with cli)
		"\[&t\]\[schaft\]" => "[&tschaft]"; // Wirtschafterin (problems with cli)
		"\[&t\]\[&e\]" => "[&t&e]"; // erwiderte (problems with cli)

	#EndSubSection(postspacer)
	#BeginSubSection(exitkiller)
		// not needed for font
	#EndSubSection(exitkiller)
	#BeginSubSection(diacritics)
		// not needed for font
	#EndSubSection(diacritics)
	#BeginSubSection(finalizer)
		// SHARED FONT: BORROWING MODEL MUST TAKE CARE OF THIS! (IF NECESSARY)		
		// convert all to upper case for final rendering [a-z]|ä|ö|ü
		"(^.*?$)" => "strtoupper()";
		
		//"ä" => "Ä";	// strtolower() works with umlaut, but strtoupper() doesn't ?!
		//"ö" => "Ö";
		//"ü" => "Ü"; 
	#EndSubSection(finalizer,=:prt)
#EndSection(rules)
